syntax = "proto3";
package openim.sdk.shared;

import "common.proto";

option csharp_namespace = "OpenIM.Proto";
option go_package = "github.com/openimsdk/openim-sdk-core/v3/proto/go/shared";
option swift_prefix = "";

// ############## user ################

// IM User information
message IMUser {
  // @user_id
  string userID = 1;
  // @user_nickname
  string nickname = 2;
  // @user_face_url
  string faceURL = 3;
  // @user_ex
  string ex = 4;
  // @user_create_time
  int64 createTime = 5;
  // @user_global_recv_msg_opt
  common.GlobalRecvMsgOpt globalRecvMsgOpt = 6;
  // @user_attached
  string attached = 7;
}

message CommandInfo {
  // @user_id
  string userID = 1;
  // @user_command_type
  int32 type = 2;
  // command create time
  int64 createTime = 3;
  // @user_command_uuid
  string uuid = 4;
  // @user_command_value
  string value = 5;
  // @user_command_ex
  string ex = 6;
}

// ############## relation ################

// IM Friend information
message IMFriend {
  // @shared_owner_user_id
  string ownerUserID = 1;
  // @relation_friend_user_id
  string friendUserID = 2;
  // @relation_remark
  string remark = 3;
  // @relation_friend_add_time
  int64 createTime = 4;
  // @relation_friend_add_source
  common.FriendSource addSource = 5;
  // @relation_friend_op_user_id
  string operatorUserID = 6;
  // Friend nickname
  string nickname = 7;
  // Friend avatar URL
  string faceURL = 8;
  // Friend extension field
  string ex = 9;
  // SDK internal extension field, not currently used
  string attachedInfo = 10;
  // @user_pinned
  bool isPinned = 11;
}

message IMBlack {
  // @shared_owner_user_id
  string ownerUserID = 1;
  // Blocked user ID
  string blockUserID = 2;
  // Blocked user nickname
  string nickname = 3;
  // Blocked user avatar URL
  string faceURL = 4;
  // @relation_black_block_time
  int64 createTime = 5;
  // @realtion_friend_add_source
  common.FriendSource addSource = 6;
  // @relation_black_op_user_id
  string operatorUserID = 7;
  // @relation_black_ex
  string ex = 8;
  // @relation_attached
  string attached = 9;
}

message IMFriendApplication {
  // Requester user ID
  string fromUserID = 1;
  // Requester nickname
  string fromNickname = 2;
  // Requester avatar URL
  string fromFaceURL = 3;
  // Receiver user ID
  string toUserID = 4;
  // Receiver nickname
  string toNickname = 5;
  // Receiver avatar URL
  string toFaceURL = 6;
  // Request handle result
  common.HandleResult handleResult = 7;
  // Request message
  string reqMsg = 8;
  // Request create time
  int64 createTime = 9;
  // Request handler user ID
  string handlerUserID = 10;
  // Request handle message
  string handleMsg = 11;
  // Request handle time
  int64 handleTime = 12;
  // Request extension field
  string ex = 13;
  // @relation_attached
  string attached = 14;
}

// ############## group ################

enum GroupStatus {
  // normal group chat
  Default = 0;
  // the group chat has been banned
  Banned = 1;
  // the group chat has been dismissed
  Dismissed = 2;
  // the group chat has been muted
  Muted = 3;
}

enum GroupJoinSource {
  GroupJoinSource_ = 0;
  // administrator invitation to join
  Admin = 1;
  // invite to join
  Invitation = 2;
  // search to join
  Search = 3;
  // scan code to join
  QRCode = 4;
}

enum GroupNeedVerification {
  // application requires consent, and invitation is direct entry.
  ApplyNeedVerificationInviteDirectly = 0;
  // everyone entering the group needs to be verified, except for those invited by the group owner or administrator.
  AllNeedVerification = 1;
  // direct access to group chat.
  DirectAccess = 2;
}

enum GroupLookMemberInfo {
  // do not allow access to member information via the group
  ProhibitGroupLookMemberInfo = 0;
  // allow access to member information via the group
  AllowGroupLookMemberInfo = 1;
}

enum GroupApplyMemberFriend {
  // do not allow group members to add friends directly
  ProhibitGroupApplyMemberFriend = 0;
  // allow group members to add friends directly
  AllowGroupApplyMemberFriend = 1;
}

message IMGroup {
  // @group_id
  string groupID = 1;
  // @group_name
  string groupName = 2;
  // @group_notification
  string notification = 3;
  // @group_introduction
  string introduction = 4;
  // @group_face_url
  string faceURL = 5;
  // @group_owner_user_id
  string ownerUserID = 6;
  // @group_create_time
  int64 createTime = 7;
  // @group_member_count
  int64 memberCount = 8;
  // @group_ex
  string ex = 9;
  // @group_status
  GroupStatus status = 10;
  // @group_creator_user_id
  string creatorUserID = 11;
  // @group_need_verification
  GroupNeedVerification needVerification = 12;
  // @group_look_member_info
  GroupLookMemberInfo lookMemberInfo = 13;
  // @group_apply_member_friend
  GroupApplyMemberFriend applyMemberFriend = 14;
  // @group_notification_update_time
  int64 notificationUpdateTime = 15;
  // @group_notification_user_id
  string notificationUserID = 16;
  // @group_attached_info
  string attachedInfo = 17;
}

message IMGroupMember {
  // @group_id
  string groupID = 1;
  // @group_member_user_id
  string userID = 2;
  // @group_member_nickname
  string nickname = 3;
  // @group_member_face_url
  string faceURL = 4;
  // @group_member_role
  common.GroupMemberRoleLevel roleLevel = 5;
  // @group_member_join_time
  int64 joinTime = 6;
  // @group_member_join_source
  GroupJoinSource joinSource = 7;
  // @group_member_inviter_user_id
  string inviterUserID = 8;
  // @group_member_mute_end_time
  int64 muteEndTime = 9;
  // @group_member_operator_user_id
  string operatorUserID = 10;
  // @group_member_ex
  string ex = 11;
  // @group_member_attached_info
  string attachedInfo = 12;
}

message IMGroupApplication {
  // @group_id
  string groupID = 1;
  // @group_name
  string groupName = 2;
  // @group_notification
  string notification = 3;
  // @group_introduction
  string introduction = 4;
  // @group_face_url
  string groupFaceURL = 5;
  // @group_create_time
  int64 createTime = 6;
  // @group_status
  int32 status = 7;
  // @group_creator_user_id
  string creatorUserID = 8;
  // @group_owner_user_id
  string ownerUserID = 9;
  // @group_member_count
  int32 memberCount = 10;
  // @user_id
  string userID = 11;
  // @user_nickname
  string nickname = 12;
  // @user_face_url
  string userFaceURL = 13;
  // group application handle result
  common.HandleResult handleResult = 14;
  // group application request message
  string reqMsg = 15;
  // group application handle message
  string handledMsg = 16;
  // group application create time
  int64 reqTime = 17;
  // group application handle user id
  string handleUserID = 18;
  // group application handle time
  int64 handledTime = 19;
  // group application extension field
  string ex = 20;
  // @group_member_attached_info
  string attachedInfo = 21;
  // @group_member_join_source
  GroupJoinSource joinSource = 22;
  // @group_member_inviter_user_id
  string inviterUserID = 23;
}

// ############## conversation ################

message IMConversation {
  // @conversation_id
  string conversationID = 1;
  // @conversation_type
  common.SessionType conversationType = 2;
  // @user_id
  string userID = 3;
  // @group_id
  string groupID = 4;
  // @conversation_show_name
  string showName = 5;
  // @user_face_url
  string faceURL = 6;
  // @conversation_recv_msg_opt
  common.ConvRecvMsgOpt recvMsgOpt = 7;
  // @conversation_unread_count
  int32 unreadCount = 8;
  // @conversation_group_at_type
  common.ConvGroupAtType groupAtType = 9;
  // @conversation_latest_msg
  IMMessage latestMsg = 10;
  // @conversation_latest_msg_send_time
  int64 latestMsgSendTime = 11;
  // @conversation_draft_text
  string draftText = 12;
  // @conversation_draft_text_time
  int64 draftTextTime = 13;
  // @conversation_is_pinned
  bool isPinned = 14;
  // @conversation_is_private
  bool isPrivateChat = 15;
  // @conversation_burn_duration
  int32 burnDuration = 16;
  // @conversation_ex
  string ex = 17;
}

message AtInfo {
  // @message_at_user_id
  string atUserID = 1;
  // @message_group_nick_name
  string groupNickname = 2;
}

message ImageInfo {
  // @message_image_width
  int32 width = 1;
  // @message_image_height
  int32 height = 2;
  // @message_image_type
  string type = 3;
  // @message_image_size
  int64 size = 4;
}

message PictureBaseInfo {
  // picture uuid
  string uuid = 1;
  // picture type
  string type = 2;
  // picture size
  int64 size = 3;
  // picture width
  int32 width = 4;
  // picture height
  int32 height = 5;
  // picture url
  string url = 6;
}

message SoundBaseInfo {
  // sound uuid
  string uuid = 1;
  // sound local path
  string soundPath = 2;
  // sound source URL
  string sourceURL = 3;
  // sound size
  int64 dataSize = 4;
  // sound duration
  int64 duration = 5;
  // sound type
  string soundType = 6;
}

message VideoBaseInfo {
  // video local path
  string videoPath = 1;
  // video uuid
  string videoUUID = 2;
  // video source URL
  string videoURL = 3;
  // video type
  string videoType = 4;
  // video size
  int64 videoSize = 5;
  // video duration
  int64 duration = 6;
  // video snapshot local path
  string snapshotPath = 7;
  // video snapshot uuid
  string snapshotUUID = 8;
  // video snapshot size
  int64 snapshotSize = 9;
  // video snapshot URL
  string snapshotURL = 10;
  // video snapshot width
  int32 snapshotWidth = 11;
  // video snapshot height
  int32 snapshotHeight = 12;
  // video snapshot type
  string snapshotType = 13;
}

message FileBaseInfo {
  // file local path
  string filePath = 1;
  // file uuid
  string uuid = 2;
  // file source URL
  string sourceURL = 3;
  // file name
  string fileName = 4;
  // file size
  int64 fileSize = 5;
  // file type
  string fileType = 6;
}

message TextElem {
  // text content
  string content = 1;
}

message CardElem {
  // @user_id
  string userID = 1;
  // @user_nickname
  string nickname = 2;
  // @user_face_url
  string faceURL = 3;
  // @user_ex
  string ex = 4;
}

message PictureElem {
  // picture local path
  string sourcePath = 1;
  // picture big local path
  string bigPath = 2;
  // picture snapshot local path
  string snapshotPath = 3;
  // source picture info
  PictureBaseInfo sourcePicture = 4;
  // big picture info
  PictureBaseInfo bigPicture = 5;
  // snapshot picture info
  PictureBaseInfo snapshotPicture = 6;
}

message SoundElem {
  // sound uuid
  string uuid = 1;
  // sound local path
  string soundPath = 2;
  // sound source URL
  string sourceURL = 3;
  // sound size
  int64 dataSize = 4;
  // sound duration
  int64 duration = 5;
  // sound type
  string soundType = 6;
}

message VideoElem {
  // video local path
  string videoPath = 1;
  // video uuid
  string videoUUID = 2;
  // video source URL
  string videoURL = 3;
  // video type
  string videoType = 4;
  // video size
  int64 videoSize = 5;
  // video duration
  int64 duration = 6;
  // video snapshot local path
  string snapshotPath = 7;
  // video snapshot uuid
  string snapshotUUID = 8;
  // video snapshot size
  int64 snapshotSize = 9;
  // video snapshot URL
  string snapshotURL = 10;
  // video snapshot width
  int32 snapshotWidth = 11;
  // video snapshot height
  int32 snapshotHeight = 12;
  // video snapshot type
  string snapshotType = 13;
}

message FileElem {
  // file local path
  string filePath = 1;
  // file uuid
  string uuid = 2;
  // file source URL
  string sourceURL = 3;
  // file name
  string fileName = 4;
  // file size
  int64 fileSize = 5;
  // file type
  string fileType = 6;
}

message ErrorElem {
  // parsing failed for the original ContentType
  common.ContentType contentType = 1;
  // parsing failed for the original content
  string content = 2;
  // parsing failed for the original cause
  string cause = 3;
}

message MessageEntity {
  // message entity type
  string type = 1;
  // message entity offset
  int32 offset = 2;
  // message entity length
  int32 length = 3;
  // message entity data
  string url = 4;
  // message entity data
  string ex = 5;
}

message MergeElem {
  // merge message title
  string title = 1;
  // merge message summary
  repeated string abstractList = 2;
  // merge message message list
  repeated IMMessage multiMessage = 3;
  // merge message entity list
  repeated MessageEntity messageEntities = 4;
}

message AtTextElem {
  // text content
  string text = 1;
  // at user info list
  repeated AtInfo atUsersInfo = 2;
  // quote message
  IMMessage quoteMessage = 3;
}

message FaceElem {
  // face index
  int32 index = 1;
  // face data
  string data = 2;
}

message LocationElem {
  // location description
  string description = 1;
  // location longitude
  double longitude = 2;
  // location latitude
  double latitude = 3;
}

message CustomElem {
  // custom message data
  string data = 1;
  // custom message description
  string description = 2;
  // custom message extension field
  string extension = 3;
}

message QuoteElem {
  // message text
  string text = 1;
  // quote message
  IMMessage quoteMessage = 2;
  // message entity list
  repeated MessageEntity messageEntities = 3;
}

message AdvancedTextElem {
  // text content
  string text = 1;
  // message entity list
  repeated MessageEntity messageEntities = 2;
}

message TypingElem {
  // typing status
  string msgTips = 1;
}

message StreamElem {
  // stream type
  string type = 1;
  // stream content
  string content = 2;
  // stream packet list
  repeated string packets = 3;
  // stream is end
  bool end = 4;
}

message UploadProgress {
  // total
  int64 total = 1;
  // save
  int64 save = 2;
  // current
  int64 current = 3;
  // uploadID
  string uploadID = 4;
}

message AttachedInfoElem {
  // is private chat
  bool isPrivateChat = 1;
  // message burn duration
  int32 burnDuration = 2;
  // message has read time(timestamp)
  int64 hasReadTime = 3;
  // upload progress
  UploadProgress progress = 4;
}

// ############## notification ##############

message OaTips {
  // notification name
  string notificationName = 1;
  // notification face URL
  string notificationFaceURL = 2;
  // notification type
  int32 notificationType = 3;
  // notification content
  string text = 4;
  // notification URL
  string url = 5;
  // mix type
  int32 mixType = 6;
  // picture message
  PictureElem pictureElem = 7;
  // sound message
  SoundElem soundElem = 8;
  // video message
  VideoElem videoElem = 9;
  // file message
  FileElem fileElem = 10;
  // OA notification extension field
  string ex = 11;
}

//////////////////////group/////////////////////

message GroupCreatedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // created group operator user info
  shared.IMGroupMember opUser = 2;
  // group member info list
  repeated shared.IMGroupMember memberList = 3;
  // group created time
  int64 operationTime = 4;
  // group owner info
  shared.IMGroupMember groupOwnerUser = 5;
}

message GroupInfoSetNameTips {
  // Set group name operator user info
  openim.sdk.shared.IMGroupMember opUser = 1;
  // @shared_imgroup
  openim.sdk.shared.IMGroup group = 2;
}

message GroupInfoSetAnnouncementTips {
  // Set group announcement operator user info
  openim.sdk.shared.IMGroupMember opUser = 1;
  // @shared_imgroup
  openim.sdk.shared.IMGroup group = 2;
  // group member incr version
  uint64 groupMemberVersion = 3;
  // group member incr version ID
  string groupMemberVersionID = 4;
}

message MemberQuitTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // quit group user info
  shared.IMGroupMember quitUser = 2;
  // quited group time
  int64 operationTime = 3;
}

message GroupOwnerTransferredTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // transfer group owner operator user info
  shared.IMGroupMember opUser = 2;
  // new group owner info
  shared.IMGroupMember newGroupOwner = 3;
  // old group owner user ID
  string oldGroupOwner = 4;
  // transfer group owner time
  int64 operationTime = 5;
  // old group owner info
  shared.IMGroupMember oldGroupOwnerInfo = 6;
}

message MemberKickedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // operator group user info
  shared.IMGroupMember opUser = 2;
  // kicked group member info list
  repeated shared.IMGroupMember kickedUserList = 3;
  // kicked group member time
  int64 operationTime = 4;
}

message MemberInvitedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // invite group operator user info
  shared.IMGroupMember opUser = 2;
  // invited user info list
  repeated shared.IMGroupMember invitedUserList = 3;
  // invited member time
  int64 operationTime = 4;
  // inviter user info
  shared.IMGroupMember inviterUser = 7;
}

message MemberEnterTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // enter group user info
  shared.IMGroupMember entrantUser = 2;
  // enter group time
  int64 operationTime = 3;
}

message GroupDismissedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // dismiss group operator user info
  shared.IMGroupMember opUser = 2;
  // dismiss group time
  int64 operationTime = 3;
}

message GroupMemberMutedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // mute group member operator user info
  shared.IMGroupMember opUser = 2;
  // mute group member time
  int64 operationTime = 3;
  // muted group member info
  shared.IMGroupMember mutedUser = 4;
  // muted seconds
  uint32 mutedSeconds = 5;
}

message GroupMemberCancelMutedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // cancel mute group operator user info
  shared.IMGroupMember opUser = 2;
  // cancel mute group member time
  int64 operationTime = 3;
  // cancel muted group member info
  shared.IMGroupMember mutedUser = 4;
}

message GroupMutedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // mute group operator user info
  shared.IMGroupMember opUser = 2;
  // mute group time
  int64 operationTime = 3;
}

message GroupCancelMutedTips {
  // @shared_imgroup
  shared.IMGroup group = 1;
  // cancel mute group operator user info
  shared.IMGroupMember opUser = 2;
  // cancel mute group time
  int64 operationTime = 3;
}

message FromToUserID {
  // sender user ID
  string fromUserID = 1;
  // receiver user ID
  string toUserID = 2;
}

message FriendApplicationApprovedTips {
  // request relation user ID
  FromToUserID fromToUserID = 1;
}

message RevokedTips {
  // revoked user ID
  string revokerID = 1;
  // revoked user role
  common.RevokerRole revokerRole = 2;
  // @message_client_msg_id
  string clientMsgID = 3;
  // revoked user nickname
  string revokerNickname = 4;
  // revoked time
  int64 revokeTime = 5;
  // revoked message send time
  int64 sourceMessageSendTime = 6;
  // revoked message sender ID
  string sourceMessageSendID = 7;
  // revoked message sender nickname
  string sourceMessageSenderNickname = 8;
  // @message_session_type
  common.SessionType sessionType = 10;
  // @message_seq
  int64 seq = 11;
  // revoked message extension field
  string ex = 12;
}

message ConversationPrivateChatTips {
  // @message_recv_id
  string recvID = 1;
  // @message_send_id
  string sendID = 2;
  // @conversation_is_private
  bool isPrivate = 3;
  // @conversation_id
  string conversationID = 4;
}

message BusinessTips {
  // key
  string key = 1;
  // custom notification content
  string data = 2;
}

message IMMessage {
  // @message_client_msg_id
  string clientMsgID = 1;
  // @message_server_msg_id
  string serverMsgID = 2;
  // @message_create_time
  int64 createTime = 3;
  // @message_send_time
  int64 sendTime = 4;
  // @message_session_type
  common.SessionType sessionType = 5;
  // @message_send_id
  string sendID = 6;
  // @message_recv_id
  string recvID = 7;
  // @message_msg_from
  common.MsgFrom msgFrom = 8;
  // @common_content_type
  common.ContentType contentType = 9;
  // @common_platform
  common.Platform senderPlatformID = 10;
  // sender nickname
  string senderNickname = 11;
  // sender avatar URL
  string senderFaceURL = 12;
  // @group_id
  string groupID = 13;
  // @message_seq
  int64 seq = 15;
  // message is read
  bool isRead = 16;
  // @message_msg_status
  common.MsgStatus status = 17;
  // offline push info
  common.OfflinePushInfo offlinePush = 18;
  // message extension field
  string ex = 20;
  // local extension field
  string localEx = 21;
  // message attached info
  AttachedInfoElem attachedInfoElem = 22;
  oneof content {
    // text message
    TextElem textElem = 23;
    // card message
    CardElem cardElem = 24;
    // picture message
    PictureElem pictureElem = 25;
    // sound message
    SoundElem soundElem = 26;
    // video message
    VideoElem videoElem = 27;
    // file message
    FileElem fileElem = 28;
    // merge message
    MergeElem mergeElem = 29;
    // at text message
    AtTextElem atTextElem = 30;
    // face message
    FaceElem faceElem = 31;
    // location message
    LocationElem locationElem = 32;
    // custom message
    CustomElem customElem = 33;
    // quote message
    QuoteElem quoteElem = 34;
    // advanced text message
    AdvancedTextElem advancedTextElem = 35;
    // input status
    TypingElem typingElem = 36;
    // stream message
    StreamElem streamElem = 37;

    // revoke message notification
    RevokedTips revokedTips = 38;
    // error message
    ErrorElem errorElem = 39;

    // group created notification
    GroupCreatedTips groupCreatedTips = 311;
    // group information set name notification
    GroupInfoSetNameTips groupInfoSetNameTips = 312;
    // group information set announcement notification
    GroupInfoSetAnnouncementTips groupInfoSetAnnouncementTips = 313;
    // member quit notification
    MemberQuitTips memberQuitTips = 43;
    // group owner transferred notification
    GroupOwnerTransferredTips groupOwnerTransferredTips = 46;
    // member kicked notification
    MemberKickedTips memberKickedTips = 47;
    // member invited notification
    MemberInvitedTips memberInvitedTips = 48;
    // member enter notification
    MemberEnterTips memberEnterTips = 49;
    // group dismissed notification
    GroupDismissedTips groupDismissedTips = 50;
    // group member muted notification
    GroupMemberMutedTips groupMemberMutedTips = 51;
    // group member cancel muted notification
    GroupMemberCancelMutedTips groupMemberCancelMutedTips = 52;
    // group muted notification
    GroupMutedTips groupMutedTips = 53;
    // group unmuted notification
    GroupCancelMutedTips groupCancelMutedTips = 54;
    // friend request approved notification
    FriendApplicationApprovedTips friendApplicationApprovedTips = 57;
    // conversation private chat notification
    ConversationPrivateChatTips conversationPrivateChatTips = 79;
    // custom notification
    BusinessTips businessTips = 80;
    // OA system notification
    OaTips oaTips = 81;
  }
}
