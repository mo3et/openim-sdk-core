// source: msggateway.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.openim.ffi.GetUsersOnlineStatusReq', null, global);
goog.exportSymbol('proto.openim.ffi.GetUsersOnlineStatusResp', null, global);
goog.exportSymbol('proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail', null, global);
goog.exportSymbol('proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail', null, global);
goog.exportSymbol('proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult', null, global);
goog.exportSymbol('proto.openim.ffi.KickUserOfflineReq', null, global);
goog.exportSymbol('proto.openim.ffi.KickUserOfflineResp', null, global);
goog.exportSymbol('proto.openim.ffi.MultiTerminalLoginCheckReq', null, global);
goog.exportSymbol('proto.openim.ffi.MultiTerminalLoginCheckResp', null, global);
goog.exportSymbol('proto.openim.ffi.OnlineBatchPushOneMsgReq', null, global);
goog.exportSymbol('proto.openim.ffi.OnlineBatchPushOneMsgResp', null, global);
goog.exportSymbol('proto.openim.ffi.OnlinePushMsgReq', null, global);
goog.exportSymbol('proto.openim.ffi.OnlinePushMsgResp', null, global);
goog.exportSymbol('proto.openim.ffi.SingleDetail', null, global);
goog.exportSymbol('proto.openim.ffi.SingleMsgToUserPlatform', null, global);
goog.exportSymbol('proto.openim.ffi.SingleMsgToUserResults', null, global);
goog.exportSymbol('proto.openim.ffi.SinglePlatformToken', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.OnlinePushMsgReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.OnlinePushMsgReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.OnlinePushMsgReq.displayName = 'proto.openim.ffi.OnlinePushMsgReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.OnlinePushMsgResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.OnlinePushMsgResp.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.OnlinePushMsgResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.OnlinePushMsgResp.displayName = 'proto.openim.ffi.OnlinePushMsgResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.SingleMsgToUserResults = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.SingleMsgToUserResults.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.SingleMsgToUserResults, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.SingleMsgToUserResults.displayName = 'proto.openim.ffi.SingleMsgToUserResults';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.OnlineBatchPushOneMsgReq.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.OnlineBatchPushOneMsgReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.OnlineBatchPushOneMsgReq.displayName = 'proto.openim.ffi.OnlineBatchPushOneMsgReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.OnlineBatchPushOneMsgResp.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.OnlineBatchPushOneMsgResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.OnlineBatchPushOneMsgResp.displayName = 'proto.openim.ffi.OnlineBatchPushOneMsgResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.SingleMsgToUserPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.SingleMsgToUserPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.SingleMsgToUserPlatform.displayName = 'proto.openim.ffi.SingleMsgToUserPlatform';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.GetUsersOnlineStatusReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.GetUsersOnlineStatusReq.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.GetUsersOnlineStatusReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.GetUsersOnlineStatusReq.displayName = 'proto.openim.ffi.GetUsersOnlineStatusReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.GetUsersOnlineStatusResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.GetUsersOnlineStatusResp.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.GetUsersOnlineStatusResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.GetUsersOnlineStatusResp.displayName = 'proto.openim.ffi.GetUsersOnlineStatusResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.displayName = 'proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.displayName = 'proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.displayName = 'proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.SingleDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.SingleDetail.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.SingleDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.SingleDetail.displayName = 'proto.openim.ffi.SingleDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.SinglePlatformToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.SinglePlatformToken.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.SinglePlatformToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.SinglePlatformToken.displayName = 'proto.openim.ffi.SinglePlatformToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.KickUserOfflineReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.openim.ffi.KickUserOfflineReq.repeatedFields_, null);
};
goog.inherits(proto.openim.ffi.KickUserOfflineReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.KickUserOfflineReq.displayName = 'proto.openim.ffi.KickUserOfflineReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.KickUserOfflineResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.KickUserOfflineResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.KickUserOfflineResp.displayName = 'proto.openim.ffi.KickUserOfflineResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.MultiTerminalLoginCheckReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.MultiTerminalLoginCheckReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.MultiTerminalLoginCheckReq.displayName = 'proto.openim.ffi.MultiTerminalLoginCheckReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openim.ffi.MultiTerminalLoginCheckResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openim.ffi.MultiTerminalLoginCheckResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openim.ffi.MultiTerminalLoginCheckResp.displayName = 'proto.openim.ffi.MultiTerminalLoginCheckResp';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.OnlinePushMsgReq.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.OnlinePushMsgReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.OnlinePushMsgReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlinePushMsgReq.toObject = function(includeInstance, msg) {
  var f, obj = {
pushtouserid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.OnlinePushMsgReq}
 */
proto.openim.ffi.OnlinePushMsgReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.OnlinePushMsgReq;
  return proto.openim.ffi.OnlinePushMsgReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.OnlinePushMsgReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.OnlinePushMsgReq}
 */
proto.openim.ffi.OnlinePushMsgReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPushtouserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.OnlinePushMsgReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.OnlinePushMsgReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.OnlinePushMsgReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlinePushMsgReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushtouserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string pushToUserID = 2;
 * @return {string}
 */
proto.openim.ffi.OnlinePushMsgReq.prototype.getPushtouserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.OnlinePushMsgReq} returns this
 */
proto.openim.ffi.OnlinePushMsgReq.prototype.setPushtouserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.OnlinePushMsgResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.OnlinePushMsgResp.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.OnlinePushMsgResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.OnlinePushMsgResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlinePushMsgResp.toObject = function(includeInstance, msg) {
  var f, obj = {
respList: jspb.Message.toObjectList(msg.getRespList(),
    proto.openim.ffi.SingleMsgToUserPlatform.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.OnlinePushMsgResp}
 */
proto.openim.ffi.OnlinePushMsgResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.OnlinePushMsgResp;
  return proto.openim.ffi.OnlinePushMsgResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.OnlinePushMsgResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.OnlinePushMsgResp}
 */
proto.openim.ffi.OnlinePushMsgResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openim.ffi.SingleMsgToUserPlatform;
      reader.readMessage(value,proto.openim.ffi.SingleMsgToUserPlatform.deserializeBinaryFromReader);
      msg.addResp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.OnlinePushMsgResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.OnlinePushMsgResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.OnlinePushMsgResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlinePushMsgResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRespList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openim.ffi.SingleMsgToUserPlatform.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SingleMsgToUserPlatform resp = 1;
 * @return {!Array<!proto.openim.ffi.SingleMsgToUserPlatform>}
 */
proto.openim.ffi.OnlinePushMsgResp.prototype.getRespList = function() {
  return /** @type{!Array<!proto.openim.ffi.SingleMsgToUserPlatform>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.SingleMsgToUserPlatform, 1));
};


/**
 * @param {!Array<!proto.openim.ffi.SingleMsgToUserPlatform>} value
 * @return {!proto.openim.ffi.OnlinePushMsgResp} returns this
*/
proto.openim.ffi.OnlinePushMsgResp.prototype.setRespList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openim.ffi.SingleMsgToUserPlatform=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform}
 */
proto.openim.ffi.OnlinePushMsgResp.prototype.addResp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openim.ffi.SingleMsgToUserPlatform, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.OnlinePushMsgResp} returns this
 */
proto.openim.ffi.OnlinePushMsgResp.prototype.clearRespList = function() {
  return this.setRespList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.SingleMsgToUserResults.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.SingleMsgToUserResults.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.SingleMsgToUserResults} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleMsgToUserResults.toObject = function(includeInstance, msg) {
  var f, obj = {
userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
respList: jspb.Message.toObjectList(msg.getRespList(),
    proto.openim.ffi.SingleMsgToUserPlatform.toObject, includeInstance),
onlinepush: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.SingleMsgToUserResults}
 */
proto.openim.ffi.SingleMsgToUserResults.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.SingleMsgToUserResults;
  return proto.openim.ffi.SingleMsgToUserResults.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.SingleMsgToUserResults} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.SingleMsgToUserResults}
 */
proto.openim.ffi.SingleMsgToUserResults.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = new proto.openim.ffi.SingleMsgToUserPlatform;
      reader.readMessage(value,proto.openim.ffi.SingleMsgToUserPlatform.deserializeBinaryFromReader);
      msg.addResp(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlinepush(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.SingleMsgToUserResults.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.SingleMsgToUserResults} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleMsgToUserResults.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRespList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openim.ffi.SingleMsgToUserPlatform.serializeBinaryToWriter
    );
  }
  f = message.getOnlinepush();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.SingleMsgToUserResults} returns this
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated SingleMsgToUserPlatform resp = 2;
 * @return {!Array<!proto.openim.ffi.SingleMsgToUserPlatform>}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.getRespList = function() {
  return /** @type{!Array<!proto.openim.ffi.SingleMsgToUserPlatform>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.SingleMsgToUserPlatform, 2));
};


/**
 * @param {!Array<!proto.openim.ffi.SingleMsgToUserPlatform>} value
 * @return {!proto.openim.ffi.SingleMsgToUserResults} returns this
*/
proto.openim.ffi.SingleMsgToUserResults.prototype.setRespList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openim.ffi.SingleMsgToUserPlatform=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.addResp = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openim.ffi.SingleMsgToUserPlatform, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.SingleMsgToUserResults} returns this
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.clearRespList = function() {
  return this.setRespList([]);
};


/**
 * optional bool onlinePush = 3;
 * @return {boolean}
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.getOnlinepush = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openim.ffi.SingleMsgToUserResults} returns this
 */
proto.openim.ffi.SingleMsgToUserResults.prototype.setOnlinepush = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.OnlineBatchPushOneMsgReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.toObject = function(includeInstance, msg) {
  var f, obj = {
pushtouseridsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgReq}
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.OnlineBatchPushOneMsgReq;
  return proto.openim.ffi.OnlineBatchPushOneMsgReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgReq}
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addPushtouserids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.OnlineBatchPushOneMsgReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPushtouseridsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string pushToUserIDs = 2;
 * @return {!Array<string>}
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.getPushtouseridsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgReq} returns this
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.setPushtouseridsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgReq} returns this
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.addPushtouserids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgReq} returns this
 */
proto.openim.ffi.OnlineBatchPushOneMsgReq.prototype.clearPushtouseridsList = function() {
  return this.setPushtouseridsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.OnlineBatchPushOneMsgResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.toObject = function(includeInstance, msg) {
  var f, obj = {
singlepushresultList: jspb.Message.toObjectList(msg.getSinglepushresultList(),
    proto.openim.ffi.SingleMsgToUserResults.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgResp}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.OnlineBatchPushOneMsgResp;
  return proto.openim.ffi.OnlineBatchPushOneMsgResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgResp}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openim.ffi.SingleMsgToUserResults;
      reader.readMessage(value,proto.openim.ffi.SingleMsgToUserResults.deserializeBinaryFromReader);
      msg.addSinglepushresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.OnlineBatchPushOneMsgResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.OnlineBatchPushOneMsgResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSinglepushresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openim.ffi.SingleMsgToUserResults.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SingleMsgToUserResults singlePushResult = 1;
 * @return {!Array<!proto.openim.ffi.SingleMsgToUserResults>}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.getSinglepushresultList = function() {
  return /** @type{!Array<!proto.openim.ffi.SingleMsgToUserResults>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.SingleMsgToUserResults, 1));
};


/**
 * @param {!Array<!proto.openim.ffi.SingleMsgToUserResults>} value
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgResp} returns this
*/
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.setSinglepushresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openim.ffi.SingleMsgToUserResults=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.SingleMsgToUserResults}
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.addSinglepushresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openim.ffi.SingleMsgToUserResults, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.OnlineBatchPushOneMsgResp} returns this
 */
proto.openim.ffi.OnlineBatchPushOneMsgResp.prototype.clearSinglepushresultList = function() {
  return this.setSinglepushresultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.SingleMsgToUserPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.SingleMsgToUserPlatform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleMsgToUserPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
resultcode: jspb.Message.getFieldWithDefault(msg, 1, 0),
recvid: jspb.Message.getFieldWithDefault(msg, 2, ""),
recvplatformid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform}
 */
proto.openim.ffi.SingleMsgToUserPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.SingleMsgToUserPlatform;
  return proto.openim.ffi.SingleMsgToUserPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.SingleMsgToUserPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform}
 */
proto.openim.ffi.SingleMsgToUserPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setResultcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecvid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRecvplatformid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.SingleMsgToUserPlatform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.SingleMsgToUserPlatform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleMsgToUserPlatform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultcode();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRecvid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecvplatformid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 ResultCode = 1;
 * @return {number}
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.getResultcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform} returns this
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.setResultcode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string RecvID = 2;
 * @return {string}
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.getRecvid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform} returns this
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.setRecvid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 RecvPlatFormID = 3;
 * @return {number}
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.getRecvplatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.SingleMsgToUserPlatform} returns this
 */
proto.openim.ffi.SingleMsgToUserPlatform.prototype.setRecvplatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.GetUsersOnlineStatusReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.GetUsersOnlineStatusReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.GetUsersOnlineStatusReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusReq.toObject = function(includeInstance, msg) {
  var f, obj = {
useridsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusReq}
 */
proto.openim.ffi.GetUsersOnlineStatusReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.GetUsersOnlineStatusReq;
  return proto.openim.ffi.GetUsersOnlineStatusReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusReq}
 */
proto.openim.ffi.GetUsersOnlineStatusReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUserids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.GetUsersOnlineStatusReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUseridsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string userIDs = 1;
 * @return {!Array<string>}
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.getUseridsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusReq} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.setUseridsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.GetUsersOnlineStatusReq} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.addUserids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusReq} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusReq.prototype.clearUseridsList = function() {
  return this.setUseridsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.GetUsersOnlineStatusResp.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.GetUsersOnlineStatusResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.toObject = function(includeInstance, msg) {
  var f, obj = {
successresultList: jspb.Message.toObjectList(msg.getSuccessresultList(),
    proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.toObject, includeInstance),
failedresultList: jspb.Message.toObjectList(msg.getFailedresultList(),
    proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.GetUsersOnlineStatusResp;
  return proto.openim.ffi.GetUsersOnlineStatusResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult;
      reader.readMessage(value,proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.deserializeBinaryFromReader);
      msg.addSuccessresult(value);
      break;
    case 2:
      var value = new proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail;
      reader.readMessage(value,proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.deserializeBinaryFromReader);
      msg.addFailedresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.GetUsersOnlineStatusResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.serializeBinaryToWriter
    );
  }
  f = message.getFailedresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
platformid: jspb.Message.getFieldWithDefault(msg, 1, 0),
connid: jspb.Message.getFieldWithDefault(msg, 2, ""),
isbackground: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
token: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail;
  return proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatformid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsbackground(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatformid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getConnid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsbackground();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 platformID = 1;
 * @return {number}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.getPlatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.setPlatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string connID = 2;
 * @return {string}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.getConnid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.setConnid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isBackground = 3;
 * @return {boolean}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.getIsbackground = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.setIsbackground = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
userid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail;
  return proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.toObject = function(includeInstance, msg) {
  var f, obj = {
userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
status: jspb.Message.getFieldWithDefault(msg, 2, 0),
detailplatformstatusList: jspb.Message.toObjectList(msg.getDetailplatformstatusList(),
    proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult;
  return proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail;
      reader.readMessage(value,proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.deserializeBinaryFromReader);
      msg.addDetailplatformstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDetailplatformstatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated SuccessDetail detailPlatformStatus = 3;
 * @return {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail>}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.getDetailplatformstatusList = function() {
  return /** @type{!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail, 3));
};


/**
 * @param {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail>} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} returns this
*/
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.setDetailplatformstatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.addDetailplatformstatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openim.ffi.GetUsersOnlineStatusResp.SuccessDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult.prototype.clearDetailplatformstatusList = function() {
  return this.setDetailplatformstatusList([]);
};


/**
 * repeated SuccessResult successResult = 1;
 * @return {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult>}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.getSuccessresultList = function() {
  return /** @type{!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult, 1));
};


/**
 * @param {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult>} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp} returns this
*/
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.setSuccessresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.addSuccessresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.openim.ffi.GetUsersOnlineStatusResp.SuccessResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.clearSuccessresultList = function() {
  return this.setSuccessresultList([]);
};


/**
 * repeated FailedDetail failedResult = 2;
 * @return {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail>}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.getFailedresultList = function() {
  return /** @type{!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail, 2));
};


/**
 * @param {!Array<!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail>} value
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp} returns this
*/
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.setFailedresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail}
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.addFailedresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.openim.ffi.GetUsersOnlineStatusResp.FailedDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.GetUsersOnlineStatusResp} returns this
 */
proto.openim.ffi.GetUsersOnlineStatusResp.prototype.clearFailedresultList = function() {
  return this.setFailedresultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.SingleDetail.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.SingleDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.SingleDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.SingleDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
status: jspb.Message.getFieldWithDefault(msg, 2, 0),
singleplatformtokenList: jspb.Message.toObjectList(msg.getSingleplatformtokenList(),
    proto.openim.ffi.SinglePlatformToken.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.SingleDetail}
 */
proto.openim.ffi.SingleDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.SingleDetail;
  return proto.openim.ffi.SingleDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.SingleDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.SingleDetail}
 */
proto.openim.ffi.SingleDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 3:
      var value = new proto.openim.ffi.SinglePlatformToken;
      reader.readMessage(value,proto.openim.ffi.SinglePlatformToken.deserializeBinaryFromReader);
      msg.addSingleplatformtoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.SingleDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.SingleDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.SingleDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SingleDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSingleplatformtokenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.openim.ffi.SinglePlatformToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.openim.ffi.SingleDetail.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.SingleDetail} returns this
 */
proto.openim.ffi.SingleDetail.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 status = 2;
 * @return {number}
 */
proto.openim.ffi.SingleDetail.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.SingleDetail} returns this
 */
proto.openim.ffi.SingleDetail.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated SinglePlatformToken singlePlatformToken = 3;
 * @return {!Array<!proto.openim.ffi.SinglePlatformToken>}
 */
proto.openim.ffi.SingleDetail.prototype.getSingleplatformtokenList = function() {
  return /** @type{!Array<!proto.openim.ffi.SinglePlatformToken>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.openim.ffi.SinglePlatformToken, 3));
};


/**
 * @param {!Array<!proto.openim.ffi.SinglePlatformToken>} value
 * @return {!proto.openim.ffi.SingleDetail} returns this
*/
proto.openim.ffi.SingleDetail.prototype.setSingleplatformtokenList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.openim.ffi.SinglePlatformToken=} opt_value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.SinglePlatformToken}
 */
proto.openim.ffi.SingleDetail.prototype.addSingleplatformtoken = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.openim.ffi.SinglePlatformToken, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.SingleDetail} returns this
 */
proto.openim.ffi.SingleDetail.prototype.clearSingleplatformtokenList = function() {
  return this.setSingleplatformtokenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.SinglePlatformToken.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.SinglePlatformToken.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.SinglePlatformToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.SinglePlatformToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SinglePlatformToken.toObject = function(includeInstance, msg) {
  var f, obj = {
platformid: jspb.Message.getFieldWithDefault(msg, 1, 0),
total: jspb.Message.getFieldWithDefault(msg, 2, 0),
tokenList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.SinglePlatformToken}
 */
proto.openim.ffi.SinglePlatformToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.SinglePlatformToken;
  return proto.openim.ffi.SinglePlatformToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.SinglePlatformToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.SinglePlatformToken}
 */
proto.openim.ffi.SinglePlatformToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatformid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.SinglePlatformToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.SinglePlatformToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.SinglePlatformToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.SinglePlatformToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatformid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTokenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional int32 platformID = 1;
 * @return {number}
 */
proto.openim.ffi.SinglePlatformToken.prototype.getPlatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.SinglePlatformToken} returns this
 */
proto.openim.ffi.SinglePlatformToken.prototype.setPlatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.openim.ffi.SinglePlatformToken.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.SinglePlatformToken} returns this
 */
proto.openim.ffi.SinglePlatformToken.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string token = 3;
 * @return {!Array<string>}
 */
proto.openim.ffi.SinglePlatformToken.prototype.getTokenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openim.ffi.SinglePlatformToken} returns this
 */
proto.openim.ffi.SinglePlatformToken.prototype.setTokenList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.SinglePlatformToken} returns this
 */
proto.openim.ffi.SinglePlatformToken.prototype.addToken = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.SinglePlatformToken} returns this
 */
proto.openim.ffi.SinglePlatformToken.prototype.clearTokenList = function() {
  return this.setTokenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.openim.ffi.KickUserOfflineReq.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.KickUserOfflineReq.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.KickUserOfflineReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.KickUserOfflineReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.KickUserOfflineReq.toObject = function(includeInstance, msg) {
  var f, obj = {
platformid: jspb.Message.getFieldWithDefault(msg, 1, 0),
kickuseridlistList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.KickUserOfflineReq}
 */
proto.openim.ffi.KickUserOfflineReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.KickUserOfflineReq;
  return proto.openim.ffi.KickUserOfflineReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.KickUserOfflineReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.KickUserOfflineReq}
 */
proto.openim.ffi.KickUserOfflineReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatformid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addKickuseridlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.KickUserOfflineReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.KickUserOfflineReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.KickUserOfflineReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.KickUserOfflineReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlatformid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getKickuseridlistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional int32 platformID = 1;
 * @return {number}
 */
proto.openim.ffi.KickUserOfflineReq.prototype.getPlatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.KickUserOfflineReq} returns this
 */
proto.openim.ffi.KickUserOfflineReq.prototype.setPlatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string kickUserIDList = 2;
 * @return {!Array<string>}
 */
proto.openim.ffi.KickUserOfflineReq.prototype.getKickuseridlistList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.openim.ffi.KickUserOfflineReq} returns this
 */
proto.openim.ffi.KickUserOfflineReq.prototype.setKickuseridlistList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.openim.ffi.KickUserOfflineReq} returns this
 */
proto.openim.ffi.KickUserOfflineReq.prototype.addKickuseridlist = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.openim.ffi.KickUserOfflineReq} returns this
 */
proto.openim.ffi.KickUserOfflineReq.prototype.clearKickuseridlistList = function() {
  return this.setKickuseridlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.KickUserOfflineResp.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.KickUserOfflineResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.KickUserOfflineResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.KickUserOfflineResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.KickUserOfflineResp}
 */
proto.openim.ffi.KickUserOfflineResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.KickUserOfflineResp;
  return proto.openim.ffi.KickUserOfflineResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.KickUserOfflineResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.KickUserOfflineResp}
 */
proto.openim.ffi.KickUserOfflineResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.KickUserOfflineResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.KickUserOfflineResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.KickUserOfflineResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.KickUserOfflineResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.MultiTerminalLoginCheckReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.toObject = function(includeInstance, msg) {
  var f, obj = {
userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
platformid: jspb.Message.getFieldWithDefault(msg, 2, 0),
token: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckReq}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.MultiTerminalLoginCheckReq;
  return proto.openim.ffi.MultiTerminalLoginCheckReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckReq}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatformid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.MultiTerminalLoginCheckReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlatformid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string userID = 1;
 * @return {string}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckReq} returns this
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 platformID = 2;
 * @return {number}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.getPlatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckReq} returns this
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.setPlatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckReq} returns this
 */
proto.openim.ffi.MultiTerminalLoginCheckReq.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.prototype.toObject = function(opt_includeInstance) {
  return proto.openim.ffi.MultiTerminalLoginCheckResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckResp}
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openim.ffi.MultiTerminalLoginCheckResp;
  return proto.openim.ffi.MultiTerminalLoginCheckResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openim.ffi.MultiTerminalLoginCheckResp}
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openim.ffi.MultiTerminalLoginCheckResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openim.ffi.MultiTerminalLoginCheckResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openim.ffi.MultiTerminalLoginCheckResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.openim.ffi);
