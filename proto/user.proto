syntax = "proto3";
package openim.sdk.user;

import "common.proto";
import "shared.proto";

option csharp_namespace = "OpenIM.Proto";
option go_package = "github.com/openimsdk/openim-sdk-core/v3/proto/go/user";
option swift_prefix = "";

message GetSelfUserInfoReq {}
message GetSelfUserInfoResp {
  // user self infomation
  shared.IMUser user = 1;
}

message SetSelfInfoReq {
  // @user_id
  string userID = 1;
  // @opt @user_nickname
  optional string nickname = 2;
  // @opt @user_face_url
  optional string faceURL = 3;
  // @opt @user_ex
  optional string ex = 4;
  // @opt @user_global_recv_msg_opt
  optional common.GlobalRecvMsgOpt globalRecvMsgOpt = 7;
}
message SetSelfInfoResp {}

message ProcessUserCommandAddReq {
  // @user_id
  string userID = 1;
  // @user_command_type
  int32 type = 2;
  // @user_command_uuid
  string uuid = 3;
  // @opt @user_command_value
  optional string value = 4;
  // @opt @user_command_ex
  optional string ex = 5;
}
message ProcessUserCommandAddResp {}

message ProcessUserCommandDeleteReq {
  // @user_id
  string userID = 1;
  // @user_command_type
  int32 type = 2;
  // @user_command_uuid
  string uuid = 3;
}
message ProcessUserCommandDeleteResp {}

message ProcessUserCommandUpdateReq {
  // @user_id
  string userID = 1;
  // @user_command_type
  int32 type = 2;
  // @user_command_uuid
  string uuid = 3;
  // @opt @user_command_value
  optional string value = 4;
  // @opt @user_command_ex
  optional string ex = 5;
}
message ProcessUserCommandUpdateResp {}

message ProcessUserCommandGetAllReq {}
message ProcessUserCommandGetAllResp {
  // @user_command_info
  repeated shared.CommandInfo commands = 1;
}

message GetUsersInfoReq {
  // @user_ids
  repeated string userIDs = 1;
}
message GetUsersInfoResp {
  // list of user info
  repeated shared.IMUser users = 1;
}

service UserService {
  /**
   * Get the information of the currently login user
   */
  rpc GetSelfUserInfo(GetSelfUserInfoReq) returns (GetSelfUserInfoResp);
  /**
   * Set the information of the currently login user, including `ex`.
   */
  rpc SetSelfInfo(SetSelfInfoReq) returns (SetSelfInfoResp);
  /**
   * Get the public information of the specified users, including `nickname`, `faceURL`.
   */
  rpc GetUsersInfo(GetUsersInfoReq) returns (GetUsersInfoResp);
  rpc ProcessUserCommandAdd(ProcessUserCommandAddReq) returns (ProcessUserCommandAddResp);
  rpc ProcessUserCommandDelete(ProcessUserCommandDeleteReq) returns (ProcessUserCommandDeleteResp);
  rpc ProcessUserCommandUpdate(ProcessUserCommandUpdateReq) returns (ProcessUserCommandUpdateResp);
  rpc ProcessUserCommandGetAll(ProcessUserCommandGetAllReq) returns (ProcessUserCommandGetAllResp);
}
