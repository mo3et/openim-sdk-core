syntax = "proto3";
package openim.sdk.conversation;
option go_package = "github.com/openimsdk/openim-sdk-core/v3/proto";
option csharp_namespace = "OpenIM";

enum SessionType {
  SessionType_None = 0;
  SessionType_Single = 1;
  SessionType_Group = 2;
  SessionType_SuperGroup = 3;
  SessionType_Notification = 4;
}

message Conversation {
  string conversationID = 1;
  int32 conversationType = 2;
  string userID = 3;
  string groupID = 4;
  string showName = 5;
  string faceURL = 6;
  int32 recvMsgOpt = 7;
  int32 unreadCount = 8;
  int32 groupAtType = 9;
  string latestMsg = 10;
  int64 latestMsgSendTime = 11;
  string draftText = 12;
  int64 draftTextTime = 13;
  bool isPinned = 14;
  bool isPrivateChat = 15;
  int32 burnDuration = 16;
  bool isNotInGroup = 17;
  int64 updateUnreadCountTime = 18;
  string attachedInfo = 19;
  string ex = 20;
  int64 maxSeq = 21;
  int64 minSeq = 22;
  int64 hasReadSeq = 23;
  int64 msgDestructTime = 24;
  bool isMsgDestruct = 25;
}


message GetAllConversationListReq{}
message GetAllConversationListResp{
  repeated Conversation conversationList = 1;
}
message SetConnListenerReq{}
message SetConnListenerResp{}

message SetConversationListenerReq{}
message SetConversationListenerResp{}

message SetAdvancedMsgListenerReq{}
message SetAdvancedMsgListenerResp{}



enum FuncRequestEventName{
  None = 0;
  GetAllConversationList = 1;
  GetConversationList = 2;
  GetConversation = 3;
  InitSDK = 4;
  Login = 5;
  SetConnListener = 6;
  SetConversationListener = 7;
  SetAdvancedMsgListener = 8;
  SetMessageKvInfoListener = 9;
  SetBatchMsgListener = 10;
  SetFriendshipListener = 11;
  SetGroupListener = 12;
  SetUserListener = 13;
  SetCustomBusinessListener = 14;
  EventOnConnecting = 15;
  EventOnConnectSuccess = 16;
  EventOnConnectFailed = 17;
  EventOnKickedOffline = 18;
  EventOnUserTokenExpired = 19;
  EventOnUserTokenInvalid = 20;
  EventOnSyncServerStart = 21;
  EventOnSyncServerFinish = 22;
  EventOnSyncServerFailed = 23;
  EventOnSyncServerProgress = 24;
  EventOnNewConversation = 25;
  EventOnConversationChanged = 26;
  EventOnTotalUnreadMessageCountChanged = 27;
  EventOnConversationUserInputStatusChanged = 28;
  EventOnRecvNewMessage = 29;
  EventOnRecvC2CReadReceipt = 30;
  EventOnNewRecvMessageRevoked = 31;
  EventOnRecvOfflineNewMessage = 32;
  EventOnMsgDeleted = 33;
  EventOnRecvOnlineOnlyMessage = 34;
  EventOnMsgEdited = 35;
};

message EventOnConnectingData {}
message EventOnConnectSuccessData {}
message EventOnConnectFailedData {
  int32 errCode = 1;
  string errMsg = 2;
}
message EventOnKickedOfflineData {}
message EventOnUserTokenExpiredData {}
message EventOnUserTokenInvalidData {
  string errMsg = 1;
}
message EventOnSyncServerStartData {
   bool reinstalled =1;
};
message EventOnSyncServerFinishData {
  bool reinstalled = 1;
};
message EventOnSyncServerFailedData {
  bool reinstalled = 1;
};
message EventOnSyncServerProgressData {
  int32 progress = 1;
};
message EventOnNewConversationData {
  string conversationList = 1;
};
message EventOnConversationChangedData {
  string conversationList = 1;
};
message EventOnTotalUnreadMessageCountChangedData {
  int32 totalUnreadCount = 1;
};
message EventOnConversationUserInputStatusChangedData {
  string change = 1;
};
message EventOnRecvNewMessageData {
  string conversationID = 1;
  string message = 2;
};
message EventOnRecvC2CReadReceiptData {
  string msgReceiptList = 1;
};
message EventOnNewRecvMessageRevokedData {
  string messageRevoked = 1;
};
message EventOnRecvOfflineNewMessageData {
   string message = 1;
};
message EventOnMsgDeletedData {
  string message = 1;
};
message EventOnRecvOnlineOnlyMessageData {
  string conversationID = 1;
  string message = 2;
};
message EventOnMsgEditedData {
  string conversationID = 1;
  string message = 2;
};

