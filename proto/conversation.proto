syntax = "proto3";
package openim.sdk.conversation;
option go_package = "github.com/openimsdk/openim-sdk-core/v3/proto";
option csharp_namespace = "OpenIM";

import "group.proto";
import "relation.proto";
import "message.proto";

message Conversation {
  string conversationID = 1;
  int32 conversationType = 2;
  string userID = 3;
  string groupID = 4;
  string showName = 5;
  string faceURL = 6;
  int32 recvMsgOpt = 7;
  int32 unreadCount = 8;
  int32 groupAtType = 9;
  string latestMsg = 10;
  int64 latestMsgSendTime = 11;
  string draftText = 12;
  int64 draftTextTime = 13;
  bool isPinned = 14;
  bool isPrivateChat = 15;
  int32 burnDuration = 16;
  string ex = 17;
  int64 msgDestructTime = 18;
  bool isMsgDestruct = 19;
}

message ConversationArgs {
  string conversationID = 1;
  repeated string clientMsgIDList = 2;
}

message FindMessageListCallback {
  int32 totalCount = 1;
  repeated SearchByConversationResult findResultItems = 2;
}

message SearchLocalMessagesParams {
  string conversationID = 1;
  repeated string keywordList = 2;
  int32 keywordListMatchType = 3;
  repeated string senderUserIDList = 4;
  repeated int32 messageTypeList = 5;
  int64 searchTimePosition = 6;
  int64 searchTimePeriod = 7;
  int32 pageIndex = 8;
  int32 count = 9;
}

message SearchLocalMessagesCallback {
  int32 totalCount = 1;
  repeated SearchByConversationResult searchResultItems = 2;
}

message SearchByConversationResult {
  string conversationID = 1;
  int32 conversationType = 2;
  string showName = 3;
  string faceURL = 4;
  int64 latestMsgSendTime = 5;
  int32 messageCount = 6;
  repeated message.MsgStruct messageList = 7;
}

// -----------------------------------------------------------------------------------------------------------------
message GetAllConversationListReq{}
message GetAllConversationListResp{
  repeated Conversation conversationList = 1;
}

message GetConversationListSplitReq {
  int32 offset = 1;
  int32 count = 2;
}
message GetConversationListSplitResp {
  repeated Conversation conversationList = 1;
}

message HideConversationReq {
  string conversationID = 1;
}
message HideConversationResp {}

message GetAtAllTagReq {}
message GetAtAllTagResp {
  string tag = 1;
}

message GetOneConversationReq {
  int32 sessionType = 1;
  string sourceID = 2;
}
message GetOneConversationResp {
  Conversation conversation = 1;
}

message GetMultipleConversationReq {
  repeated string conversationIDList = 1;
}
message GetMultipleConversationResp {
  repeated Conversation conversationList = 1;
}

message HideAllConversationsReq {}
message HideAllConversationsResp {}

message SetConversationDraftReq {
  string conversationID = 1;
  string draftText = 2;
}
message SetConversationDraftResp {}

message SetConversationReq {
  string conversationID = 1;
  Conversation conversation = 2;
}
message SetConversationResp {}

message GetTotalUnreadMsgCountReq {}
message GetTotalUnreadMsgCountResp {
  int32 totalUnreadCount = 1;
}

message GetConversationIDBySessionTypeReq {
  string sourceID = 1;
  int32 sessionType = 2;
}
message GetConversationIDBySessionTypeResp {
  string conversationID = 1;
}

message FindMessageListReq {
  repeated ConversationArgs conversationsArgs = 1;
}
message FindMessageListResp {
  repeated SearchByConversationResult findResultItems = 1;
  int32 totalCount = 2;
}

message MarkConversationMessageAsReadReq {
  string conversationID = 1;
}
message MarkConversationMessageAsReadResp {}

message MarkAllConversationMessageAsReadReq {}
message MarkAllConversationMessageAsReadResp {}

message DeleteMessageFromLocalStorageReq {
  string conversationID = 1;
  string clientMsgID = 2;
}
message DeleteMessageFromLocalStorageResp {}


message ClearConversationAndDeleteAllMsgReq {
  string conversationID = 1;
}
message ClearConversationAndDeleteAllMsgResp {}

message DeleteConversationAndDeleteAllMsgReq {
  string conversationID = 1;
}
message DeleteConversationAndDeleteAllMsgResp {}

message SearchLocalMessagesReq {
  SearchLocalMessagesParams searchParam = 1;
}
message SearchLocalMessagesResp {
  SearchLocalMessagesCallback searchResult = 1;
}

message SetMessageLocalExReq {
  string conversationID = 1;
  string clientMsgID = 2;
  string localEx = 3;
}
message SetMessageLocalExResp {
  bool success = 1;
}

message SearchConversationReq {
  string searchParam = 1;
}
message SearchConversationResp {
  repeated Conversation conversationList = 1;
}
// ----------------------------------------------------------------------------------------------------------

enum FuncRequestEventName{
  None = 0;
  GetAllConversationList = 1;
  GetConversationList = 2;
  GetConversation = 3;
  InitSDK = 4;
  Login = 5;
    SendMessage=6;
    UploadLogs = 7;
    UploadFile = 8;
    Log = 9;

  EventOnSendMsgProgress =14;
    EventOnUploadFileProgress = 13;
  EventOnConnecting = 15;
  EventOnConnectSuccess = 16;
  EventOnConnectFailed = 17;
  EventOnKickedOffline = 18;
  EventOnUserTokenExpired = 19;
  EventOnUserTokenInvalid = 20;
  EventOnSyncServerStart = 21;
  EventOnSyncServerFinish = 22;
  EventOnSyncServerFailed = 23;
  EventOnSyncServerProgress = 24;
  EventOnNewConversation = 25;
  EventOnConversationChanged = 26;
  EventOnTotalUnreadMessageCountChanged = 27;
  EventOnConversationUserInputStatusChanged = 28;
  EventOnRecvNewMessage = 29;
  EventOnRecvC2CReadReceipt = 30;
  EventOnNewRecvMessageRevoked = 31;
  EventOnRecvOfflineNewMessage = 32;
  EventOnMsgDeleted = 33;
  EventOnRecvOnlineOnlyMessage = 34;
  EventOnMsgEdited = 35;
  // FriendCallback Events
  EventOnFriendApplicationAdded = 36;
  EventOnFriendApplicationDeleted = 37;
  EventOnFriendApplicationAccepted = 38;
  EventOnFriendApplicationRejected = 39;
  EventOnFriendAdded = 40;
  EventOnFriendDeleted = 41;
  EventOnFriendInfoChanged = 42;
  EventOnBlackAdded = 43;
  EventOnBlackDeleted = 44;

  // GroupCallback Events
  EventOnJoinedGroupAdded = 45;
  EventOnJoinedGroupDeleted = 46;
  EventOnGroupMemberAdded = 47;
  EventOnGroupMemberDeleted = 48;
  EventOnGroupApplicationAdded = 49;
  EventOnGroupApplicationDeleted = 50;
  EventOnGroupInfoChanged = 51;
  EventOnGroupDismissed = 52;
  EventOnGroupMemberInfoChanged = 53;
  EventOnGroupApplicationAccepted = 54;
  EventOnGroupApplicationRejected = 55;

  // CustomBusinessCallback Events
  EventOnRecvCustomBusinessMessage = 56;

  // UserCallback Events
  EventOnSelfInfoUpdated = 57;
  EventOnUserStatusChanged = 58;
  EventOnUserCommandAdd = 59;
  EventOnUserCommandDelete = 60;
  EventOnUserCommandUpdate = 61;

  CreateGroup = 1000;
  JoinGroup = 1001;
  QuitGroup = 1002;
  DismissGroup = 1003;
  ChangeGroupMute = 1004;
  ChangeGroupMemberMute = 1005;
  TransferGroupOwner = 1006;
  KickGroupMember = 1007;
  SetGroupInfo = 1008;
  SetGroupMemberInfo = 1009;
  GetJoinedGroups = 1010;
  GetJoinedGroupsPage = 1011;
  GetSpecifiedGroupsInfo = 1012;
  SearchGroups = 1013;
  GetGroupMemberOwnerAndAdmin = 1014;
  GetGroupMembersByJoinTimeFilter = 1015;
  GetSpecifiedGroupMembersInfo = 1016;
  GetGroupMembers = 1017;
  GetGroupRequest = 1018;
  SearchGroupMembers = 1019;
  IsJoinGroup = 1020;
  GetUsersInGroup = 1021;
  InviteUserToGroup = 1022;
  HandlerGroupRequest = 1023;
  GetGroupMemberInfo = 1024;

  GetSpecifiedFriends = 1100;
  AddFriend = 1101;
  GetFriendRequests = 1102;
  HandlerFriendRequest = 1103;
  CheckFriend = 1104;
  DeleteFriend = 1105;
  GetFriends = 1106;
  GetFriendsPage = 1107;
  SearchFriends = 1108;
  AddBlack = 1109;
  DeleteBlack = 1110;
  GetBlacks = 1111;
  UpdateFriends = 1112;

  // conversation_msg
  GetConversationListSplit = 2000;
  HideConversation = 2001;
  GetAtAllTag = 2002;
  GetOneConversation = 2003;
  GetMultipleConversation = 2004;
  HideAllConversations = 2005;
  SetConversationDraft = 2006;
  SetConversation = 2007;
  GetTotalUnreadMsgCount = 2008;
  GetConversationIDBySessionType = 2009;
  FindMessageList = 2010;
  GetAdvancedHistoryMessageList = 2011;
  GetAdvancedHistoryMessageListReverse = 2012;
  RevokeMessage = 2013;
  TypingStatusUpdate = 2014;
  MarkConversationMessageAsRead = 2015;
  MarkAllConversationMessageAsRead = 2016;
  DeleteMessageFromLocalStorage = 2017;
  DeleteMessage = 2018;
  DeleteAllMsgFromLocalAndServer = 2019;
  DeleteAllMessageFromLocalStorage = 2020;
  ClearConversationAndDeleteAllMsg = 2021;
  DeleteConversationAndDeleteAllMsg = 2022;
  InsertSingleMessageToLocalStorage = 2023;
  InsertGroupMessageToLocalStorage = 2024;
  SearchLocalMessages = 2025;
  SetMessageLocalEx = 2026;
  SearchConversation = 2027;
};

message EventOnSendMsgProgressData{
  int32 progress = 1;
}

message EventOnUploadFileProgressData{
  int32 progress = 1;
}

message EventOnConnectingData {}
message EventOnConnectSuccessData {}
message EventOnConnectFailedData {
  int32 errCode = 1;
  string errMsg = 2;
}
message EventOnKickedOfflineData {}
message EventOnUserTokenExpiredData {}
message EventOnUserTokenInvalidData {
  string errMsg = 1;
}
message EventOnSyncServerStartData {
   bool reinstalled =1;
};
message EventOnSyncServerFinishData {
  bool reinstalled = 1;
};
message EventOnSyncServerFailedData {
  bool reinstalled = 1;
};
message EventOnSyncServerProgressData {
  int32 progress = 1;
};
message EventOnNewConversationData {
  string conversationList = 1;
};
message EventOnConversationChangedData {
  string conversationList = 1;
};
message EventOnTotalUnreadMessageCountChangedData {
  int32 totalUnreadCount = 1;
};
message EventOnConversationUserInputStatusChangedData {
  string change = 1;
};
message EventOnRecvNewMessageData {
  string conversationID = 1;
  string message = 2;
};
message EventOnRecvC2CReadReceiptData {
  string msgReceiptList = 1;
};
message EventOnNewRecvMessageRevokedData {
  string messageRevoked = 1;
};
message EventOnRecvOfflineNewMessageData {
   string message = 1;
};
message EventOnMsgDeletedData {
  string message = 1;
};
message EventOnRecvOnlineOnlyMessageData {
  string conversationID = 1;
  string message = 2;
};
message EventOnMsgEditedData {
  string conversationID = 1;
  string message = 2;
};

// FriendCallback Data Types
message EventOnFriendApplicationAddedData {
  openim.sdk.relation.FriendRequestInfo request = 1;
}

message EventOnFriendApplicationDeletedData {
  openim.sdk.relation.FriendRequestInfo request = 1;
}

message EventOnFriendApplicationAcceptedData {
  openim.sdk.relation.FriendRequestInfo request = 1;
}

message EventOnFriendApplicationRejectedData {
  openim.sdk.relation.FriendRequestInfo request = 1;
}

message EventOnFriendAddedData {
  openim.sdk.relation.FriendInfo friend = 1;
}

message EventOnFriendDeletedData {
  openim.sdk.relation.FriendInfo friend = 1;
}

message EventOnFriendInfoChangedData {
  openim.sdk.relation.FriendInfo friend = 1;
}

message EventOnBlackAddedData {
  openim.sdk.relation.BlackInfo black = 1;
}

message EventOnBlackDeletedData {
  openim.sdk.relation.BlackInfo black = 1;
}

// GroupCallback Data Types
message EventOnJoinedGroupAddedData {
  openim.sdk.group.GroupInfo group = 1;
}

message EventOnJoinedGroupDeletedData {
  openim.sdk.group.GroupInfo group = 1;
}

message EventOnGroupMemberAddedData {
  openim.sdk.group.GroupMemberInfo member = 1;
}

message EventOnGroupMemberDeletedData {
  openim.sdk.group.GroupMemberInfo member = 1;
}

message EventOnGroupApplicationAddedData {
  openim.sdk.group.GroupRequestInfo request = 1;
}

message EventOnGroupApplicationDeletedData {
  openim.sdk.group.GroupRequestInfo request = 1;
}

message EventOnGroupInfoChangedData {
  openim.sdk.group.GroupInfo group = 1;
}

message EventOnGroupDismissedData {
  openim.sdk.group.GroupInfo group = 1;
}

message EventOnGroupMemberInfoChangedData {
  openim.sdk.group.GroupMemberInfo member = 1;
}

message EventOnGroupApplicationAcceptedData {
  openim.sdk.group.GroupRequestInfo request = 1;
}

message EventOnGroupApplicationRejectedData {
  openim.sdk.group.GroupRequestInfo request = 1;
}

// CustomBusinessCallback Data Type
message EventOnRecvCustomBusinessMessageData {
  string businessMessage = 1;
}

// UserCallback Data Types
message EventOnSelfInfoUpdatedData {
  string userInfo = 1;
}

message EventOnUserStatusChangedData {
  string statusMap = 1;
}

message EventOnUserCommandAddData {
  string userCommand = 1;
}

message EventOnUserCommandDeleteData {
  string userCommand = 1;
}

message EventOnUserCommandUpdateData {
  string userCommand = 1;
}

