// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0
// source: conversation.proto

package conversation

import (
	shared "github.com/openimsdk/openim-sdk-core/v3/proto/go/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConversationArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID  string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgIDList []string `protobuf:"bytes,2,rep,name=clientMsgIDList,proto3" json:"clientMsgIDList,omitempty"`
}

func (x *ConversationArgs) Reset() {
	*x = ConversationArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationArgs) ProtoMessage() {}

func (x *ConversationArgs) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationArgs.ProtoReflect.Descriptor instead.
func (*ConversationArgs) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *ConversationArgs) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationArgs) GetClientMsgIDList() []string {
	if x != nil {
		return x.ClientMsgIDList
	}
	return nil
}

type FindMessageListCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount      int32                         `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	FindResultItems []*SearchByConversationResult `protobuf:"bytes,2,rep,name=findResultItems,proto3" json:"findResultItems,omitempty"`
}

func (x *FindMessageListCallback) Reset() {
	*x = FindMessageListCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMessageListCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMessageListCallback) ProtoMessage() {}

func (x *FindMessageListCallback) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMessageListCallback.ProtoReflect.Descriptor instead.
func (*FindMessageListCallback) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *FindMessageListCallback) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *FindMessageListCallback) GetFindResultItems() []*SearchByConversationResult {
	if x != nil {
		return x.FindResultItems
	}
	return nil
}

type SearchLocalMessagesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID       string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	KeywordList          []string `protobuf:"bytes,2,rep,name=keywordList,proto3" json:"keywordList,omitempty"`
	KeywordListMatchType int32    `protobuf:"varint,3,opt,name=keywordListMatchType,proto3" json:"keywordListMatchType,omitempty"`
	SenderUserIDList     []string `protobuf:"bytes,4,rep,name=senderUserIDList,proto3" json:"senderUserIDList,omitempty"`
	MessageTypeList      []int32  `protobuf:"varint,5,rep,packed,name=messageTypeList,proto3" json:"messageTypeList,omitempty"`
	SearchTimePosition   int64    `protobuf:"varint,6,opt,name=searchTimePosition,proto3" json:"searchTimePosition,omitempty"`
	SearchTimePeriod     int64    `protobuf:"varint,7,opt,name=searchTimePeriod,proto3" json:"searchTimePeriod,omitempty"`
	PageIndex            int32    `protobuf:"varint,8,opt,name=pageIndex,proto3" json:"pageIndex,omitempty"`
	Count                int32    `protobuf:"varint,9,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SearchLocalMessagesParams) Reset() {
	*x = SearchLocalMessagesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocalMessagesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocalMessagesParams) ProtoMessage() {}

func (x *SearchLocalMessagesParams) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocalMessagesParams.ProtoReflect.Descriptor instead.
func (*SearchLocalMessagesParams) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *SearchLocalMessagesParams) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SearchLocalMessagesParams) GetKeywordList() []string {
	if x != nil {
		return x.KeywordList
	}
	return nil
}

func (x *SearchLocalMessagesParams) GetKeywordListMatchType() int32 {
	if x != nil {
		return x.KeywordListMatchType
	}
	return 0
}

func (x *SearchLocalMessagesParams) GetSenderUserIDList() []string {
	if x != nil {
		return x.SenderUserIDList
	}
	return nil
}

func (x *SearchLocalMessagesParams) GetMessageTypeList() []int32 {
	if x != nil {
		return x.MessageTypeList
	}
	return nil
}

func (x *SearchLocalMessagesParams) GetSearchTimePosition() int64 {
	if x != nil {
		return x.SearchTimePosition
	}
	return 0
}

func (x *SearchLocalMessagesParams) GetSearchTimePeriod() int64 {
	if x != nil {
		return x.SearchTimePeriod
	}
	return 0
}

func (x *SearchLocalMessagesParams) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *SearchLocalMessagesParams) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SearchLocalMessagesCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount        int32                         `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	SearchResultItems []*SearchByConversationResult `protobuf:"bytes,2,rep,name=searchResultItems,proto3" json:"searchResultItems,omitempty"`
}

func (x *SearchLocalMessagesCallback) Reset() {
	*x = SearchLocalMessagesCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocalMessagesCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocalMessagesCallback) ProtoMessage() {}

func (x *SearchLocalMessagesCallback) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocalMessagesCallback.ProtoReflect.Descriptor instead.
func (*SearchLocalMessagesCallback) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *SearchLocalMessagesCallback) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchLocalMessagesCallback) GetSearchResultItems() []*SearchByConversationResult {
	if x != nil {
		return x.SearchResultItems
	}
	return nil
}

type SearchByConversationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID    string              `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ConversationType  int32               `protobuf:"varint,2,opt,name=conversationType,proto3" json:"conversationType,omitempty"`
	ShowName          string              `protobuf:"bytes,3,opt,name=showName,proto3" json:"showName,omitempty"`
	FaceURL           string              `protobuf:"bytes,4,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	LatestMsgSendTime int64               `protobuf:"varint,5,opt,name=latestMsgSendTime,proto3" json:"latestMsgSendTime,omitempty"`
	MessageCount      int32               `protobuf:"varint,6,opt,name=messageCount,proto3" json:"messageCount,omitempty"`
	MessageList       []*shared.IMMessage `protobuf:"bytes,7,rep,name=messageList,proto3" json:"messageList,omitempty"`
}

func (x *SearchByConversationResult) Reset() {
	*x = SearchByConversationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchByConversationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchByConversationResult) ProtoMessage() {}

func (x *SearchByConversationResult) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchByConversationResult.ProtoReflect.Descriptor instead.
func (*SearchByConversationResult) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *SearchByConversationResult) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SearchByConversationResult) GetConversationType() int32 {
	if x != nil {
		return x.ConversationType
	}
	return 0
}

func (x *SearchByConversationResult) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *SearchByConversationResult) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *SearchByConversationResult) GetLatestMsgSendTime() int64 {
	if x != nil {
		return x.LatestMsgSendTime
	}
	return 0
}

func (x *SearchByConversationResult) GetMessageCount() int32 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *SearchByConversationResult) GetMessageList() []*shared.IMMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

// -----------------------------------------------------------------------------------------------------------------
type GetAllConversationListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllConversationListReq) Reset() {
	*x = GetAllConversationListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllConversationListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConversationListReq) ProtoMessage() {}

func (x *GetAllConversationListReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConversationListReq.ProtoReflect.Descriptor instead.
func (*GetAllConversationListReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{5}
}

type GetAllConversationListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList,omitempty"`
}

func (x *GetAllConversationListResp) Reset() {
	*x = GetAllConversationListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllConversationListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConversationListResp) ProtoMessage() {}

func (x *GetAllConversationListResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConversationListResp.ProtoReflect.Descriptor instead.
func (*GetAllConversationListResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllConversationListResp) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type GetConversationListSplitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetConversationListSplitReq) Reset() {
	*x = GetConversationListSplitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationListSplitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListSplitReq) ProtoMessage() {}

func (x *GetConversationListSplitReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListSplitReq.ProtoReflect.Descriptor instead.
func (*GetConversationListSplitReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *GetConversationListSplitReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetConversationListSplitReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetConversationListSplitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList,omitempty"`
}

func (x *GetConversationListSplitResp) Reset() {
	*x = GetConversationListSplitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationListSplitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationListSplitResp) ProtoMessage() {}

func (x *GetConversationListSplitResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationListSplitResp.ProtoReflect.Descriptor instead.
func (*GetConversationListSplitResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *GetConversationListSplitResp) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type HideConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *HideConversationReq) Reset() {
	*x = HideConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideConversationReq) ProtoMessage() {}

func (x *HideConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideConversationReq.ProtoReflect.Descriptor instead.
func (*HideConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *HideConversationReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type HideConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HideConversationResp) Reset() {
	*x = HideConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideConversationResp) ProtoMessage() {}

func (x *HideConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideConversationResp.ProtoReflect.Descriptor instead.
func (*HideConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{10}
}

type GetAtAllTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAtAllTagReq) Reset() {
	*x = GetAtAllTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAtAllTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAtAllTagReq) ProtoMessage() {}

func (x *GetAtAllTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAtAllTagReq.ProtoReflect.Descriptor instead.
func (*GetAtAllTagReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{11}
}

type GetAtAllTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetAtAllTagResp) Reset() {
	*x = GetAtAllTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAtAllTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAtAllTagResp) ProtoMessage() {}

func (x *GetAtAllTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAtAllTagResp.ProtoReflect.Descriptor instead.
func (*GetAtAllTagResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{12}
}

func (x *GetAtAllTagResp) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetOneConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType int32  `protobuf:"varint,1,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	SourceID    string `protobuf:"bytes,2,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
}

func (x *GetOneConversationReq) Reset() {
	*x = GetOneConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneConversationReq) ProtoMessage() {}

func (x *GetOneConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneConversationReq.ProtoReflect.Descriptor instead.
func (*GetOneConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{13}
}

func (x *GetOneConversationReq) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *GetOneConversationReq) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

type GetOneConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conversation *shared.IMConversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
}

func (x *GetOneConversationResp) Reset() {
	*x = GetOneConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneConversationResp) ProtoMessage() {}

func (x *GetOneConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneConversationResp.ProtoReflect.Descriptor instead.
func (*GetOneConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{14}
}

func (x *GetOneConversationResp) GetConversation() *shared.IMConversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

type GetMultipleConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationIDList []string `protobuf:"bytes,1,rep,name=conversationIDList,proto3" json:"conversationIDList,omitempty"`
}

func (x *GetMultipleConversationReq) Reset() {
	*x = GetMultipleConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleConversationReq) ProtoMessage() {}

func (x *GetMultipleConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleConversationReq.ProtoReflect.Descriptor instead.
func (*GetMultipleConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{15}
}

func (x *GetMultipleConversationReq) GetConversationIDList() []string {
	if x != nil {
		return x.ConversationIDList
	}
	return nil
}

type GetMultipleConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList,omitempty"`
}

func (x *GetMultipleConversationResp) Reset() {
	*x = GetMultipleConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultipleConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultipleConversationResp) ProtoMessage() {}

func (x *GetMultipleConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultipleConversationResp.ProtoReflect.Descriptor instead.
func (*GetMultipleConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{16}
}

func (x *GetMultipleConversationResp) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type HideAllConversationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HideAllConversationsReq) Reset() {
	*x = HideAllConversationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideAllConversationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideAllConversationsReq) ProtoMessage() {}

func (x *HideAllConversationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideAllConversationsReq.ProtoReflect.Descriptor instead.
func (*HideAllConversationsReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{17}
}

type HideAllConversationsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HideAllConversationsResp) Reset() {
	*x = HideAllConversationsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HideAllConversationsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HideAllConversationsResp) ProtoMessage() {}

func (x *HideAllConversationsResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HideAllConversationsResp.ProtoReflect.Descriptor instead.
func (*HideAllConversationsResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{18}
}

type SetConversationDraftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	DraftText      string `protobuf:"bytes,2,opt,name=draftText,proto3" json:"draftText,omitempty"`
}

func (x *SetConversationDraftReq) Reset() {
	*x = SetConversationDraftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationDraftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationDraftReq) ProtoMessage() {}

func (x *SetConversationDraftReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationDraftReq.ProtoReflect.Descriptor instead.
func (*SetConversationDraftReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{19}
}

func (x *SetConversationDraftReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationDraftReq) GetDraftText() string {
	if x != nil {
		return x.DraftText
	}
	return ""
}

type SetConversationDraftResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConversationDraftResp) Reset() {
	*x = SetConversationDraftResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationDraftResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationDraftResp) ProtoMessage() {}

func (x *SetConversationDraftResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationDraftResp.ProtoReflect.Descriptor instead.
func (*SetConversationDraftResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{20}
}

type SetConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID  string  `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	RecvMsgOpt      *int32  `protobuf:"varint,2,opt,name=recvMsgOpt,proto3,oneof" json:"recvMsgOpt,omitempty"`
	GroupAtType     *int32  `protobuf:"varint,3,opt,name=groupAtType,proto3,oneof" json:"groupAtType,omitempty"`
	IsPinned        *bool   `protobuf:"varint,4,opt,name=isPinned,proto3,oneof" json:"isPinned,omitempty"`
	IsPrivateChat   *bool   `protobuf:"varint,5,opt,name=isPrivateChat,proto3,oneof" json:"isPrivateChat,omitempty"`
	BurnDuration    *int32  `protobuf:"varint,6,opt,name=burnDuration,proto3,oneof" json:"burnDuration,omitempty"`
	Ex              *string `protobuf:"bytes,7,opt,name=ex,proto3,oneof" json:"ex,omitempty"`
	MsgDestructTime *int64  `protobuf:"varint,8,opt,name=msgDestructTime,proto3,oneof" json:"msgDestructTime,omitempty"`
	IsMsgDestruct   *bool   `protobuf:"varint,9,opt,name=isMsgDestruct,proto3,oneof" json:"isMsgDestruct,omitempty"`
}

func (x *SetConversationReq) Reset() {
	*x = SetConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationReq) ProtoMessage() {}

func (x *SetConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationReq.ProtoReflect.Descriptor instead.
func (*SetConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{21}
}

func (x *SetConversationReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetConversationReq) GetRecvMsgOpt() int32 {
	if x != nil && x.RecvMsgOpt != nil {
		return *x.RecvMsgOpt
	}
	return 0
}

func (x *SetConversationReq) GetGroupAtType() int32 {
	if x != nil && x.GroupAtType != nil {
		return *x.GroupAtType
	}
	return 0
}

func (x *SetConversationReq) GetIsPinned() bool {
	if x != nil && x.IsPinned != nil {
		return *x.IsPinned
	}
	return false
}

func (x *SetConversationReq) GetIsPrivateChat() bool {
	if x != nil && x.IsPrivateChat != nil {
		return *x.IsPrivateChat
	}
	return false
}

func (x *SetConversationReq) GetBurnDuration() int32 {
	if x != nil && x.BurnDuration != nil {
		return *x.BurnDuration
	}
	return 0
}

func (x *SetConversationReq) GetEx() string {
	if x != nil && x.Ex != nil {
		return *x.Ex
	}
	return ""
}

func (x *SetConversationReq) GetMsgDestructTime() int64 {
	if x != nil && x.MsgDestructTime != nil {
		return *x.MsgDestructTime
	}
	return 0
}

func (x *SetConversationReq) GetIsMsgDestruct() bool {
	if x != nil && x.IsMsgDestruct != nil {
		return *x.IsMsgDestruct
	}
	return false
}

type SetConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetConversationResp) Reset() {
	*x = SetConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConversationResp) ProtoMessage() {}

func (x *SetConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConversationResp.ProtoReflect.Descriptor instead.
func (*SetConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{22}
}

type GetTotalUnreadMsgCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTotalUnreadMsgCountReq) Reset() {
	*x = GetTotalUnreadMsgCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalUnreadMsgCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalUnreadMsgCountReq) ProtoMessage() {}

func (x *GetTotalUnreadMsgCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalUnreadMsgCountReq.ProtoReflect.Descriptor instead.
func (*GetTotalUnreadMsgCountReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{23}
}

type GetTotalUnreadMsgCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUnreadCount int32 `protobuf:"varint,1,opt,name=totalUnreadCount,proto3" json:"totalUnreadCount,omitempty"`
}

func (x *GetTotalUnreadMsgCountResp) Reset() {
	*x = GetTotalUnreadMsgCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTotalUnreadMsgCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTotalUnreadMsgCountResp) ProtoMessage() {}

func (x *GetTotalUnreadMsgCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTotalUnreadMsgCountResp.ProtoReflect.Descriptor instead.
func (*GetTotalUnreadMsgCountResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{24}
}

func (x *GetTotalUnreadMsgCountResp) GetTotalUnreadCount() int32 {
	if x != nil {
		return x.TotalUnreadCount
	}
	return 0
}

type GetConversationIDBySessionTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceID    string `protobuf:"bytes,1,opt,name=sourceID,proto3" json:"sourceID,omitempty"`
	SessionType int32  `protobuf:"varint,2,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
}

func (x *GetConversationIDBySessionTypeReq) Reset() {
	*x = GetConversationIDBySessionTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationIDBySessionTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDBySessionTypeReq) ProtoMessage() {}

func (x *GetConversationIDBySessionTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDBySessionTypeReq.ProtoReflect.Descriptor instead.
func (*GetConversationIDBySessionTypeReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{25}
}

func (x *GetConversationIDBySessionTypeReq) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *GetConversationIDBySessionTypeReq) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type GetConversationIDBySessionTypeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *GetConversationIDBySessionTypeResp) Reset() {
	*x = GetConversationIDBySessionTypeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConversationIDBySessionTypeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationIDBySessionTypeResp) ProtoMessage() {}

func (x *GetConversationIDBySessionTypeResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationIDBySessionTypeResp.ProtoReflect.Descriptor instead.
func (*GetConversationIDBySessionTypeResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{26}
}

func (x *GetConversationIDBySessionTypeResp) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type FindMessageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationsArgs []*ConversationArgs `protobuf:"bytes,1,rep,name=conversationsArgs,proto3" json:"conversationsArgs,omitempty"`
}

func (x *FindMessageListReq) Reset() {
	*x = FindMessageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMessageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMessageListReq) ProtoMessage() {}

func (x *FindMessageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMessageListReq.ProtoReflect.Descriptor instead.
func (*FindMessageListReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{27}
}

func (x *FindMessageListReq) GetConversationsArgs() []*ConversationArgs {
	if x != nil {
		return x.ConversationsArgs
	}
	return nil
}

type FindMessageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FindResultItems []*SearchByConversationResult `protobuf:"bytes,1,rep,name=findResultItems,proto3" json:"findResultItems,omitempty"`
	TotalCount      int32                         `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *FindMessageListResp) Reset() {
	*x = FindMessageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindMessageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindMessageListResp) ProtoMessage() {}

func (x *FindMessageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindMessageListResp.ProtoReflect.Descriptor instead.
func (*FindMessageListResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{28}
}

func (x *FindMessageListResp) GetFindResultItems() []*SearchByConversationResult {
	if x != nil {
		return x.FindResultItems
	}
	return nil
}

func (x *FindMessageListResp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type MarkConversationMessageAsReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *MarkConversationMessageAsReadReq) Reset() {
	*x = MarkConversationMessageAsReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkConversationMessageAsReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkConversationMessageAsReadReq) ProtoMessage() {}

func (x *MarkConversationMessageAsReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkConversationMessageAsReadReq.ProtoReflect.Descriptor instead.
func (*MarkConversationMessageAsReadReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{29}
}

func (x *MarkConversationMessageAsReadReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type MarkConversationMessageAsReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkConversationMessageAsReadResp) Reset() {
	*x = MarkConversationMessageAsReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkConversationMessageAsReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkConversationMessageAsReadResp) ProtoMessage() {}

func (x *MarkConversationMessageAsReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkConversationMessageAsReadResp.ProtoReflect.Descriptor instead.
func (*MarkConversationMessageAsReadResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{30}
}

type MarkAllConversationMessageAsReadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkAllConversationMessageAsReadReq) Reset() {
	*x = MarkAllConversationMessageAsReadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAllConversationMessageAsReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllConversationMessageAsReadReq) ProtoMessage() {}

func (x *MarkAllConversationMessageAsReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllConversationMessageAsReadReq.ProtoReflect.Descriptor instead.
func (*MarkAllConversationMessageAsReadReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{31}
}

type MarkAllConversationMessageAsReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MarkAllConversationMessageAsReadResp) Reset() {
	*x = MarkAllConversationMessageAsReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAllConversationMessageAsReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllConversationMessageAsReadResp) ProtoMessage() {}

func (x *MarkAllConversationMessageAsReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllConversationMessageAsReadResp.ProtoReflect.Descriptor instead.
func (*MarkAllConversationMessageAsReadResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{32}
}

type DeleteMessageFromLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
}

func (x *DeleteMessageFromLocalStorageReq) Reset() {
	*x = DeleteMessageFromLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageFromLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageFromLocalStorageReq) ProtoMessage() {}

func (x *DeleteMessageFromLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageFromLocalStorageReq.ProtoReflect.Descriptor instead.
func (*DeleteMessageFromLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteMessageFromLocalStorageReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMessageFromLocalStorageReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type DeleteMessageFromLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMessageFromLocalStorageResp) Reset() {
	*x = DeleteMessageFromLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageFromLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageFromLocalStorageResp) ProtoMessage() {}

func (x *DeleteMessageFromLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageFromLocalStorageResp.ProtoReflect.Descriptor instead.
func (*DeleteMessageFromLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{34}
}

type ClearConversationAndDeleteAllMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *ClearConversationAndDeleteAllMsgReq) Reset() {
	*x = ClearConversationAndDeleteAllMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearConversationAndDeleteAllMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationAndDeleteAllMsgReq) ProtoMessage() {}

func (x *ClearConversationAndDeleteAllMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationAndDeleteAllMsgReq.ProtoReflect.Descriptor instead.
func (*ClearConversationAndDeleteAllMsgReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{35}
}

func (x *ClearConversationAndDeleteAllMsgReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type ClearConversationAndDeleteAllMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearConversationAndDeleteAllMsgResp) Reset() {
	*x = ClearConversationAndDeleteAllMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearConversationAndDeleteAllMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationAndDeleteAllMsgResp) ProtoMessage() {}

func (x *ClearConversationAndDeleteAllMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationAndDeleteAllMsgResp.ProtoReflect.Descriptor instead.
func (*ClearConversationAndDeleteAllMsgResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{36}
}

type DeleteConversationAndDeleteAllMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *DeleteConversationAndDeleteAllMsgReq) Reset() {
	*x = DeleteConversationAndDeleteAllMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationAndDeleteAllMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationAndDeleteAllMsgReq) ProtoMessage() {}

func (x *DeleteConversationAndDeleteAllMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationAndDeleteAllMsgReq.ProtoReflect.Descriptor instead.
func (*DeleteConversationAndDeleteAllMsgReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteConversationAndDeleteAllMsgReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type DeleteConversationAndDeleteAllMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConversationAndDeleteAllMsgResp) Reset() {
	*x = DeleteConversationAndDeleteAllMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConversationAndDeleteAllMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConversationAndDeleteAllMsgResp) ProtoMessage() {}

func (x *DeleteConversationAndDeleteAllMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConversationAndDeleteAllMsgResp.ProtoReflect.Descriptor instead.
func (*DeleteConversationAndDeleteAllMsgResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{38}
}

type SearchLocalMessagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchParam *SearchLocalMessagesParams `protobuf:"bytes,1,opt,name=searchParam,proto3" json:"searchParam,omitempty"`
}

func (x *SearchLocalMessagesReq) Reset() {
	*x = SearchLocalMessagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocalMessagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocalMessagesReq) ProtoMessage() {}

func (x *SearchLocalMessagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocalMessagesReq.ProtoReflect.Descriptor instead.
func (*SearchLocalMessagesReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{39}
}

func (x *SearchLocalMessagesReq) GetSearchParam() *SearchLocalMessagesParams {
	if x != nil {
		return x.SearchParam
	}
	return nil
}

type SearchLocalMessagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchResult *SearchLocalMessagesCallback `protobuf:"bytes,1,opt,name=searchResult,proto3" json:"searchResult,omitempty"`
}

func (x *SearchLocalMessagesResp) Reset() {
	*x = SearchLocalMessagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocalMessagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocalMessagesResp) ProtoMessage() {}

func (x *SearchLocalMessagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocalMessagesResp.ProtoReflect.Descriptor instead.
func (*SearchLocalMessagesResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{40}
}

func (x *SearchLocalMessagesResp) GetSearchResult() *SearchLocalMessagesCallback {
	if x != nil {
		return x.SearchResult
	}
	return nil
}

type SetMessageLocalExReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	LocalEx        string `protobuf:"bytes,3,opt,name=localEx,proto3" json:"localEx,omitempty"`
}

func (x *SetMessageLocalExReq) Reset() {
	*x = SetMessageLocalExReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessageLocalExReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessageLocalExReq) ProtoMessage() {}

func (x *SetMessageLocalExReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessageLocalExReq.ProtoReflect.Descriptor instead.
func (*SetMessageLocalExReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{41}
}

func (x *SetMessageLocalExReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *SetMessageLocalExReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *SetMessageLocalExReq) GetLocalEx() string {
	if x != nil {
		return x.LocalEx
	}
	return ""
}

type SetMessageLocalExResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetMessageLocalExResp) Reset() {
	*x = SetMessageLocalExResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMessageLocalExResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMessageLocalExResp) ProtoMessage() {}

func (x *SetMessageLocalExResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMessageLocalExResp.ProtoReflect.Descriptor instead.
func (*SetMessageLocalExResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{42}
}

func (x *SetMessageLocalExResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SearchConversationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchParam string `protobuf:"bytes,1,opt,name=searchParam,proto3" json:"searchParam,omitempty"`
}

func (x *SearchConversationReq) Reset() {
	*x = SearchConversationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchConversationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConversationReq) ProtoMessage() {}

func (x *SearchConversationReq) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConversationReq.ProtoReflect.Descriptor instead.
func (*SearchConversationReq) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{43}
}

func (x *SearchConversationReq) GetSearchParam() string {
	if x != nil {
		return x.SearchParam
	}
	return ""
}

type SearchConversationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList,omitempty"`
}

func (x *SearchConversationResp) Reset() {
	*x = SearchConversationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_conversation_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchConversationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchConversationResp) ProtoMessage() {}

func (x *SearchConversationResp) ProtoReflect() protoreflect.Message {
	mi := &file_conversation_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchConversationResp.ProtoReflect.Descriptor instead.
func (*SearchConversationResp) Descriptor() ([]byte, []int) {
	return file_conversation_proto_rawDescGZIP(), []int{44}
}

func (x *SearchConversationResp) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

var File_conversation_proto protoreflect.FileDescriptor

var file_conversation_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x10, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x98, 0x01, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5d, 0x0a,
	0x0f, 0x66, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x66, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xff, 0x02, 0x0a,
	0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0,
	0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x61,
	0x0a, 0x11, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x11,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xb8, 0x02, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x48, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x22, 0x16, 0x0a, 0x14, 0x48, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x22, 0x23, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44, 0x22, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x45, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6c, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x48, 0x69, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22,
	0x1a, 0x0a, 0x18, 0x48, 0x69, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5f, 0x0a, 0x17, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x72, 0x61, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x72, 0x61, 0x66, 0x74, 0x54, 0x65, 0x78, 0x74, 0x22, 0x1a, 0x0a, 0x18,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x72, 0x61, 0x66, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xe8, 0x03, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x4d,
	0x73, 0x67, 0x4f, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x76, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0d, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x27, 0x0a, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x02, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x0f, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x0f, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d,
	0x69, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x63, 0x76,
	0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x65, 0x78, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6d, 0x73, 0x67, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x22, 0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x61, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x4c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x6d, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x72, 0x67,
	0x73, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0f, 0x66, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0f, 0x66, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x20, 0x4d, 0x61, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x23, 0x0a, 0x21, 0x4d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x61, 0x72,
	0x6b, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71,
	0x22, 0x26, 0x0a, 0x24, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0x23, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x23, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x26, 0x0a, 0x24, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x4e, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x22, 0x27, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6e, 0x0a, 0x16, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x54, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x73, 0x0a, 0x17, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x7a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x45, 0x78, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x22, 0x31, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x39, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x67, 0x0a, 0x16, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x49, 0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x48, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0xaa, 0x02, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_conversation_proto_rawDescOnce sync.Once
	file_conversation_proto_rawDescData = file_conversation_proto_rawDesc
)

func file_conversation_proto_rawDescGZIP() []byte {
	file_conversation_proto_rawDescOnce.Do(func() {
		file_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(file_conversation_proto_rawDescData)
	})
	return file_conversation_proto_rawDescData
}

var file_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_conversation_proto_goTypes = []interface{}{
	(*ConversationArgs)(nil),                      // 0: openim.sdk.conversation.ConversationArgs
	(*FindMessageListCallback)(nil),               // 1: openim.sdk.conversation.FindMessageListCallback
	(*SearchLocalMessagesParams)(nil),             // 2: openim.sdk.conversation.SearchLocalMessagesParams
	(*SearchLocalMessagesCallback)(nil),           // 3: openim.sdk.conversation.SearchLocalMessagesCallback
	(*SearchByConversationResult)(nil),            // 4: openim.sdk.conversation.SearchByConversationResult
	(*GetAllConversationListReq)(nil),             // 5: openim.sdk.conversation.GetAllConversationListReq
	(*GetAllConversationListResp)(nil),            // 6: openim.sdk.conversation.GetAllConversationListResp
	(*GetConversationListSplitReq)(nil),           // 7: openim.sdk.conversation.GetConversationListSplitReq
	(*GetConversationListSplitResp)(nil),          // 8: openim.sdk.conversation.GetConversationListSplitResp
	(*HideConversationReq)(nil),                   // 9: openim.sdk.conversation.HideConversationReq
	(*HideConversationResp)(nil),                  // 10: openim.sdk.conversation.HideConversationResp
	(*GetAtAllTagReq)(nil),                        // 11: openim.sdk.conversation.GetAtAllTagReq
	(*GetAtAllTagResp)(nil),                       // 12: openim.sdk.conversation.GetAtAllTagResp
	(*GetOneConversationReq)(nil),                 // 13: openim.sdk.conversation.GetOneConversationReq
	(*GetOneConversationResp)(nil),                // 14: openim.sdk.conversation.GetOneConversationResp
	(*GetMultipleConversationReq)(nil),            // 15: openim.sdk.conversation.GetMultipleConversationReq
	(*GetMultipleConversationResp)(nil),           // 16: openim.sdk.conversation.GetMultipleConversationResp
	(*HideAllConversationsReq)(nil),               // 17: openim.sdk.conversation.HideAllConversationsReq
	(*HideAllConversationsResp)(nil),              // 18: openim.sdk.conversation.HideAllConversationsResp
	(*SetConversationDraftReq)(nil),               // 19: openim.sdk.conversation.SetConversationDraftReq
	(*SetConversationDraftResp)(nil),              // 20: openim.sdk.conversation.SetConversationDraftResp
	(*SetConversationReq)(nil),                    // 21: openim.sdk.conversation.SetConversationReq
	(*SetConversationResp)(nil),                   // 22: openim.sdk.conversation.SetConversationResp
	(*GetTotalUnreadMsgCountReq)(nil),             // 23: openim.sdk.conversation.GetTotalUnreadMsgCountReq
	(*GetTotalUnreadMsgCountResp)(nil),            // 24: openim.sdk.conversation.GetTotalUnreadMsgCountResp
	(*GetConversationIDBySessionTypeReq)(nil),     // 25: openim.sdk.conversation.GetConversationIDBySessionTypeReq
	(*GetConversationIDBySessionTypeResp)(nil),    // 26: openim.sdk.conversation.GetConversationIDBySessionTypeResp
	(*FindMessageListReq)(nil),                    // 27: openim.sdk.conversation.FindMessageListReq
	(*FindMessageListResp)(nil),                   // 28: openim.sdk.conversation.FindMessageListResp
	(*MarkConversationMessageAsReadReq)(nil),      // 29: openim.sdk.conversation.MarkConversationMessageAsReadReq
	(*MarkConversationMessageAsReadResp)(nil),     // 30: openim.sdk.conversation.MarkConversationMessageAsReadResp
	(*MarkAllConversationMessageAsReadReq)(nil),   // 31: openim.sdk.conversation.MarkAllConversationMessageAsReadReq
	(*MarkAllConversationMessageAsReadResp)(nil),  // 32: openim.sdk.conversation.MarkAllConversationMessageAsReadResp
	(*DeleteMessageFromLocalStorageReq)(nil),      // 33: openim.sdk.conversation.DeleteMessageFromLocalStorageReq
	(*DeleteMessageFromLocalStorageResp)(nil),     // 34: openim.sdk.conversation.DeleteMessageFromLocalStorageResp
	(*ClearConversationAndDeleteAllMsgReq)(nil),   // 35: openim.sdk.conversation.ClearConversationAndDeleteAllMsgReq
	(*ClearConversationAndDeleteAllMsgResp)(nil),  // 36: openim.sdk.conversation.ClearConversationAndDeleteAllMsgResp
	(*DeleteConversationAndDeleteAllMsgReq)(nil),  // 37: openim.sdk.conversation.DeleteConversationAndDeleteAllMsgReq
	(*DeleteConversationAndDeleteAllMsgResp)(nil), // 38: openim.sdk.conversation.DeleteConversationAndDeleteAllMsgResp
	(*SearchLocalMessagesReq)(nil),                // 39: openim.sdk.conversation.SearchLocalMessagesReq
	(*SearchLocalMessagesResp)(nil),               // 40: openim.sdk.conversation.SearchLocalMessagesResp
	(*SetMessageLocalExReq)(nil),                  // 41: openim.sdk.conversation.SetMessageLocalExReq
	(*SetMessageLocalExResp)(nil),                 // 42: openim.sdk.conversation.SetMessageLocalExResp
	(*SearchConversationReq)(nil),                 // 43: openim.sdk.conversation.SearchConversationReq
	(*SearchConversationResp)(nil),                // 44: openim.sdk.conversation.SearchConversationResp
	(*shared.IMMessage)(nil),                      // 45: openim.sdk.shared.IMMessage
	(*shared.IMConversation)(nil),                 // 46: openim.sdk.shared.IMConversation
}
var file_conversation_proto_depIdxs = []int32{
	4,  // 0: openim.sdk.conversation.FindMessageListCallback.findResultItems:type_name -> openim.sdk.conversation.SearchByConversationResult
	4,  // 1: openim.sdk.conversation.SearchLocalMessagesCallback.searchResultItems:type_name -> openim.sdk.conversation.SearchByConversationResult
	45, // 2: openim.sdk.conversation.SearchByConversationResult.messageList:type_name -> openim.sdk.shared.IMMessage
	46, // 3: openim.sdk.conversation.GetAllConversationListResp.conversationList:type_name -> openim.sdk.shared.IMConversation
	46, // 4: openim.sdk.conversation.GetConversationListSplitResp.conversationList:type_name -> openim.sdk.shared.IMConversation
	46, // 5: openim.sdk.conversation.GetOneConversationResp.conversation:type_name -> openim.sdk.shared.IMConversation
	46, // 6: openim.sdk.conversation.GetMultipleConversationResp.conversationList:type_name -> openim.sdk.shared.IMConversation
	0,  // 7: openim.sdk.conversation.FindMessageListReq.conversationsArgs:type_name -> openim.sdk.conversation.ConversationArgs
	4,  // 8: openim.sdk.conversation.FindMessageListResp.findResultItems:type_name -> openim.sdk.conversation.SearchByConversationResult
	2,  // 9: openim.sdk.conversation.SearchLocalMessagesReq.searchParam:type_name -> openim.sdk.conversation.SearchLocalMessagesParams
	3,  // 10: openim.sdk.conversation.SearchLocalMessagesResp.searchResult:type_name -> openim.sdk.conversation.SearchLocalMessagesCallback
	46, // 11: openim.sdk.conversation.SearchConversationResp.conversationList:type_name -> openim.sdk.shared.IMConversation
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_conversation_proto_init() }
func file_conversation_proto_init() {
	if File_conversation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_conversation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindMessageListCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocalMessagesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocalMessagesCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchByConversationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllConversationListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllConversationListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationListSplitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationListSplitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAtAllTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAtAllTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultipleConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideAllConversationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HideAllConversationsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationDraftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationDraftResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalUnreadMsgCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTotalUnreadMsgCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationIDBySessionTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConversationIDBySessionTypeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindMessageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindMessageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkConversationMessageAsReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkConversationMessageAsReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkAllConversationMessageAsReadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkAllConversationMessageAsReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageFromLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageFromLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearConversationAndDeleteAllMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearConversationAndDeleteAllMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationAndDeleteAllMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConversationAndDeleteAllMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocalMessagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocalMessagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessageLocalExReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMessageLocalExResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchConversationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_conversation_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchConversationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_conversation_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_conversation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conversation_proto_goTypes,
		DependencyIndexes: file_conversation_proto_depIdxs,
		MessageInfos:      file_conversation_proto_msgTypes,
	}.Build()
	File_conversation_proto = out.File
	file_conversation_proto_rawDesc = nil
	file_conversation_proto_goTypes = nil
	file_conversation_proto_depIdxs = nil
}
