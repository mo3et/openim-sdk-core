// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.26.0
// source: event.proto

package event

import (
	shared "github.com/openimsdk/openim-sdk-core/v3/proto/go/shared"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FuncRequestEventName int32

const (
	FuncRequestEventName_None                                      FuncRequestEventName = 0
	FuncRequestEventName_GetAllConversationList                    FuncRequestEventName = 1
	FuncRequestEventName_GetConversationList                       FuncRequestEventName = 2
	FuncRequestEventName_GetConversation                           FuncRequestEventName = 3
	FuncRequestEventName_InitSDK                                   FuncRequestEventName = 4
	FuncRequestEventName_Login                                     FuncRequestEventName = 5
	FuncRequestEventName_Logout                                    FuncRequestEventName = 106
	FuncRequestEventName_SetAppBackgroundStatus                    FuncRequestEventName = 107
	FuncRequestEventName_NetworkStatusChanged                      FuncRequestEventName = 108
	FuncRequestEventName_GetLoginStatus                            FuncRequestEventName = 109
	FuncRequestEventName_Version                                   FuncRequestEventName = 110
	FuncRequestEventName_SendMessage                               FuncRequestEventName = 6
	FuncRequestEventName_UploadLogs                                FuncRequestEventName = 7
	FuncRequestEventName_UploadFile                                FuncRequestEventName = 8
	FuncRequestEventName_Log                                       FuncRequestEventName = 9
	FuncRequestEventName_UpdateFcmToken                            FuncRequestEventName = 10
	FuncRequestEventName_SetAppBadge                               FuncRequestEventName = 11
	FuncRequestEventName_EventOnSendMsgProgress                    FuncRequestEventName = 12
	FuncRequestEventName_EventOnUploadFileProgress                 FuncRequestEventName = 13
	FuncRequestEventName_EventOnUploadLogsProgress                 FuncRequestEventName = 14
	FuncRequestEventName_EventOnConnecting                         FuncRequestEventName = 15
	FuncRequestEventName_EventOnConnectSuccess                     FuncRequestEventName = 16
	FuncRequestEventName_EventOnConnectFailed                      FuncRequestEventName = 17
	FuncRequestEventName_EventOnKickedOffline                      FuncRequestEventName = 18
	FuncRequestEventName_EventOnUserTokenExpired                   FuncRequestEventName = 19
	FuncRequestEventName_EventOnUserTokenInvalid                   FuncRequestEventName = 20
	FuncRequestEventName_EventOnSyncServerStart                    FuncRequestEventName = 21
	FuncRequestEventName_EventOnSyncServerFinish                   FuncRequestEventName = 22
	FuncRequestEventName_EventOnSyncServerFailed                   FuncRequestEventName = 23
	FuncRequestEventName_EventOnSyncServerProgress                 FuncRequestEventName = 24
	FuncRequestEventName_EventOnNewConversation                    FuncRequestEventName = 25
	FuncRequestEventName_EventOnConversationChanged                FuncRequestEventName = 26
	FuncRequestEventName_EventOnTotalUnreadMessageCountChanged     FuncRequestEventName = 27
	FuncRequestEventName_EventOnConversationUserInputStatusChanged FuncRequestEventName = 28
	FuncRequestEventName_EventOnRecvNewMessage                     FuncRequestEventName = 29
	FuncRequestEventName_EventOnRecvC2CReadReceipt                 FuncRequestEventName = 30
	FuncRequestEventName_EventOnNewRecvMessageRevoked              FuncRequestEventName = 31
	FuncRequestEventName_EventOnRecvOfflineNewMessage              FuncRequestEventName = 32
	FuncRequestEventName_EventOnMessageDeleted                     FuncRequestEventName = 33
	FuncRequestEventName_EventOnRecvOnlineOnlyMessage              FuncRequestEventName = 34
	FuncRequestEventName_EventOnMessageEdited                      FuncRequestEventName = 35
	// FriendCallback Events
	FuncRequestEventName_EventOnFriendApplicationAdded    FuncRequestEventName = 36
	FuncRequestEventName_EventOnFriendApplicationDeleted  FuncRequestEventName = 37
	FuncRequestEventName_EventOnFriendApplicationAccepted FuncRequestEventName = 38
	FuncRequestEventName_EventOnFriendApplicationRejected FuncRequestEventName = 39
	FuncRequestEventName_EventOnFriendAdded               FuncRequestEventName = 40
	FuncRequestEventName_EventOnFriendDeleted             FuncRequestEventName = 41
	FuncRequestEventName_EventOnFriendInfoChanged         FuncRequestEventName = 42
	FuncRequestEventName_EventOnBlackAdded                FuncRequestEventName = 43
	FuncRequestEventName_EventOnBlackDeleted              FuncRequestEventName = 44
	// GroupCallback Events
	FuncRequestEventName_EventOnJoinedGroupAdded         FuncRequestEventName = 45
	FuncRequestEventName_EventOnJoinedGroupDeleted       FuncRequestEventName = 46
	FuncRequestEventName_EventOnGroupMemberAdded         FuncRequestEventName = 47
	FuncRequestEventName_EventOnGroupMemberDeleted       FuncRequestEventName = 48
	FuncRequestEventName_EventOnGroupApplicationAdded    FuncRequestEventName = 49
	FuncRequestEventName_EventOnGroupApplicationDeleted  FuncRequestEventName = 50
	FuncRequestEventName_EventOnGroupInfoChanged         FuncRequestEventName = 51
	FuncRequestEventName_EventOnGroupDismissed           FuncRequestEventName = 52
	FuncRequestEventName_EventOnGroupMemberInfoChanged   FuncRequestEventName = 53
	FuncRequestEventName_EventOnGroupApplicationAccepted FuncRequestEventName = 54
	FuncRequestEventName_EventOnGroupApplicationRejected FuncRequestEventName = 55
	// CustomBusinessCallback Events
	FuncRequestEventName_EventOnRecvCustomBusinessMessage FuncRequestEventName = 56
	// UserCallback Events
	FuncRequestEventName_EventOnSelfInfoUpdated          FuncRequestEventName = 57
	FuncRequestEventName_EventOnUserStatusChanged        FuncRequestEventName = 58
	FuncRequestEventName_EventOnUserCommandAdd           FuncRequestEventName = 59
	FuncRequestEventName_EventOnUserCommandDelete        FuncRequestEventName = 60
	FuncRequestEventName_EventOnUserCommandUpdate        FuncRequestEventName = 61
	FuncRequestEventName_CreateGroup                     FuncRequestEventName = 1000
	FuncRequestEventName_JoinGroup                       FuncRequestEventName = 1001
	FuncRequestEventName_QuitGroup                       FuncRequestEventName = 1002
	FuncRequestEventName_DismissGroup                    FuncRequestEventName = 1003
	FuncRequestEventName_ChangeGroupMute                 FuncRequestEventName = 1004
	FuncRequestEventName_ChangeGroupMemberMute           FuncRequestEventName = 1005
	FuncRequestEventName_TransferGroupOwner              FuncRequestEventName = 1006
	FuncRequestEventName_KickGroupMember                 FuncRequestEventName = 1007
	FuncRequestEventName_SetGroupInfo                    FuncRequestEventName = 1008
	FuncRequestEventName_SetGroupMemberInfo              FuncRequestEventName = 1009
	FuncRequestEventName_GetJoinedGroups                 FuncRequestEventName = 1010
	FuncRequestEventName_GetJoinedGroupsPage             FuncRequestEventName = 1011
	FuncRequestEventName_GetSpecifiedGroupsInfo          FuncRequestEventName = 1012
	FuncRequestEventName_SearchGroups                    FuncRequestEventName = 1013
	FuncRequestEventName_GetGroupMemberOwnerAndAdmin     FuncRequestEventName = 1014
	FuncRequestEventName_GetGroupMembersByJoinTimeFilter FuncRequestEventName = 1015
	FuncRequestEventName_GetSpecifiedGroupMembersInfo    FuncRequestEventName = 1016
	FuncRequestEventName_GetGroupMembers                 FuncRequestEventName = 1017
	FuncRequestEventName_GetGroupRequest                 FuncRequestEventName = 1018
	FuncRequestEventName_SearchGroupMembers              FuncRequestEventName = 1019
	FuncRequestEventName_IsJoinGroup                     FuncRequestEventName = 1020
	FuncRequestEventName_GetUsersInGroup                 FuncRequestEventName = 1021
	FuncRequestEventName_InviteUserToGroup               FuncRequestEventName = 1022
	FuncRequestEventName_HandlerGroupRequest             FuncRequestEventName = 1023
	FuncRequestEventName_GetSpecifiedFriends             FuncRequestEventName = 1100
	FuncRequestEventName_AddFriend                       FuncRequestEventName = 1101
	FuncRequestEventName_GetFriendRequests               FuncRequestEventName = 1102
	FuncRequestEventName_HandlerFriendRequest            FuncRequestEventName = 1103
	FuncRequestEventName_CheckFriend                     FuncRequestEventName = 1104
	FuncRequestEventName_DeleteFriend                    FuncRequestEventName = 1105
	FuncRequestEventName_GetFriends                      FuncRequestEventName = 1106
	FuncRequestEventName_GetFriendsPage                  FuncRequestEventName = 1107
	FuncRequestEventName_SearchFriends                   FuncRequestEventName = 1108
	FuncRequestEventName_AddBlack                        FuncRequestEventName = 1109
	FuncRequestEventName_DeleteBlack                     FuncRequestEventName = 1110
	FuncRequestEventName_GetBlacks                       FuncRequestEventName = 1111
	FuncRequestEventName_UpdateFriends                   FuncRequestEventName = 1112
	// conversation_msg
	FuncRequestEventName_GetConversationListSplit             FuncRequestEventName = 2000
	FuncRequestEventName_HideConversation                     FuncRequestEventName = 2001
	FuncRequestEventName_GetAtAllTag                          FuncRequestEventName = 2002
	FuncRequestEventName_GetOneConversation                   FuncRequestEventName = 2003
	FuncRequestEventName_GetMultipleConversation              FuncRequestEventName = 2004
	FuncRequestEventName_HideAllConversations                 FuncRequestEventName = 2005
	FuncRequestEventName_SetConversationDraft                 FuncRequestEventName = 2006
	FuncRequestEventName_SetConversation                      FuncRequestEventName = 2007
	FuncRequestEventName_GetTotalUnreadMsgCount               FuncRequestEventName = 2008
	FuncRequestEventName_GetConversationIDBySessionType       FuncRequestEventName = 2009
	FuncRequestEventName_FindMessageList                      FuncRequestEventName = 2010
	FuncRequestEventName_GetAdvancedHistoryMessageList        FuncRequestEventName = 2011
	FuncRequestEventName_GetAdvancedHistoryMessageListReverse FuncRequestEventName = 2012
	FuncRequestEventName_RevokeMessage                        FuncRequestEventName = 2013
	FuncRequestEventName_TypingStatusUpdate                   FuncRequestEventName = 2014
	FuncRequestEventName_MarkConversationMessageAsRead        FuncRequestEventName = 2015
	FuncRequestEventName_MarkAllConversationMessageAsRead     FuncRequestEventName = 2016
	FuncRequestEventName_DeleteMessageFromLocalStorage        FuncRequestEventName = 2017
	FuncRequestEventName_DeleteMessage                        FuncRequestEventName = 2018
	FuncRequestEventName_DeleteAllMsgFromLocalAndServer       FuncRequestEventName = 2019
	FuncRequestEventName_DeleteAllMessageFromLocalStorage     FuncRequestEventName = 2020
	FuncRequestEventName_ClearConversationAndDeleteAllMsg     FuncRequestEventName = 2021
	FuncRequestEventName_DeleteConversationAndDeleteAllMsg    FuncRequestEventName = 2022
	FuncRequestEventName_InsertSingleMessageToLocalStorage    FuncRequestEventName = 2023
	FuncRequestEventName_InsertGroupMessageToLocalStorage     FuncRequestEventName = 2024
	FuncRequestEventName_SearchLocalMessages                  FuncRequestEventName = 2025
	FuncRequestEventName_SetMessageLocalEx                    FuncRequestEventName = 2026
	FuncRequestEventName_SearchConversation                   FuncRequestEventName = 2027
	FuncRequestEventName_SubscribeUsersOnlineStatus           FuncRequestEventName = 2227
	FuncRequestEventName_UnsubscribeUsersOnlineStatus         FuncRequestEventName = 2228
	FuncRequestEventName_CreateTextMessage                    FuncRequestEventName = 2028
	FuncRequestEventName_CreateAdvancedTextMessage            FuncRequestEventName = 2029
	FuncRequestEventName_CreateTextAtMessage                  FuncRequestEventName = 2030
	FuncRequestEventName_CreateLocationMessage                FuncRequestEventName = 2031
	FuncRequestEventName_CreateCustomMessage                  FuncRequestEventName = 2032
	FuncRequestEventName_CreateQuoteMessage                   FuncRequestEventName = 2033
	FuncRequestEventName_CreateAdvancedQuoteMessage           FuncRequestEventName = 2034
	FuncRequestEventName_CreateCardMessage                    FuncRequestEventName = 2035
	FuncRequestEventName_CreateImageMessage                   FuncRequestEventName = 2036
	FuncRequestEventName_CreateSoundMessage                   FuncRequestEventName = 2037
	FuncRequestEventName_CreateVideoMessage                   FuncRequestEventName = 2038
	FuncRequestEventName_CreateFileMessage                    FuncRequestEventName = 2039
	FuncRequestEventName_CreateMergerMessage                  FuncRequestEventName = 2040
	FuncRequestEventName_CreateFaceMessage                    FuncRequestEventName = 2041
	FuncRequestEventName_CreateForwardMessage                 FuncRequestEventName = 2042
	FuncRequestEventName_ProcessUserCommandGetAll             FuncRequestEventName = 2100
	FuncRequestEventName_GetSelfUserInfo                      FuncRequestEventName = 2101
	FuncRequestEventName_SetSelfInfo                          FuncRequestEventName = 2102
	FuncRequestEventName_ProcessUserCommandAdd                FuncRequestEventName = 2103
	FuncRequestEventName_ProcessUserCommandDelete             FuncRequestEventName = 2104
	FuncRequestEventName_ProcessUserCommandUpdate             FuncRequestEventName = 2105
	FuncRequestEventName_GetUsersInfo                         FuncRequestEventName = 2106
	// The following functions are only used for Go and JS interaction and can be ignored by other platforms.
	FuncRequestEventName_JsFileOpen    FuncRequestEventName = 2110
	FuncRequestEventName_JsFileRead    FuncRequestEventName = 2111
	FuncRequestEventName_JsFileClose   FuncRequestEventName = 2112
	FuncRequestEventName_JsSqliteOpen  FuncRequestEventName = 2113
	FuncRequestEventName_JsSqliteExec  FuncRequestEventName = 2114
	FuncRequestEventName_JsSqliteQuery FuncRequestEventName = 2115
	FuncRequestEventName_JsSqliteClose FuncRequestEventName = 2116
)

// Enum value maps for FuncRequestEventName.
var (
	FuncRequestEventName_name = map[int32]string{
		0:    "None",
		1:    "GetAllConversationList",
		2:    "GetConversationList",
		3:    "GetConversation",
		4:    "InitSDK",
		5:    "Login",
		106:  "Logout",
		107:  "SetAppBackgroundStatus",
		108:  "NetworkStatusChanged",
		109:  "GetLoginStatus",
		110:  "Version",
		6:    "SendMessage",
		7:    "UploadLogs",
		8:    "UploadFile",
		9:    "Log",
		10:   "UpdateFcmToken",
		11:   "SetAppBadge",
		12:   "EventOnSendMsgProgress",
		13:   "EventOnUploadFileProgress",
		14:   "EventOnUploadLogsProgress",
		15:   "EventOnConnecting",
		16:   "EventOnConnectSuccess",
		17:   "EventOnConnectFailed",
		18:   "EventOnKickedOffline",
		19:   "EventOnUserTokenExpired",
		20:   "EventOnUserTokenInvalid",
		21:   "EventOnSyncServerStart",
		22:   "EventOnSyncServerFinish",
		23:   "EventOnSyncServerFailed",
		24:   "EventOnSyncServerProgress",
		25:   "EventOnNewConversation",
		26:   "EventOnConversationChanged",
		27:   "EventOnTotalUnreadMessageCountChanged",
		28:   "EventOnConversationUserInputStatusChanged",
		29:   "EventOnRecvNewMessage",
		30:   "EventOnRecvC2CReadReceipt",
		31:   "EventOnNewRecvMessageRevoked",
		32:   "EventOnRecvOfflineNewMessage",
		33:   "EventOnMessageDeleted",
		34:   "EventOnRecvOnlineOnlyMessage",
		35:   "EventOnMessageEdited",
		36:   "EventOnFriendApplicationAdded",
		37:   "EventOnFriendApplicationDeleted",
		38:   "EventOnFriendApplicationAccepted",
		39:   "EventOnFriendApplicationRejected",
		40:   "EventOnFriendAdded",
		41:   "EventOnFriendDeleted",
		42:   "EventOnFriendInfoChanged",
		43:   "EventOnBlackAdded",
		44:   "EventOnBlackDeleted",
		45:   "EventOnJoinedGroupAdded",
		46:   "EventOnJoinedGroupDeleted",
		47:   "EventOnGroupMemberAdded",
		48:   "EventOnGroupMemberDeleted",
		49:   "EventOnGroupApplicationAdded",
		50:   "EventOnGroupApplicationDeleted",
		51:   "EventOnGroupInfoChanged",
		52:   "EventOnGroupDismissed",
		53:   "EventOnGroupMemberInfoChanged",
		54:   "EventOnGroupApplicationAccepted",
		55:   "EventOnGroupApplicationRejected",
		56:   "EventOnRecvCustomBusinessMessage",
		57:   "EventOnSelfInfoUpdated",
		58:   "EventOnUserStatusChanged",
		59:   "EventOnUserCommandAdd",
		60:   "EventOnUserCommandDelete",
		61:   "EventOnUserCommandUpdate",
		1000: "CreateGroup",
		1001: "JoinGroup",
		1002: "QuitGroup",
		1003: "DismissGroup",
		1004: "ChangeGroupMute",
		1005: "ChangeGroupMemberMute",
		1006: "TransferGroupOwner",
		1007: "KickGroupMember",
		1008: "SetGroupInfo",
		1009: "SetGroupMemberInfo",
		1010: "GetJoinedGroups",
		1011: "GetJoinedGroupsPage",
		1012: "GetSpecifiedGroupsInfo",
		1013: "SearchGroups",
		1014: "GetGroupMemberOwnerAndAdmin",
		1015: "GetGroupMembersByJoinTimeFilter",
		1016: "GetSpecifiedGroupMembersInfo",
		1017: "GetGroupMembers",
		1018: "GetGroupRequest",
		1019: "SearchGroupMembers",
		1020: "IsJoinGroup",
		1021: "GetUsersInGroup",
		1022: "InviteUserToGroup",
		1023: "HandlerGroupRequest",
		1100: "GetSpecifiedFriends",
		1101: "AddFriend",
		1102: "GetFriendRequests",
		1103: "HandlerFriendRequest",
		1104: "CheckFriend",
		1105: "DeleteFriend",
		1106: "GetFriends",
		1107: "GetFriendsPage",
		1108: "SearchFriends",
		1109: "AddBlack",
		1110: "DeleteBlack",
		1111: "GetBlacks",
		1112: "UpdateFriends",
		2000: "GetConversationListSplit",
		2001: "HideConversation",
		2002: "GetAtAllTag",
		2003: "GetOneConversation",
		2004: "GetMultipleConversation",
		2005: "HideAllConversations",
		2006: "SetConversationDraft",
		2007: "SetConversation",
		2008: "GetTotalUnreadMsgCount",
		2009: "GetConversationIDBySessionType",
		2010: "FindMessageList",
		2011: "GetAdvancedHistoryMessageList",
		2012: "GetAdvancedHistoryMessageListReverse",
		2013: "RevokeMessage",
		2014: "TypingStatusUpdate",
		2015: "MarkConversationMessageAsRead",
		2016: "MarkAllConversationMessageAsRead",
		2017: "DeleteMessageFromLocalStorage",
		2018: "DeleteMessage",
		2019: "DeleteAllMsgFromLocalAndServer",
		2020: "DeleteAllMessageFromLocalStorage",
		2021: "ClearConversationAndDeleteAllMsg",
		2022: "DeleteConversationAndDeleteAllMsg",
		2023: "InsertSingleMessageToLocalStorage",
		2024: "InsertGroupMessageToLocalStorage",
		2025: "SearchLocalMessages",
		2026: "SetMessageLocalEx",
		2027: "SearchConversation",
		2227: "SubscribeUsersOnlineStatus",
		2228: "UnsubscribeUsersOnlineStatus",
		2028: "CreateTextMessage",
		2029: "CreateAdvancedTextMessage",
		2030: "CreateTextAtMessage",
		2031: "CreateLocationMessage",
		2032: "CreateCustomMessage",
		2033: "CreateQuoteMessage",
		2034: "CreateAdvancedQuoteMessage",
		2035: "CreateCardMessage",
		2036: "CreateImageMessage",
		2037: "CreateSoundMessage",
		2038: "CreateVideoMessage",
		2039: "CreateFileMessage",
		2040: "CreateMergerMessage",
		2041: "CreateFaceMessage",
		2042: "CreateForwardMessage",
		2100: "ProcessUserCommandGetAll",
		2101: "GetSelfUserInfo",
		2102: "SetSelfInfo",
		2103: "ProcessUserCommandAdd",
		2104: "ProcessUserCommandDelete",
		2105: "ProcessUserCommandUpdate",
		2106: "GetUsersInfo",
		2110: "JsFileOpen",
		2111: "JsFileRead",
		2112: "JsFileClose",
		2113: "JsSqliteOpen",
		2114: "JsSqliteExec",
		2115: "JsSqliteQuery",
		2116: "JsSqliteClose",
	}
	FuncRequestEventName_value = map[string]int32{
		"None":                                      0,
		"GetAllConversationList":                    1,
		"GetConversationList":                       2,
		"GetConversation":                           3,
		"InitSDK":                                   4,
		"Login":                                     5,
		"Logout":                                    106,
		"SetAppBackgroundStatus":                    107,
		"NetworkStatusChanged":                      108,
		"GetLoginStatus":                            109,
		"Version":                                   110,
		"SendMessage":                               6,
		"UploadLogs":                                7,
		"UploadFile":                                8,
		"Log":                                       9,
		"UpdateFcmToken":                            10,
		"SetAppBadge":                               11,
		"EventOnSendMsgProgress":                    12,
		"EventOnUploadFileProgress":                 13,
		"EventOnUploadLogsProgress":                 14,
		"EventOnConnecting":                         15,
		"EventOnConnectSuccess":                     16,
		"EventOnConnectFailed":                      17,
		"EventOnKickedOffline":                      18,
		"EventOnUserTokenExpired":                   19,
		"EventOnUserTokenInvalid":                   20,
		"EventOnSyncServerStart":                    21,
		"EventOnSyncServerFinish":                   22,
		"EventOnSyncServerFailed":                   23,
		"EventOnSyncServerProgress":                 24,
		"EventOnNewConversation":                    25,
		"EventOnConversationChanged":                26,
		"EventOnTotalUnreadMessageCountChanged":     27,
		"EventOnConversationUserInputStatusChanged": 28,
		"EventOnRecvNewMessage":                     29,
		"EventOnRecvC2CReadReceipt":                 30,
		"EventOnNewRecvMessageRevoked":              31,
		"EventOnRecvOfflineNewMessage":              32,
		"EventOnMessageDeleted":                     33,
		"EventOnRecvOnlineOnlyMessage":              34,
		"EventOnMessageEdited":                      35,
		"EventOnFriendApplicationAdded":             36,
		"EventOnFriendApplicationDeleted":           37,
		"EventOnFriendApplicationAccepted":          38,
		"EventOnFriendApplicationRejected":          39,
		"EventOnFriendAdded":                        40,
		"EventOnFriendDeleted":                      41,
		"EventOnFriendInfoChanged":                  42,
		"EventOnBlackAdded":                         43,
		"EventOnBlackDeleted":                       44,
		"EventOnJoinedGroupAdded":                   45,
		"EventOnJoinedGroupDeleted":                 46,
		"EventOnGroupMemberAdded":                   47,
		"EventOnGroupMemberDeleted":                 48,
		"EventOnGroupApplicationAdded":              49,
		"EventOnGroupApplicationDeleted":            50,
		"EventOnGroupInfoChanged":                   51,
		"EventOnGroupDismissed":                     52,
		"EventOnGroupMemberInfoChanged":             53,
		"EventOnGroupApplicationAccepted":           54,
		"EventOnGroupApplicationRejected":           55,
		"EventOnRecvCustomBusinessMessage":          56,
		"EventOnSelfInfoUpdated":                    57,
		"EventOnUserStatusChanged":                  58,
		"EventOnUserCommandAdd":                     59,
		"EventOnUserCommandDelete":                  60,
		"EventOnUserCommandUpdate":                  61,
		"CreateGroup":                               1000,
		"JoinGroup":                                 1001,
		"QuitGroup":                                 1002,
		"DismissGroup":                              1003,
		"ChangeGroupMute":                           1004,
		"ChangeGroupMemberMute":                     1005,
		"TransferGroupOwner":                        1006,
		"KickGroupMember":                           1007,
		"SetGroupInfo":                              1008,
		"SetGroupMemberInfo":                        1009,
		"GetJoinedGroups":                           1010,
		"GetJoinedGroupsPage":                       1011,
		"GetSpecifiedGroupsInfo":                    1012,
		"SearchGroups":                              1013,
		"GetGroupMemberOwnerAndAdmin":               1014,
		"GetGroupMembersByJoinTimeFilter":           1015,
		"GetSpecifiedGroupMembersInfo":              1016,
		"GetGroupMembers":                           1017,
		"GetGroupRequest":                           1018,
		"SearchGroupMembers":                        1019,
		"IsJoinGroup":                               1020,
		"GetUsersInGroup":                           1021,
		"InviteUserToGroup":                         1022,
		"HandlerGroupRequest":                       1023,
		"GetSpecifiedFriends":                       1100,
		"AddFriend":                                 1101,
		"GetFriendRequests":                         1102,
		"HandlerFriendRequest":                      1103,
		"CheckFriend":                               1104,
		"DeleteFriend":                              1105,
		"GetFriends":                                1106,
		"GetFriendsPage":                            1107,
		"SearchFriends":                             1108,
		"AddBlack":                                  1109,
		"DeleteBlack":                               1110,
		"GetBlacks":                                 1111,
		"UpdateFriends":                             1112,
		"GetConversationListSplit":                  2000,
		"HideConversation":                          2001,
		"GetAtAllTag":                               2002,
		"GetOneConversation":                        2003,
		"GetMultipleConversation":                   2004,
		"HideAllConversations":                      2005,
		"SetConversationDraft":                      2006,
		"SetConversation":                           2007,
		"GetTotalUnreadMsgCount":                    2008,
		"GetConversationIDBySessionType":            2009,
		"FindMessageList":                           2010,
		"GetAdvancedHistoryMessageList":             2011,
		"GetAdvancedHistoryMessageListReverse":      2012,
		"RevokeMessage":                             2013,
		"TypingStatusUpdate":                        2014,
		"MarkConversationMessageAsRead":             2015,
		"MarkAllConversationMessageAsRead":          2016,
		"DeleteMessageFromLocalStorage":             2017,
		"DeleteMessage":                             2018,
		"DeleteAllMsgFromLocalAndServer":            2019,
		"DeleteAllMessageFromLocalStorage":          2020,
		"ClearConversationAndDeleteAllMsg":          2021,
		"DeleteConversationAndDeleteAllMsg":         2022,
		"InsertSingleMessageToLocalStorage":         2023,
		"InsertGroupMessageToLocalStorage":          2024,
		"SearchLocalMessages":                       2025,
		"SetMessageLocalEx":                         2026,
		"SearchConversation":                        2027,
		"SubscribeUsersOnlineStatus":                2227,
		"UnsubscribeUsersOnlineStatus":              2228,
		"CreateTextMessage":                         2028,
		"CreateAdvancedTextMessage":                 2029,
		"CreateTextAtMessage":                       2030,
		"CreateLocationMessage":                     2031,
		"CreateCustomMessage":                       2032,
		"CreateQuoteMessage":                        2033,
		"CreateAdvancedQuoteMessage":                2034,
		"CreateCardMessage":                         2035,
		"CreateImageMessage":                        2036,
		"CreateSoundMessage":                        2037,
		"CreateVideoMessage":                        2038,
		"CreateFileMessage":                         2039,
		"CreateMergerMessage":                       2040,
		"CreateFaceMessage":                         2041,
		"CreateForwardMessage":                      2042,
		"ProcessUserCommandGetAll":                  2100,
		"GetSelfUserInfo":                           2101,
		"SetSelfInfo":                               2102,
		"ProcessUserCommandAdd":                     2103,
		"ProcessUserCommandDelete":                  2104,
		"ProcessUserCommandUpdate":                  2105,
		"GetUsersInfo":                              2106,
		"JsFileOpen":                                2110,
		"JsFileRead":                                2111,
		"JsFileClose":                               2112,
		"JsSqliteOpen":                              2113,
		"JsSqliteExec":                              2114,
		"JsSqliteQuery":                             2115,
		"JsSqliteClose":                             2116,
	}
)

func (x FuncRequestEventName) Enum() *FuncRequestEventName {
	p := new(FuncRequestEventName)
	*p = x
	return p
}

func (x FuncRequestEventName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FuncRequestEventName) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (FuncRequestEventName) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x FuncRequestEventName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FuncRequestEventName.Descriptor instead.
func (FuncRequestEventName) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

type EventOnSendMsgProgressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress"`
}

func (x *EventOnSendMsgProgressData) Reset() {
	*x = EventOnSendMsgProgressData{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSendMsgProgressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSendMsgProgressData) ProtoMessage() {}

func (x *EventOnSendMsgProgressData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSendMsgProgressData.ProtoReflect.Descriptor instead.
func (*EventOnSendMsgProgressData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventOnSendMsgProgressData) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type EventOnUploadFileProgressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress"`
}

func (x *EventOnUploadFileProgressData) Reset() {
	*x = EventOnUploadFileProgressData{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUploadFileProgressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUploadFileProgressData) ProtoMessage() {}

func (x *EventOnUploadFileProgressData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUploadFileProgressData.ProtoReflect.Descriptor instead.
func (*EventOnUploadFileProgressData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventOnUploadFileProgressData) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type EventOnUploadLogsProgressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress"`
}

func (x *EventOnUploadLogsProgressData) Reset() {
	*x = EventOnUploadLogsProgressData{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUploadLogsProgressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUploadLogsProgressData) ProtoMessage() {}

func (x *EventOnUploadLogsProgressData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUploadLogsProgressData.ProtoReflect.Descriptor instead.
func (*EventOnUploadLogsProgressData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *EventOnUploadLogsProgressData) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type EventOnConnectingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventOnConnectingData) Reset() {
	*x = EventOnConnectingData{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnConnectingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnConnectingData) ProtoMessage() {}

func (x *EventOnConnectingData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnConnectingData.ProtoReflect.Descriptor instead.
func (*EventOnConnectingData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

type EventOnConnectSuccessData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventOnConnectSuccessData) Reset() {
	*x = EventOnConnectSuccessData{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnConnectSuccessData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnConnectSuccessData) ProtoMessage() {}

func (x *EventOnConnectSuccessData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnConnectSuccessData.ProtoReflect.Descriptor instead.
func (*EventOnConnectSuccessData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

type EventOnConnectFailedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
}

func (x *EventOnConnectFailedData) Reset() {
	*x = EventOnConnectFailedData{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnConnectFailedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnConnectFailedData) ProtoMessage() {}

func (x *EventOnConnectFailedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnConnectFailedData.ProtoReflect.Descriptor instead.
func (*EventOnConnectFailedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *EventOnConnectFailedData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *EventOnConnectFailedData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type EventOnKickedOfflineData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventOnKickedOfflineData) Reset() {
	*x = EventOnKickedOfflineData{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnKickedOfflineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnKickedOfflineData) ProtoMessage() {}

func (x *EventOnKickedOfflineData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnKickedOfflineData.ProtoReflect.Descriptor instead.
func (*EventOnKickedOfflineData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

type EventOnUserTokenExpiredData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EventOnUserTokenExpiredData) Reset() {
	*x = EventOnUserTokenExpiredData{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserTokenExpiredData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserTokenExpiredData) ProtoMessage() {}

func (x *EventOnUserTokenExpiredData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserTokenExpiredData.ProtoReflect.Descriptor instead.
func (*EventOnUserTokenExpiredData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

type EventOnUserTokenInvalidData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrMsg string `protobuf:"bytes,1,opt,name=errMsg,proto3" json:"errMsg"`
}

func (x *EventOnUserTokenInvalidData) Reset() {
	*x = EventOnUserTokenInvalidData{}
	mi := &file_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserTokenInvalidData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserTokenInvalidData) ProtoMessage() {}

func (x *EventOnUserTokenInvalidData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserTokenInvalidData.ProtoReflect.Descriptor instead.
func (*EventOnUserTokenInvalidData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

func (x *EventOnUserTokenInvalidData) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type EventOnSyncServerStartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reinstalled bool `protobuf:"varint,1,opt,name=reinstalled,proto3" json:"reinstalled"`
}

func (x *EventOnSyncServerStartData) Reset() {
	*x = EventOnSyncServerStartData{}
	mi := &file_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSyncServerStartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSyncServerStartData) ProtoMessage() {}

func (x *EventOnSyncServerStartData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSyncServerStartData.ProtoReflect.Descriptor instead.
func (*EventOnSyncServerStartData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

func (x *EventOnSyncServerStartData) GetReinstalled() bool {
	if x != nil {
		return x.Reinstalled
	}
	return false
}

type EventOnSyncServerFinishData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reinstalled bool `protobuf:"varint,1,opt,name=reinstalled,proto3" json:"reinstalled"`
}

func (x *EventOnSyncServerFinishData) Reset() {
	*x = EventOnSyncServerFinishData{}
	mi := &file_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSyncServerFinishData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSyncServerFinishData) ProtoMessage() {}

func (x *EventOnSyncServerFinishData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSyncServerFinishData.ProtoReflect.Descriptor instead.
func (*EventOnSyncServerFinishData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{10}
}

func (x *EventOnSyncServerFinishData) GetReinstalled() bool {
	if x != nil {
		return x.Reinstalled
	}
	return false
}

type EventOnSyncServerFailedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reinstalled bool `protobuf:"varint,1,opt,name=reinstalled,proto3" json:"reinstalled"`
}

func (x *EventOnSyncServerFailedData) Reset() {
	*x = EventOnSyncServerFailedData{}
	mi := &file_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSyncServerFailedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSyncServerFailedData) ProtoMessage() {}

func (x *EventOnSyncServerFailedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSyncServerFailedData.ProtoReflect.Descriptor instead.
func (*EventOnSyncServerFailedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{11}
}

func (x *EventOnSyncServerFailedData) GetReinstalled() bool {
	if x != nil {
		return x.Reinstalled
	}
	return false
}

type EventOnSyncServerProgressData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress"`
}

func (x *EventOnSyncServerProgressData) Reset() {
	*x = EventOnSyncServerProgressData{}
	mi := &file_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSyncServerProgressData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSyncServerProgressData) ProtoMessage() {}

func (x *EventOnSyncServerProgressData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSyncServerProgressData.ProtoReflect.Descriptor instead.
func (*EventOnSyncServerProgressData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{12}
}

func (x *EventOnSyncServerProgressData) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type EventOnNewConversationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList"`
}

func (x *EventOnNewConversationData) Reset() {
	*x = EventOnNewConversationData{}
	mi := &file_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnNewConversationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnNewConversationData) ProtoMessage() {}

func (x *EventOnNewConversationData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnNewConversationData.ProtoReflect.Descriptor instead.
func (*EventOnNewConversationData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{13}
}

func (x *EventOnNewConversationData) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type EventOnConversationChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationList []*shared.IMConversation `protobuf:"bytes,1,rep,name=conversationList,proto3" json:"conversationList"`
}

func (x *EventOnConversationChangedData) Reset() {
	*x = EventOnConversationChangedData{}
	mi := &file_event_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnConversationChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnConversationChangedData) ProtoMessage() {}

func (x *EventOnConversationChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnConversationChangedData.ProtoReflect.Descriptor instead.
func (*EventOnConversationChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{14}
}

func (x *EventOnConversationChangedData) GetConversationList() []*shared.IMConversation {
	if x != nil {
		return x.ConversationList
	}
	return nil
}

type EventOnTotalUnreadMessageCountChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUnreadCount int32 `protobuf:"varint,1,opt,name=totalUnreadCount,proto3" json:"totalUnreadCount"`
}

func (x *EventOnTotalUnreadMessageCountChangedData) Reset() {
	*x = EventOnTotalUnreadMessageCountChangedData{}
	mi := &file_event_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnTotalUnreadMessageCountChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnTotalUnreadMessageCountChangedData) ProtoMessage() {}

func (x *EventOnTotalUnreadMessageCountChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnTotalUnreadMessageCountChangedData.ProtoReflect.Descriptor instead.
func (*EventOnTotalUnreadMessageCountChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{15}
}

func (x *EventOnTotalUnreadMessageCountChangedData) GetTotalUnreadCount() int32 {
	if x != nil {
		return x.TotalUnreadCount
	}
	return 0
}

type EventOnConversationUserInputStatusChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string  `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	UserID         string  `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	PlatformIDs    []int32 `protobuf:"varint,3,rep,packed,name=platformIDs,proto3" json:"platformIDs"`
}

func (x *EventOnConversationUserInputStatusChangedData) Reset() {
	*x = EventOnConversationUserInputStatusChangedData{}
	mi := &file_event_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnConversationUserInputStatusChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnConversationUserInputStatusChangedData) ProtoMessage() {}

func (x *EventOnConversationUserInputStatusChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnConversationUserInputStatusChangedData.ProtoReflect.Descriptor instead.
func (*EventOnConversationUserInputStatusChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{16}
}

func (x *EventOnConversationUserInputStatusChangedData) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *EventOnConversationUserInputStatusChangedData) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EventOnConversationUserInputStatusChangedData) GetPlatformIDs() []int32 {
	if x != nil {
		return x.PlatformIDs
	}
	return nil
}

type EventOnRecvNewMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *shared.IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *EventOnRecvNewMessageData) Reset() {
	*x = EventOnRecvNewMessageData{}
	mi := &file_event_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnRecvNewMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnRecvNewMessageData) ProtoMessage() {}

func (x *EventOnRecvNewMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnRecvNewMessageData.ProtoReflect.Descriptor instead.
func (*EventOnRecvNewMessageData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{17}
}

func (x *EventOnRecvNewMessageData) GetMessage() *shared.IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID"`
	MsgIDList   []string `protobuf:"bytes,3,rep,name=msgIDList,proto3" json:"msgIDList"`
	ReadTime    int64    `protobuf:"varint,4,opt,name=readTime,proto3" json:"readTime"`
	MsgFrom     int32    `protobuf:"varint,5,opt,name=msgFrom,proto3" json:"msgFrom"`
	ContentType int32    `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType"`
	SessionType int32    `protobuf:"varint,7,opt,name=sessionType,proto3" json:"sessionType"`
}

func (x *MessageReceipt) Reset() {
	*x = MessageReceipt{}
	mi := &file_event_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceipt) ProtoMessage() {}

func (x *MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceipt.ProtoReflect.Descriptor instead.
func (*MessageReceipt) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{18}
}

func (x *MessageReceipt) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MessageReceipt) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MessageReceipt) GetMsgIDList() []string {
	if x != nil {
		return x.MsgIDList
	}
	return nil
}

func (x *MessageReceipt) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *MessageReceipt) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MessageReceipt) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageReceipt) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type EventOnRecvC2CReadReceiptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgReceiptList []*MessageReceipt `protobuf:"bytes,1,rep,name=msgReceiptList,proto3" json:"msgReceiptList"`
}

func (x *EventOnRecvC2CReadReceiptData) Reset() {
	*x = EventOnRecvC2CReadReceiptData{}
	mi := &file_event_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnRecvC2CReadReceiptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnRecvC2CReadReceiptData) ProtoMessage() {}

func (x *EventOnRecvC2CReadReceiptData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnRecvC2CReadReceiptData.ProtoReflect.Descriptor instead.
func (*EventOnRecvC2CReadReceiptData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{19}
}

func (x *EventOnRecvC2CReadReceiptData) GetMsgReceiptList() []*MessageReceipt {
	if x != nil {
		return x.MsgReceiptList
	}
	return nil
}

type EventOnNewRecvMessageRevokedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revoked *shared.RevokedTips `protobuf:"bytes,1,opt,name=revoked,proto3" json:"revoked"`
}

func (x *EventOnNewRecvMessageRevokedData) Reset() {
	*x = EventOnNewRecvMessageRevokedData{}
	mi := &file_event_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnNewRecvMessageRevokedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnNewRecvMessageRevokedData) ProtoMessage() {}

func (x *EventOnNewRecvMessageRevokedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnNewRecvMessageRevokedData.ProtoReflect.Descriptor instead.
func (*EventOnNewRecvMessageRevokedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{20}
}

func (x *EventOnNewRecvMessageRevokedData) GetRevoked() *shared.RevokedTips {
	if x != nil {
		return x.Revoked
	}
	return nil
}

type EventOnRecvOfflineNewMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *shared.IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *EventOnRecvOfflineNewMessageData) Reset() {
	*x = EventOnRecvOfflineNewMessageData{}
	mi := &file_event_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnRecvOfflineNewMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnRecvOfflineNewMessageData) ProtoMessage() {}

func (x *EventOnRecvOfflineNewMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnRecvOfflineNewMessageData.ProtoReflect.Descriptor instead.
func (*EventOnRecvOfflineNewMessageData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{21}
}

func (x *EventOnRecvOfflineNewMessageData) GetMessage() *shared.IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventOnMessageDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *shared.IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *EventOnMessageDeletedData) Reset() {
	*x = EventOnMessageDeletedData{}
	mi := &file_event_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnMessageDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnMessageDeletedData) ProtoMessage() {}

func (x *EventOnMessageDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnMessageDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnMessageDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{22}
}

func (x *EventOnMessageDeletedData) GetMessage() *shared.IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventOnRecvOnlineOnlyMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *shared.IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *EventOnRecvOnlineOnlyMessageData) Reset() {
	*x = EventOnRecvOnlineOnlyMessageData{}
	mi := &file_event_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnRecvOnlineOnlyMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnRecvOnlineOnlyMessageData) ProtoMessage() {}

func (x *EventOnRecvOnlineOnlyMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnRecvOnlineOnlyMessageData.ProtoReflect.Descriptor instead.
func (*EventOnRecvOnlineOnlyMessageData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{23}
}

func (x *EventOnRecvOnlineOnlyMessageData) GetMessage() *shared.IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type EventOnMessageEditedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *shared.IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message"`
}

func (x *EventOnMessageEditedData) Reset() {
	*x = EventOnMessageEditedData{}
	mi := &file_event_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnMessageEditedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnMessageEditedData) ProtoMessage() {}

func (x *EventOnMessageEditedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnMessageEditedData.ProtoReflect.Descriptor instead.
func (*EventOnMessageEditedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{24}
}

func (x *EventOnMessageEditedData) GetMessage() *shared.IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// FriendCallback Data Types
type EventOnFriendApplicationAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMFriendApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnFriendApplicationAddedData) Reset() {
	*x = EventOnFriendApplicationAddedData{}
	mi := &file_event_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendApplicationAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendApplicationAddedData) ProtoMessage() {}

func (x *EventOnFriendApplicationAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendApplicationAddedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendApplicationAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{25}
}

func (x *EventOnFriendApplicationAddedData) GetRequest() *shared.IMFriendApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnFriendApplicationDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMFriendApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnFriendApplicationDeletedData) Reset() {
	*x = EventOnFriendApplicationDeletedData{}
	mi := &file_event_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendApplicationDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendApplicationDeletedData) ProtoMessage() {}

func (x *EventOnFriendApplicationDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendApplicationDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendApplicationDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{26}
}

func (x *EventOnFriendApplicationDeletedData) GetRequest() *shared.IMFriendApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnFriendApplicationAcceptedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMFriendApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnFriendApplicationAcceptedData) Reset() {
	*x = EventOnFriendApplicationAcceptedData{}
	mi := &file_event_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendApplicationAcceptedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendApplicationAcceptedData) ProtoMessage() {}

func (x *EventOnFriendApplicationAcceptedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendApplicationAcceptedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendApplicationAcceptedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{27}
}

func (x *EventOnFriendApplicationAcceptedData) GetRequest() *shared.IMFriendApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnFriendApplicationRejectedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMFriendApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnFriendApplicationRejectedData) Reset() {
	*x = EventOnFriendApplicationRejectedData{}
	mi := &file_event_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendApplicationRejectedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendApplicationRejectedData) ProtoMessage() {}

func (x *EventOnFriendApplicationRejectedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendApplicationRejectedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendApplicationRejectedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{28}
}

func (x *EventOnFriendApplicationRejectedData) GetRequest() *shared.IMFriendApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnFriendAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend *shared.IMFriend `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend"`
}

func (x *EventOnFriendAddedData) Reset() {
	*x = EventOnFriendAddedData{}
	mi := &file_event_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendAddedData) ProtoMessage() {}

func (x *EventOnFriendAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendAddedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{29}
}

func (x *EventOnFriendAddedData) GetFriend() *shared.IMFriend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type EventOnFriendDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend *shared.IMFriend `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend"`
}

func (x *EventOnFriendDeletedData) Reset() {
	*x = EventOnFriendDeletedData{}
	mi := &file_event_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendDeletedData) ProtoMessage() {}

func (x *EventOnFriendDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{30}
}

func (x *EventOnFriendDeletedData) GetFriend() *shared.IMFriend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type EventOnFriendInfoChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend *shared.IMFriend `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend"`
}

func (x *EventOnFriendInfoChangedData) Reset() {
	*x = EventOnFriendInfoChangedData{}
	mi := &file_event_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnFriendInfoChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnFriendInfoChangedData) ProtoMessage() {}

func (x *EventOnFriendInfoChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnFriendInfoChangedData.ProtoReflect.Descriptor instead.
func (*EventOnFriendInfoChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{31}
}

func (x *EventOnFriendInfoChangedData) GetFriend() *shared.IMFriend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type EventOnBlackAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Black *shared.IMBlack `protobuf:"bytes,1,opt,name=black,proto3" json:"black"`
}

func (x *EventOnBlackAddedData) Reset() {
	*x = EventOnBlackAddedData{}
	mi := &file_event_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnBlackAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnBlackAddedData) ProtoMessage() {}

func (x *EventOnBlackAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnBlackAddedData.ProtoReflect.Descriptor instead.
func (*EventOnBlackAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{32}
}

func (x *EventOnBlackAddedData) GetBlack() *shared.IMBlack {
	if x != nil {
		return x.Black
	}
	return nil
}

type EventOnBlackDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Black *shared.IMBlack `protobuf:"bytes,1,opt,name=black,proto3" json:"black"`
}

func (x *EventOnBlackDeletedData) Reset() {
	*x = EventOnBlackDeletedData{}
	mi := &file_event_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnBlackDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnBlackDeletedData) ProtoMessage() {}

func (x *EventOnBlackDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnBlackDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnBlackDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{33}
}

func (x *EventOnBlackDeletedData) GetBlack() *shared.IMBlack {
	if x != nil {
		return x.Black
	}
	return nil
}

// GroupCallback Data Types
type EventOnJoinedGroupAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *shared.IMGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
}

func (x *EventOnJoinedGroupAddedData) Reset() {
	*x = EventOnJoinedGroupAddedData{}
	mi := &file_event_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnJoinedGroupAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnJoinedGroupAddedData) ProtoMessage() {}

func (x *EventOnJoinedGroupAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnJoinedGroupAddedData.ProtoReflect.Descriptor instead.
func (*EventOnJoinedGroupAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{34}
}

func (x *EventOnJoinedGroupAddedData) GetGroup() *shared.IMGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

type EventOnJoinedGroupDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *shared.IMGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
}

func (x *EventOnJoinedGroupDeletedData) Reset() {
	*x = EventOnJoinedGroupDeletedData{}
	mi := &file_event_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnJoinedGroupDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnJoinedGroupDeletedData) ProtoMessage() {}

func (x *EventOnJoinedGroupDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnJoinedGroupDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnJoinedGroupDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{35}
}

func (x *EventOnJoinedGroupDeletedData) GetGroup() *shared.IMGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

type EventOnGroupMemberAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *shared.IMGroupMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member"`
}

func (x *EventOnGroupMemberAddedData) Reset() {
	*x = EventOnGroupMemberAddedData{}
	mi := &file_event_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupMemberAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupMemberAddedData) ProtoMessage() {}

func (x *EventOnGroupMemberAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupMemberAddedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupMemberAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{36}
}

func (x *EventOnGroupMemberAddedData) GetMember() *shared.IMGroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type EventOnGroupMemberDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *shared.IMGroupMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member"`
}

func (x *EventOnGroupMemberDeletedData) Reset() {
	*x = EventOnGroupMemberDeletedData{}
	mi := &file_event_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupMemberDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupMemberDeletedData) ProtoMessage() {}

func (x *EventOnGroupMemberDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupMemberDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupMemberDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{37}
}

func (x *EventOnGroupMemberDeletedData) GetMember() *shared.IMGroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type EventOnGroupApplicationAddedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMGroupApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnGroupApplicationAddedData) Reset() {
	*x = EventOnGroupApplicationAddedData{}
	mi := &file_event_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupApplicationAddedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupApplicationAddedData) ProtoMessage() {}

func (x *EventOnGroupApplicationAddedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupApplicationAddedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupApplicationAddedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{38}
}

func (x *EventOnGroupApplicationAddedData) GetRequest() *shared.IMGroupApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnGroupApplicationDeletedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMGroupApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnGroupApplicationDeletedData) Reset() {
	*x = EventOnGroupApplicationDeletedData{}
	mi := &file_event_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupApplicationDeletedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupApplicationDeletedData) ProtoMessage() {}

func (x *EventOnGroupApplicationDeletedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupApplicationDeletedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupApplicationDeletedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{39}
}

func (x *EventOnGroupApplicationDeletedData) GetRequest() *shared.IMGroupApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnGroupInfoChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *shared.IMGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
}

func (x *EventOnGroupInfoChangedData) Reset() {
	*x = EventOnGroupInfoChangedData{}
	mi := &file_event_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupInfoChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupInfoChangedData) ProtoMessage() {}

func (x *EventOnGroupInfoChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupInfoChangedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupInfoChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{40}
}

func (x *EventOnGroupInfoChangedData) GetGroup() *shared.IMGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

type EventOnGroupDismissedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *shared.IMGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
}

func (x *EventOnGroupDismissedData) Reset() {
	*x = EventOnGroupDismissedData{}
	mi := &file_event_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupDismissedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupDismissedData) ProtoMessage() {}

func (x *EventOnGroupDismissedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupDismissedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupDismissedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{41}
}

func (x *EventOnGroupDismissedData) GetGroup() *shared.IMGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

type EventOnGroupMemberInfoChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *shared.IMGroupMember `protobuf:"bytes,1,opt,name=member,proto3" json:"member"`
}

func (x *EventOnGroupMemberInfoChangedData) Reset() {
	*x = EventOnGroupMemberInfoChangedData{}
	mi := &file_event_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupMemberInfoChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupMemberInfoChangedData) ProtoMessage() {}

func (x *EventOnGroupMemberInfoChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupMemberInfoChangedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupMemberInfoChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{42}
}

func (x *EventOnGroupMemberInfoChangedData) GetMember() *shared.IMGroupMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type EventOnGroupApplicationAcceptedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMGroupApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnGroupApplicationAcceptedData) Reset() {
	*x = EventOnGroupApplicationAcceptedData{}
	mi := &file_event_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupApplicationAcceptedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupApplicationAcceptedData) ProtoMessage() {}

func (x *EventOnGroupApplicationAcceptedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupApplicationAcceptedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupApplicationAcceptedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{43}
}

func (x *EventOnGroupApplicationAcceptedData) GetRequest() *shared.IMGroupApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

type EventOnGroupApplicationRejectedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *shared.IMGroupApplication `protobuf:"bytes,1,opt,name=request,proto3" json:"request"`
}

func (x *EventOnGroupApplicationRejectedData) Reset() {
	*x = EventOnGroupApplicationRejectedData{}
	mi := &file_event_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnGroupApplicationRejectedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnGroupApplicationRejectedData) ProtoMessage() {}

func (x *EventOnGroupApplicationRejectedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnGroupApplicationRejectedData.ProtoReflect.Descriptor instead.
func (*EventOnGroupApplicationRejectedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{44}
}

func (x *EventOnGroupApplicationRejectedData) GetRequest() *shared.IMGroupApplication {
	if x != nil {
		return x.Request
	}
	return nil
}

// CustomBusinessCallback Data Type
type EventOnRecvCustomBusinessMessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessMessage string `protobuf:"bytes,1,opt,name=businessMessage,proto3" json:"businessMessage"`
}

func (x *EventOnRecvCustomBusinessMessageData) Reset() {
	*x = EventOnRecvCustomBusinessMessageData{}
	mi := &file_event_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnRecvCustomBusinessMessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnRecvCustomBusinessMessageData) ProtoMessage() {}

func (x *EventOnRecvCustomBusinessMessageData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnRecvCustomBusinessMessageData.ProtoReflect.Descriptor instead.
func (*EventOnRecvCustomBusinessMessageData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{45}
}

func (x *EventOnRecvCustomBusinessMessageData) GetBusinessMessage() string {
	if x != nil {
		return x.BusinessMessage
	}
	return ""
}

// UserCallback Data Types
type EventOnSelfInfoUpdatedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *shared.IMUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
}

func (x *EventOnSelfInfoUpdatedData) Reset() {
	*x = EventOnSelfInfoUpdatedData{}
	mi := &file_event_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnSelfInfoUpdatedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnSelfInfoUpdatedData) ProtoMessage() {}

func (x *EventOnSelfInfoUpdatedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnSelfInfoUpdatedData.ProtoReflect.Descriptor instead.
func (*EventOnSelfInfoUpdatedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{46}
}

func (x *EventOnSelfInfoUpdatedData) GetUser() *shared.IMUser {
	if x != nil {
		return x.User
	}
	return nil
}

type EventOnUserStatusChangedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID"`
	PlatformIDs []int32 `protobuf:"varint,2,rep,packed,name=platformIDs,proto3" json:"platformIDs"`
}

func (x *EventOnUserStatusChangedData) Reset() {
	*x = EventOnUserStatusChangedData{}
	mi := &file_event_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserStatusChangedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserStatusChangedData) ProtoMessage() {}

func (x *EventOnUserStatusChangedData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserStatusChangedData.ProtoReflect.Descriptor instead.
func (*EventOnUserStatusChangedData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{47}
}

func (x *EventOnUserStatusChangedData) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *EventOnUserStatusChangedData) GetPlatformIDs() []int32 {
	if x != nil {
		return x.PlatformIDs
	}
	return nil
}

type EventOnUserCommandAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *shared.CommandInfo `protobuf:"bytes,1,opt,name=command,proto3" json:"command"`
}

func (x *EventOnUserCommandAddData) Reset() {
	*x = EventOnUserCommandAddData{}
	mi := &file_event_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserCommandAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserCommandAddData) ProtoMessage() {}

func (x *EventOnUserCommandAddData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserCommandAddData.ProtoReflect.Descriptor instead.
func (*EventOnUserCommandAddData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{48}
}

func (x *EventOnUserCommandAddData) GetCommand() *shared.CommandInfo {
	if x != nil {
		return x.Command
	}
	return nil
}

type EventOnUserCommandDeleteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *shared.CommandInfo `protobuf:"bytes,1,opt,name=command,proto3" json:"command"`
}

func (x *EventOnUserCommandDeleteData) Reset() {
	*x = EventOnUserCommandDeleteData{}
	mi := &file_event_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserCommandDeleteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserCommandDeleteData) ProtoMessage() {}

func (x *EventOnUserCommandDeleteData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserCommandDeleteData.ProtoReflect.Descriptor instead.
func (*EventOnUserCommandDeleteData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{49}
}

func (x *EventOnUserCommandDeleteData) GetCommand() *shared.CommandInfo {
	if x != nil {
		return x.Command
	}
	return nil
}

type EventOnUserCommandUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *shared.CommandInfo `protobuf:"bytes,1,opt,name=command,proto3" json:"command"`
}

func (x *EventOnUserCommandUpdateData) Reset() {
	*x = EventOnUserCommandUpdateData{}
	mi := &file_event_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOnUserCommandUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOnUserCommandUpdateData) ProtoMessage() {}

func (x *EventOnUserCommandUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOnUserCommandUpdateData.ProtoReflect.Descriptor instead.
func (*EventOnUserCommandUpdateData) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{50}
}

func (x *EventOnUserCommandUpdateData) GetCommand() *shared.CommandInfo {
	if x != nil {
		return x.Command
	}
	return nil
}

var File_event_proto protoreflect.FileDescriptor

var file_event_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x1a, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x3b, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x6f, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x17, 0x0a,
	0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4b, 0x69, 0x63, 0x6b,
	0x65, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a,
	0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x35, 0x0a, 0x1b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x3e, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x79,
	0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x22, 0x3f, 0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x22, 0x3b, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x6b, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4e, 0x65, 0x77,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49,
	0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x6f, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x49, 0x4d, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x57, 0x0a, 0x29, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a,
	0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x2d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x73, 0x22, 0x53, 0x0a,
	0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x65, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x43, 0x32,
	0x43, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x44, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x52, 0x07, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x22, 0x5a, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x52,
	0x65, 0x63, 0x76, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x53, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x52, 0x65, 0x63, 0x76, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x52, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x21, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x49, 0x4d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x23,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x24, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x49, 0x4d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x68, 0x0a, 0x24, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x16, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x4f, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0x49,
	0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x22, 0x4b, 0x0a, 0x17, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x22, 0x4f, 0x0a, 0x1b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x51, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x57, 0x0a, 0x1b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x63,
	0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x22, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49,
	0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x1b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4d, 0x0a, 0x19, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x5d, 0x0a, 0x21, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x23, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x66, 0x0a, 0x23, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x24, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1a, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x49, 0x4d, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x44, 0x73, 0x22, 0x55, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x58, 0x0a, 0x1c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x22, 0x58, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2a, 0xe4, 0x21,
	0x0a, 0x14, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e,
	0x69, 0x74, 0x53, 0x44, 0x4b, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x10, 0x6a, 0x12, 0x1a,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x6b, 0x12, 0x18, 0x0a, 0x14, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x10, 0x6c, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x10, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x10, 0x09, 0x12,
	0x12, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x63, 0x6d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x0c,
	0x12, 0x1d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x0d, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x0e, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6e, 0x67, 0x10, 0x0f, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x10,
	0x12, 0x18, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10,
	0x13, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x14, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x15, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x10, 0x16, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0x17, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x10, 0x18, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x19, 0x12,
	0x1e, 0x0a, 0x1a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x1a, 0x12,
	0x29, 0x0a, 0x25, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x1b, 0x12, 0x2d, 0x0a, 0x29, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x1c, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x63, 0x76, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x1d, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x52,
	0x65, 0x63, 0x76, 0x43, 0x32, 0x43, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x10, 0x1e, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x63, 0x76, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x64, 0x10, 0x1f, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x52, 0x65, 0x63, 0x76, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x20, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x21, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x52, 0x65, 0x63,
	0x76, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0x22, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x64, 0x69, 0x74, 0x65, 0x64, 0x10, 0x23, 0x12, 0x21,
	0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10,
	0x24, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x10, 0x25, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f,
	0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x26, 0x12, 0x24, 0x0a, 0x20,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x10, 0x27, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x10, 0x29, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x10, 0x2a, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x2b, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4f, 0x6e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x10, 0x2c, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x2d, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x2e, 0x12, 0x1b,
	0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x2f, 0x12, 0x1d, 0x0a, 0x19, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x30, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x31, 0x12, 0x22, 0x0a, 0x1e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x32,
	0x12, 0x1b, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x33, 0x12, 0x19, 0x0a,
	0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x10, 0x34, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x10, 0x35, 0x12, 0x23, 0x0a, 0x1f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x36,
	0x12, 0x23, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x10, 0x37, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x52, 0x65, 0x63, 0x76, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x38, 0x12, 0x1a, 0x0a, 0x16, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x10, 0x39, 0x12, 0x1c, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x10, 0x3a, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x10, 0x3b,
	0x12, 0x1c, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x3c, 0x12, 0x1c,
	0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0x3d, 0x12, 0x10, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xe8, 0x07, 0x12, 0x0e,
	0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xe9, 0x07, 0x12, 0x0e,
	0x0a, 0x09, 0x51, 0x75, 0x69, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xea, 0x07, 0x12, 0x11,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xeb,
	0x07, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x75, 0x74, 0x65, 0x10, 0xec, 0x07, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65,
	0x10, 0xed, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x10, 0xee, 0x07, 0x12, 0x14, 0x0a, 0x0f,
	0x4b, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10,
	0xef, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0xf0, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xf1, 0x07, 0x12, 0x14,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x10, 0xf2, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x50, 0x61, 0x67, 0x65, 0x10, 0xf3, 0x07, 0x12, 0x1b,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xf4, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x10, 0xf5, 0x07, 0x12, 0x20,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0xf6, 0x07,
	0x12, 0x24, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x42, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x10, 0xf7, 0x07, 0x12, 0x21, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0xf8, 0x07, 0x12, 0x14, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0xf9, 0x07, 0x12,
	0x14, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0xfa, 0x07, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x10, 0xfb, 0x07, 0x12, 0x10,
	0x0a, 0x0b, 0x49, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xfc, 0x07,
	0x12, 0x14, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x10, 0xfd, 0x07, 0x12, 0x16, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xfe, 0x07, 0x12, 0x18,
	0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0xff, 0x07, 0x12, 0x18, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10,
	0xcc, 0x08, 0x12, 0x0e, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10,
	0xcd, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x10, 0xce, 0x08, 0x12, 0x19, 0x0a, 0x14, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0xcf, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x10, 0xd0, 0x08, 0x12, 0x11, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0xd1, 0x08, 0x12, 0x0f, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0xd2, 0x08, 0x12, 0x13, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x50, 0x61, 0x67, 0x65, 0x10, 0xd3, 0x08,
	0x12, 0x12, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x10, 0xd4, 0x08, 0x12, 0x0d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b,
	0x10, 0xd5, 0x08, 0x12, 0x10, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x10, 0xd6, 0x08, 0x12, 0x0e, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x73, 0x10, 0xd7, 0x08, 0x12, 0x12, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x10, 0xd8, 0x08, 0x12, 0x1d, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x10, 0xd0, 0x0f, 0x12, 0x15, 0x0a, 0x10, 0x48, 0x69, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd1, 0x0f, 0x12,
	0x10, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x10, 0xd2,
	0x0f, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd3, 0x0f, 0x12, 0x1c, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd4, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x48, 0x69, 0x64, 0x65,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x10, 0xd5, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x72, 0x61, 0x66, 0x74, 0x10, 0xd6, 0x0f, 0x12, 0x14,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0xd7, 0x0f, 0x12, 0x1b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0xd8,
	0x0f, 0x12, 0x23, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x42, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x10, 0xd9, 0x0f, 0x12, 0x14, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xda, 0x0f, 0x12, 0x22, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xdb, 0x0f,
	0x12, 0x29, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x10, 0xdc, 0x0f, 0x12, 0x12, 0x0a, 0x0d, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xdd, 0x0f, 0x12,
	0x17, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xde, 0x0f, 0x12, 0x22, 0x0a, 0x1d, 0x4d, 0x61, 0x72, 0x6b,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x10, 0xdf, 0x0f, 0x12, 0x25, 0x0a, 0x20,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x10, 0xe0, 0x0f, 0x12, 0x22, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x10, 0xe1, 0x0f, 0x12, 0x12, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xe2, 0x0f, 0x12, 0x23, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0xe3, 0x0f,
	0x12, 0x25, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x10, 0xe4, 0x0f, 0x12, 0x25, 0x0a, 0x20, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x10, 0xe5, 0x0f, 0x12, 0x26,
	0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x4d, 0x73, 0x67, 0x10, 0xe6, 0x0f, 0x12, 0x26, 0x0a, 0x21, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x10, 0xe7, 0x0f, 0x12, 0x25,
	0x0a, 0x20, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x10, 0xe8, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x10, 0xe9, 0x0f, 0x12,
	0x16, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x45, 0x78, 0x10, 0xea, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xeb, 0x0f,
	0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xb3,
	0x11, 0x12, 0x21, 0x0a, 0x1c, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0xb4, 0x11, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xec, 0x0f, 0x12, 0x1e, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xed, 0x0f, 0x12, 0x18, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x41, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0xee, 0x0f, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10,
	0xef, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf0, 0x0f, 0x12, 0x17, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x10, 0xf1, 0x0f, 0x12, 0x1f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x10, 0xf2, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf3, 0x0f, 0x12, 0x17,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x10, 0xf4, 0x0f, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf5, 0x0f,
	0x12, 0x17, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf6, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf7,
	0x0f, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xf8, 0x0f, 0x12, 0x16, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x10, 0xf9, 0x0f, 0x12, 0x19, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0xfa, 0x0f, 0x12, 0x1d,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x10, 0xb4, 0x10, 0x12, 0x14, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x10, 0xb5, 0x10, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x49, 0x6e,
	0x66, 0x6f, 0x10, 0xb6, 0x10, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x10, 0xb7,
	0x10, 0x12, 0x1d, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0xb8, 0x10,
	0x12, 0x1d, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x10, 0xb9, 0x10, 0x12,
	0x11, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x10,
	0xba, 0x10, 0x12, 0x0f, 0x0a, 0x0a, 0x4a, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e,
	0x10, 0xbe, 0x10, 0x12, 0x0f, 0x0a, 0x0a, 0x4a, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x61,
	0x64, 0x10, 0xbf, 0x10, 0x12, 0x10, 0x0a, 0x0b, 0x4a, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x10, 0xc0, 0x10, 0x12, 0x11, 0x0a, 0x0c, 0x4a, 0x73, 0x53, 0x71, 0x6c, 0x69,
	0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0xc1, 0x10, 0x12, 0x11, 0x0a, 0x0c, 0x4a, 0x73, 0x53,
	0x71, 0x6c, 0x69, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x10, 0xc2, 0x10, 0x12, 0x12, 0x0a, 0x0d,
	0x4a, 0x73, 0x53, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x10, 0xc3, 0x10,
	0x12, 0x12, 0x0a, 0x0d, 0x4a, 0x73, 0x53, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x10, 0xc4, 0x10, 0x42, 0x3b, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0xba, 0x02,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData = file_event_proto_rawDesc
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_proto_rawDescData)
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_event_proto_goTypes = []any{
	(FuncRequestEventName)(0),                             // 0: openim.event.FuncRequestEventName
	(*EventOnSendMsgProgressData)(nil),                    // 1: openim.event.EventOnSendMsgProgressData
	(*EventOnUploadFileProgressData)(nil),                 // 2: openim.event.EventOnUploadFileProgressData
	(*EventOnUploadLogsProgressData)(nil),                 // 3: openim.event.EventOnUploadLogsProgressData
	(*EventOnConnectingData)(nil),                         // 4: openim.event.EventOnConnectingData
	(*EventOnConnectSuccessData)(nil),                     // 5: openim.event.EventOnConnectSuccessData
	(*EventOnConnectFailedData)(nil),                      // 6: openim.event.EventOnConnectFailedData
	(*EventOnKickedOfflineData)(nil),                      // 7: openim.event.EventOnKickedOfflineData
	(*EventOnUserTokenExpiredData)(nil),                   // 8: openim.event.EventOnUserTokenExpiredData
	(*EventOnUserTokenInvalidData)(nil),                   // 9: openim.event.EventOnUserTokenInvalidData
	(*EventOnSyncServerStartData)(nil),                    // 10: openim.event.EventOnSyncServerStartData
	(*EventOnSyncServerFinishData)(nil),                   // 11: openim.event.EventOnSyncServerFinishData
	(*EventOnSyncServerFailedData)(nil),                   // 12: openim.event.EventOnSyncServerFailedData
	(*EventOnSyncServerProgressData)(nil),                 // 13: openim.event.EventOnSyncServerProgressData
	(*EventOnNewConversationData)(nil),                    // 14: openim.event.EventOnNewConversationData
	(*EventOnConversationChangedData)(nil),                // 15: openim.event.EventOnConversationChangedData
	(*EventOnTotalUnreadMessageCountChangedData)(nil),     // 16: openim.event.EventOnTotalUnreadMessageCountChangedData
	(*EventOnConversationUserInputStatusChangedData)(nil), // 17: openim.event.EventOnConversationUserInputStatusChangedData
	(*EventOnRecvNewMessageData)(nil),                     // 18: openim.event.EventOnRecvNewMessageData
	(*MessageReceipt)(nil),                                // 19: openim.event.MessageReceipt
	(*EventOnRecvC2CReadReceiptData)(nil),                 // 20: openim.event.EventOnRecvC2CReadReceiptData
	(*EventOnNewRecvMessageRevokedData)(nil),              // 21: openim.event.EventOnNewRecvMessageRevokedData
	(*EventOnRecvOfflineNewMessageData)(nil),              // 22: openim.event.EventOnRecvOfflineNewMessageData
	(*EventOnMessageDeletedData)(nil),                     // 23: openim.event.EventOnMessageDeletedData
	(*EventOnRecvOnlineOnlyMessageData)(nil),              // 24: openim.event.EventOnRecvOnlineOnlyMessageData
	(*EventOnMessageEditedData)(nil),                      // 25: openim.event.EventOnMessageEditedData
	(*EventOnFriendApplicationAddedData)(nil),             // 26: openim.event.EventOnFriendApplicationAddedData
	(*EventOnFriendApplicationDeletedData)(nil),           // 27: openim.event.EventOnFriendApplicationDeletedData
	(*EventOnFriendApplicationAcceptedData)(nil),          // 28: openim.event.EventOnFriendApplicationAcceptedData
	(*EventOnFriendApplicationRejectedData)(nil),          // 29: openim.event.EventOnFriendApplicationRejectedData
	(*EventOnFriendAddedData)(nil),                        // 30: openim.event.EventOnFriendAddedData
	(*EventOnFriendDeletedData)(nil),                      // 31: openim.event.EventOnFriendDeletedData
	(*EventOnFriendInfoChangedData)(nil),                  // 32: openim.event.EventOnFriendInfoChangedData
	(*EventOnBlackAddedData)(nil),                         // 33: openim.event.EventOnBlackAddedData
	(*EventOnBlackDeletedData)(nil),                       // 34: openim.event.EventOnBlackDeletedData
	(*EventOnJoinedGroupAddedData)(nil),                   // 35: openim.event.EventOnJoinedGroupAddedData
	(*EventOnJoinedGroupDeletedData)(nil),                 // 36: openim.event.EventOnJoinedGroupDeletedData
	(*EventOnGroupMemberAddedData)(nil),                   // 37: openim.event.EventOnGroupMemberAddedData
	(*EventOnGroupMemberDeletedData)(nil),                 // 38: openim.event.EventOnGroupMemberDeletedData
	(*EventOnGroupApplicationAddedData)(nil),              // 39: openim.event.EventOnGroupApplicationAddedData
	(*EventOnGroupApplicationDeletedData)(nil),            // 40: openim.event.EventOnGroupApplicationDeletedData
	(*EventOnGroupInfoChangedData)(nil),                   // 41: openim.event.EventOnGroupInfoChangedData
	(*EventOnGroupDismissedData)(nil),                     // 42: openim.event.EventOnGroupDismissedData
	(*EventOnGroupMemberInfoChangedData)(nil),             // 43: openim.event.EventOnGroupMemberInfoChangedData
	(*EventOnGroupApplicationAcceptedData)(nil),           // 44: openim.event.EventOnGroupApplicationAcceptedData
	(*EventOnGroupApplicationRejectedData)(nil),           // 45: openim.event.EventOnGroupApplicationRejectedData
	(*EventOnRecvCustomBusinessMessageData)(nil),          // 46: openim.event.EventOnRecvCustomBusinessMessageData
	(*EventOnSelfInfoUpdatedData)(nil),                    // 47: openim.event.EventOnSelfInfoUpdatedData
	(*EventOnUserStatusChangedData)(nil),                  // 48: openim.event.EventOnUserStatusChangedData
	(*EventOnUserCommandAddData)(nil),                     // 49: openim.event.EventOnUserCommandAddData
	(*EventOnUserCommandDeleteData)(nil),                  // 50: openim.event.EventOnUserCommandDeleteData
	(*EventOnUserCommandUpdateData)(nil),                  // 51: openim.event.EventOnUserCommandUpdateData
	(*shared.IMConversation)(nil),                         // 52: openim.sdk.shared.IMConversation
	(*shared.IMMessage)(nil),                              // 53: openim.sdk.shared.IMMessage
	(*shared.RevokedTips)(nil),                            // 54: openim.sdk.shared.RevokedTips
	(*shared.IMFriendApplication)(nil),                    // 55: openim.sdk.shared.IMFriendApplication
	(*shared.IMFriend)(nil),                               // 56: openim.sdk.shared.IMFriend
	(*shared.IMBlack)(nil),                                // 57: openim.sdk.shared.IMBlack
	(*shared.IMGroup)(nil),                                // 58: openim.sdk.shared.IMGroup
	(*shared.IMGroupMember)(nil),                          // 59: openim.sdk.shared.IMGroupMember
	(*shared.IMGroupApplication)(nil),                     // 60: openim.sdk.shared.IMGroupApplication
	(*shared.IMUser)(nil),                                 // 61: openim.sdk.shared.IMUser
	(*shared.CommandInfo)(nil),                            // 62: openim.sdk.shared.CommandInfo
}
var file_event_proto_depIdxs = []int32{
	52, // 0: openim.event.EventOnNewConversationData.conversationList:type_name -> openim.sdk.shared.IMConversation
	52, // 1: openim.event.EventOnConversationChangedData.conversationList:type_name -> openim.sdk.shared.IMConversation
	53, // 2: openim.event.EventOnRecvNewMessageData.message:type_name -> openim.sdk.shared.IMMessage
	19, // 3: openim.event.EventOnRecvC2CReadReceiptData.msgReceiptList:type_name -> openim.event.MessageReceipt
	54, // 4: openim.event.EventOnNewRecvMessageRevokedData.revoked:type_name -> openim.sdk.shared.RevokedTips
	53, // 5: openim.event.EventOnRecvOfflineNewMessageData.message:type_name -> openim.sdk.shared.IMMessage
	53, // 6: openim.event.EventOnMessageDeletedData.message:type_name -> openim.sdk.shared.IMMessage
	53, // 7: openim.event.EventOnRecvOnlineOnlyMessageData.message:type_name -> openim.sdk.shared.IMMessage
	53, // 8: openim.event.EventOnMessageEditedData.message:type_name -> openim.sdk.shared.IMMessage
	55, // 9: openim.event.EventOnFriendApplicationAddedData.request:type_name -> openim.sdk.shared.IMFriendApplication
	55, // 10: openim.event.EventOnFriendApplicationDeletedData.request:type_name -> openim.sdk.shared.IMFriendApplication
	55, // 11: openim.event.EventOnFriendApplicationAcceptedData.request:type_name -> openim.sdk.shared.IMFriendApplication
	55, // 12: openim.event.EventOnFriendApplicationRejectedData.request:type_name -> openim.sdk.shared.IMFriendApplication
	56, // 13: openim.event.EventOnFriendAddedData.friend:type_name -> openim.sdk.shared.IMFriend
	56, // 14: openim.event.EventOnFriendDeletedData.friend:type_name -> openim.sdk.shared.IMFriend
	56, // 15: openim.event.EventOnFriendInfoChangedData.friend:type_name -> openim.sdk.shared.IMFriend
	57, // 16: openim.event.EventOnBlackAddedData.black:type_name -> openim.sdk.shared.IMBlack
	57, // 17: openim.event.EventOnBlackDeletedData.black:type_name -> openim.sdk.shared.IMBlack
	58, // 18: openim.event.EventOnJoinedGroupAddedData.group:type_name -> openim.sdk.shared.IMGroup
	58, // 19: openim.event.EventOnJoinedGroupDeletedData.group:type_name -> openim.sdk.shared.IMGroup
	59, // 20: openim.event.EventOnGroupMemberAddedData.member:type_name -> openim.sdk.shared.IMGroupMember
	59, // 21: openim.event.EventOnGroupMemberDeletedData.member:type_name -> openim.sdk.shared.IMGroupMember
	60, // 22: openim.event.EventOnGroupApplicationAddedData.request:type_name -> openim.sdk.shared.IMGroupApplication
	60, // 23: openim.event.EventOnGroupApplicationDeletedData.request:type_name -> openim.sdk.shared.IMGroupApplication
	58, // 24: openim.event.EventOnGroupInfoChangedData.group:type_name -> openim.sdk.shared.IMGroup
	58, // 25: openim.event.EventOnGroupDismissedData.group:type_name -> openim.sdk.shared.IMGroup
	59, // 26: openim.event.EventOnGroupMemberInfoChangedData.member:type_name -> openim.sdk.shared.IMGroupMember
	60, // 27: openim.event.EventOnGroupApplicationAcceptedData.request:type_name -> openim.sdk.shared.IMGroupApplication
	60, // 28: openim.event.EventOnGroupApplicationRejectedData.request:type_name -> openim.sdk.shared.IMGroupApplication
	61, // 29: openim.event.EventOnSelfInfoUpdatedData.user:type_name -> openim.sdk.shared.IMUser
	62, // 30: openim.event.EventOnUserCommandAddData.command:type_name -> openim.sdk.shared.CommandInfo
	62, // 31: openim.event.EventOnUserCommandDeleteData.command:type_name -> openim.sdk.shared.CommandInfo
	62, // 32: openim.event.EventOnUserCommandUpdateData.command:type_name -> openim.sdk.shared.CommandInfo
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_rawDesc = nil
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
