// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionType int32

const (
	SessionType_SessionType_ SessionType = 0
	// Single represents a single chat session type.
	SessionType_Single SessionType = 1
	// WriteGroup represents a write-diffusion group chat session type (not currently enabled, can be ignored).
	SessionType_WriteGroup SessionType = 2
	// ReadGroup represents a read-diffusion group chat session type, used for all current group chats in OpenIM.
	SessionType_ReadGroup SessionType = 3
	// Notification represents a notification session type, generated by the client when the server sends a notification.
	SessionType_Notification SessionType = 4
)

// Enum value maps for SessionType.
var (
	SessionType_name = map[int32]string{
		0: "SessionType_",
		1: "Single",
		2: "WriteGroup",
		3: "ReadGroup",
		4: "Notification",
	}
	SessionType_value = map[string]int32{
		"SessionType_": 0,
		"Single":       1,
		"WriteGroup":   2,
		"ReadGroup":    3,
		"Notification": 4,
	}
)

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (SessionType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionType.Descriptor instead.
func (SessionType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type MsgFrom int32

const (
	MsgFrom_MsgFrom_ MsgFrom = 0
	// User represents a message type originating from a user.
	MsgFrom_User MsgFrom = 100
	// System represents a system message type, typically generated by the system.
	MsgFrom_System MsgFrom = 200
)

// Enum value maps for MsgFrom.
var (
	MsgFrom_name = map[int32]string{
		0:   "MsgFrom_",
		100: "User",
		200: "System",
	}
	MsgFrom_value = map[string]int32{
		"MsgFrom_": 0,
		"User":     100,
		"System":   200,
	}
)

func (x MsgFrom) Enum() *MsgFrom {
	p := new(MsgFrom)
	*p = x
	return p
}

func (x MsgFrom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgFrom) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (MsgFrom) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x MsgFrom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgFrom.Descriptor instead.
func (MsgFrom) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type Platform int32

const (
	Platform_Platform_ Platform = 0
	// iOS represents the Apple iOS platform.
	Platform_iOS Platform = 1
	// Android represents the Android platform.
	Platform_Android Platform = 2
	// Windows represents the Microsoft Windows platform.
	Platform_Windows Platform = 3
	// macOS represents the Apple macOS platform.
	Platform_macOS Platform = 4
	// Web represents the web browser platform.
	Platform_Web Platform = 5
	// MiniWeb represents the mini-program or mini-web platform.
	Platform_MiniWeb Platform = 6
	// Linux represents the Linux platform.
	Platform_Linux Platform = 7
	// AndroidPad represents the Android tablet platform.
	Platform_AndroidPad Platform = 8
	// iPad represents the Apple iPad platform.
	Platform_iPad Platform = 9
	// Admin represents the admin panel or management platform, typically used for backend administrators.
	// This platform is specifically for administrative filling and can generally be ignored.
	Platform_Admin Platform = 10
	// HarmonyOS represents the Huawei HarmonyOS platform.
	Platform_HarmonyOS Platform = 11
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0:  "Platform_",
		1:  "iOS",
		2:  "Android",
		3:  "Windows",
		4:  "macOS",
		5:  "Web",
		6:  "MiniWeb",
		7:  "Linux",
		8:  "AndroidPad",
		9:  "iPad",
		10: "Admin",
		11: "HarmonyOS",
	}
	Platform_value = map[string]int32{
		"Platform_":  0,
		"iOS":        1,
		"Android":    2,
		"Windows":    3,
		"macOS":      4,
		"Web":        5,
		"MiniWeb":    6,
		"Linux":      7,
		"AndroidPad": 8,
		"iPad":       9,
		"Admin":      10,
		"HarmonyOS":  11,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type AppFramework int32

const (
	AppFramework_AppFramework_ AppFramework = 0
	AppFramework_Native        AppFramework = 1
	AppFramework_Flutter       AppFramework = 2
	AppFramework_ReactNative   AppFramework = 3
	AppFramework_Electron      AppFramework = 4
	AppFramework_Unity         AppFramework = 5
	AppFramework_UnrealEngine  AppFramework = 6
	AppFramework_Qt            AppFramework = 7
	AppFramework_DotNet        AppFramework = 8
	AppFramework_DotNetMAUI    AppFramework = 9
	AppFramework_Avalonia      AppFramework = 10
	AppFramework_Cordova       AppFramework = 11
	AppFramework_UniApp        AppFramework = 12
)

// Enum value maps for AppFramework.
var (
	AppFramework_name = map[int32]string{
		0:  "AppFramework_",
		1:  "Native",
		2:  "Flutter",
		3:  "ReactNative",
		4:  "Electron",
		5:  "Unity",
		6:  "UnrealEngine",
		7:  "Qt",
		8:  "DotNet",
		9:  "DotNetMAUI",
		10: "Avalonia",
		11: "Cordova",
		12: "UniApp",
	}
	AppFramework_value = map[string]int32{
		"AppFramework_": 0,
		"Native":        1,
		"Flutter":       2,
		"ReactNative":   3,
		"Electron":      4,
		"Unity":         5,
		"UnrealEngine":  6,
		"Qt":            7,
		"DotNet":        8,
		"DotNetMAUI":    9,
		"Avalonia":      10,
		"Cordova":       11,
		"UniApp":        12,
	}
)

func (x AppFramework) Enum() *AppFramework {
	p := new(AppFramework)
	*p = x
	return p
}

func (x AppFramework) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppFramework) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (AppFramework) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x AppFramework) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppFramework.Descriptor instead.
func (AppFramework) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type MsgStatus int32

const (
	MsgStatus_MsgStatus_  MsgStatus = 0
	MsgStatus_Sending     MsgStatus = 1
	MsgStatus_SendSuccess MsgStatus = 2
	MsgStatus_SendFailed  MsgStatus = 3
	MsgStatus_HasDeleted  MsgStatus = 4
	MsgStatus_Filtered    MsgStatus = 5
)

// Enum value maps for MsgStatus.
var (
	MsgStatus_name = map[int32]string{
		0: "MsgStatus_",
		1: "Sending",
		2: "SendSuccess",
		3: "SendFailed",
		4: "HasDeleted",
		5: "Filtered",
	}
	MsgStatus_value = map[string]int32{
		"MsgStatus_":  0,
		"Sending":     1,
		"SendSuccess": 2,
		"SendFailed":  3,
		"HasDeleted":  4,
		"Filtered":    5,
	}
)

func (x MsgStatus) Enum() *MsgStatus {
	p := new(MsgStatus)
	*p = x
	return p
}

func (x MsgStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (MsgStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x MsgStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgStatus.Descriptor instead.
func (MsgStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type ContentType int32

const (
	ContentType_ContentType_                          ContentType = 0
	ContentType_Text                                  ContentType = 101
	ContentType_Picture                               ContentType = 102
	ContentType_Sound                                 ContentType = 103
	ContentType_Video                                 ContentType = 104
	ContentType_File                                  ContentType = 105
	ContentType_AtText                                ContentType = 106
	ContentType_Merge                                 ContentType = 107
	ContentType_Card                                  ContentType = 108
	ContentType_Location                              ContentType = 109
	ContentType_Custom                                ContentType = 110
	ContentType_Typing                                ContentType = 113
	ContentType_Quote                                 ContentType = 114
	ContentType_Face                                  ContentType = 115
	ContentType_Stream                                ContentType = 116
	ContentType_AdvancedText                          ContentType = 117
	ContentType_CustomMsgNotTriggerConversation       ContentType = 119
	ContentType_CustomMsgOnlineOnly                   ContentType = 120
	ContentType_FriendApplicationApprovedNotification ContentType = 1201
	// BlackAddedNotification = 1207;
	// BlackDeletedNotification = 1208;
	// FriendInfoUpdatedNotification = 1209;
	// FriendsInfoUpdateNotification = 1210;
	// ConversationChangeNotification = 1300;
	// UserInfoUpdatedNotification = 1303;
	// UserStatusChangeNotification = 1304;
	// UserCommandAddNotification = 1305;
	// UserCommandDeleteNotification = 1306;
	// UserCommandUpdateNotification = 1307;
	ContentType_GroupCreatedNotification ContentType = 1501
	// GroupInfoSetNotification = 1502;
	// JoinGroupApplicationNotification = 1503;
	ContentType_MemberQuitNotification ContentType = 1504
	// GroupApplicationAcceptedNotification = 1505;
	// GroupApplicationRejectedNotification = 1506;
	ContentType_GroupOwnerTransferredNotification   ContentType = 1507
	ContentType_MemberKickedNotification            ContentType = 1508
	ContentType_MemberInvitedNotification           ContentType = 1509
	ContentType_MemberEnterNotification             ContentType = 1510
	ContentType_GroupDismissedNotification          ContentType = 1511
	ContentType_GroupMemberMutedNotification        ContentType = 1512
	ContentType_GroupMemberCancelMutedNotification  ContentType = 1513
	ContentType_GroupMutedNotification              ContentType = 1514
	ContentType_GroupCancelMutedNotification        ContentType = 1515
	ContentType_ConversationPrivateChatNotification ContentType = 1701 //  ClearConversationNotification = 1703;
	ContentType_BusinessNotification                ContentType = 2001
	ContentType_RevokedNotification                 ContentType = 2101
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0:    "ContentType_",
		101:  "Text",
		102:  "Picture",
		103:  "Sound",
		104:  "Video",
		105:  "File",
		106:  "AtText",
		107:  "Merge",
		108:  "Card",
		109:  "Location",
		110:  "Custom",
		113:  "Typing",
		114:  "Quote",
		115:  "Face",
		116:  "Stream",
		117:  "AdvancedText",
		119:  "CustomMsgNotTriggerConversation",
		120:  "CustomMsgOnlineOnly",
		1201: "FriendApplicationApprovedNotification",
		1501: "GroupCreatedNotification",
		1504: "MemberQuitNotification",
		1507: "GroupOwnerTransferredNotification",
		1508: "MemberKickedNotification",
		1509: "MemberInvitedNotification",
		1510: "MemberEnterNotification",
		1511: "GroupDismissedNotification",
		1512: "GroupMemberMutedNotification",
		1513: "GroupMemberCancelMutedNotification",
		1514: "GroupMutedNotification",
		1515: "GroupCancelMutedNotification",
		1701: "ConversationPrivateChatNotification",
		2001: "BusinessNotification",
		2101: "RevokedNotification",
	}
	ContentType_value = map[string]int32{
		"ContentType_":                          0,
		"Text":                                  101,
		"Picture":                               102,
		"Sound":                                 103,
		"Video":                                 104,
		"File":                                  105,
		"AtText":                                106,
		"Merge":                                 107,
		"Card":                                  108,
		"Location":                              109,
		"Custom":                                110,
		"Typing":                                113,
		"Quote":                                 114,
		"Face":                                  115,
		"Stream":                                116,
		"AdvancedText":                          117,
		"CustomMsgNotTriggerConversation":       119,
		"CustomMsgOnlineOnly":                   120,
		"FriendApplicationApprovedNotification": 1201,
		"GroupCreatedNotification":              1501,
		"MemberQuitNotification":                1504,
		"GroupOwnerTransferredNotification":     1507,
		"MemberKickedNotification":              1508,
		"MemberInvitedNotification":             1509,
		"MemberEnterNotification":               1510,
		"GroupDismissedNotification":            1511,
		"GroupMemberMutedNotification":          1512,
		"GroupMemberCancelMutedNotification":    1513,
		"GroupMutedNotification":                1514,
		"GroupCancelMutedNotification":          1515,
		"ConversationPrivateChatNotification":   1701,
		"BusinessNotification":                  2001,
		"RevokedNotification":                   2101,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

type ApprovalStatus int32

const (
	ApprovalStatus_Default  ApprovalStatus = 0
	ApprovalStatus_Approved ApprovalStatus = 1
	ApprovalStatus_Rejected ApprovalStatus = -1
)

// Enum value maps for ApprovalStatus.
var (
	ApprovalStatus_name = map[int32]string{
		0:  "Default",
		1:  "Approved",
		-1: "Rejected",
	}
	ApprovalStatus_value = map[string]int32{
		"Default":  0,
		"Approved": 1,
		"Rejected": -1,
	}
)

func (x ApprovalStatus) Enum() *ApprovalStatus {
	p := new(ApprovalStatus)
	*p = x
	return p
}

func (x ApprovalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApprovalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (ApprovalStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x ApprovalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApprovalStatus.Descriptor instead.
func (ApprovalStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type ConvRecvMsgOpt int32

const (
	ConvRecvMsgOpt_ReceiveMessage          ConvRecvMsgOpt = 0
	ConvRecvMsgOpt_NotReceiveMessage       ConvRecvMsgOpt = 1
	ConvRecvMsgOpt_ReceiveNotNotifyMessage ConvRecvMsgOpt = 2
)

// Enum value maps for ConvRecvMsgOpt.
var (
	ConvRecvMsgOpt_name = map[int32]string{
		0: "ReceiveMessage",
		1: "NotReceiveMessage",
		2: "ReceiveNotNotifyMessage",
	}
	ConvRecvMsgOpt_value = map[string]int32{
		"ReceiveMessage":          0,
		"NotReceiveMessage":       1,
		"ReceiveNotNotifyMessage": 2,
	}
)

func (x ConvRecvMsgOpt) Enum() *ConvRecvMsgOpt {
	p := new(ConvRecvMsgOpt)
	*p = x
	return p
}

func (x ConvRecvMsgOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConvRecvMsgOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (ConvRecvMsgOpt) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x ConvRecvMsgOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConvRecvMsgOpt.Descriptor instead.
func (ConvRecvMsgOpt) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

type ConvGroupAtType int32

const (
	ConvGroupAtType_AtNormal  ConvGroupAtType = 0
	ConvGroupAtType_AtMe      ConvGroupAtType = 1
	ConvGroupAtType_AtAll     ConvGroupAtType = 2
	ConvGroupAtType_AtAllAtMe ConvGroupAtType = 3
)

// Enum value maps for ConvGroupAtType.
var (
	ConvGroupAtType_name = map[int32]string{
		0: "AtNormal",
		1: "AtMe",
		2: "AtAll",
		3: "AtAllAtMe",
	}
	ConvGroupAtType_value = map[string]int32{
		"AtNormal":  0,
		"AtMe":      1,
		"AtAll":     2,
		"AtAllAtMe": 3,
	}
)

func (x ConvGroupAtType) Enum() *ConvGroupAtType {
	p := new(ConvGroupAtType)
	*p = x
	return p
}

func (x ConvGroupAtType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConvGroupAtType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[8].Descriptor()
}

func (ConvGroupAtType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[8]
}

func (x ConvGroupAtType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConvGroupAtType.Descriptor instead.
func (ConvGroupAtType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

// GlobalRecvMsgOpt represents the global message receive option.
//
// In the globalRecvMsgOpt of UserInfo, globally control whether to receive offline push notifications.
//
// In the recvMsgOpt of a ConversationInfo, in addition to controlling whether to receive offline push notifications for that session,
// it also controls whether the unread count of that session is included in the total unread count.
type GlobalRecvMsgOpt int32

const (
	GlobalRecvMsgOpt_Normal     GlobalRecvMsgOpt = 0 // Normally receive messages
	GlobalRecvMsgOpt_NotReceive GlobalRecvMsgOpt = 1 // Reserved field
	GlobalRecvMsgOpt_NotNotify  GlobalRecvMsgOpt = 2 // Receive messages, but no offline push. When in conversation, this conversation's unread count is not included in the total unread count
)

// Enum value maps for GlobalRecvMsgOpt.
var (
	GlobalRecvMsgOpt_name = map[int32]string{
		0: "Normal",
		1: "NotReceive",
		2: "NotNotify",
	}
	GlobalRecvMsgOpt_value = map[string]int32{
		"Normal":     0,
		"NotReceive": 1,
		"NotNotify":  2,
	}
)

func (x GlobalRecvMsgOpt) Enum() *GlobalRecvMsgOpt {
	p := new(GlobalRecvMsgOpt)
	*p = x
	return p
}

func (x GlobalRecvMsgOpt) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GlobalRecvMsgOpt) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[9].Descriptor()
}

func (GlobalRecvMsgOpt) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[9]
}

func (x GlobalRecvMsgOpt) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GlobalRecvMsgOpt.Descriptor instead.
func (GlobalRecvMsgOpt) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

// LogLevel represents the log level. debug -> info -> warn -> error -> fatal.
// Default log level is LevelWarn or LevelDebug.
type LogLevel int32

const (
	LogLevel_LevelFatal        LogLevel = 0 // only print fatal log
	LogLevel_LevelPanic        LogLevel = 1 // print panic and fatal log
	LogLevel_LevelError        LogLevel = 2 // print error, panic and fatal log
	LogLevel_LevelWarn         LogLevel = 3 // print warn, error, panic and fatal log
	LogLevel_LevelInfo         LogLevel = 4 // print info, warn, error, panic and fatal log
	LogLevel_LevelDebug        LogLevel = 5 // print all level log
	LogLevel_LevelDebugWithSQL LogLevel = 6 // print all level log and sql log
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LevelFatal",
		1: "LevelPanic",
		2: "LevelError",
		3: "LevelWarn",
		4: "LevelInfo",
		5: "LevelDebug",
		6: "LevelDebugWithSQL",
	}
	LogLevel_value = map[string]int32{
		"LevelFatal":        0,
		"LevelPanic":        1,
		"LevelError":        2,
		"LevelWarn":         3,
		"LevelInfo":         4,
		"LevelDebug":        5,
		"LevelDebugWithSQL": 6,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[10].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[10]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

// UploadSDKDataMode represents the mode of upload sdk data.
type UploadSDKDataMode int32

const (
	UploadSDKDataMode_AllUpload  UploadSDKDataMode = 0 // upload db and logs
	UploadSDKDataMode_UploadLogs UploadSDKDataMode = 1 // only upload logs
	UploadSDKDataMode_UploadDB   UploadSDKDataMode = 2 // only upload db
)

// Enum value maps for UploadSDKDataMode.
var (
	UploadSDKDataMode_name = map[int32]string{
		0: "AllUpload",
		1: "UploadLogs",
		2: "UploadDB",
	}
	UploadSDKDataMode_value = map[string]int32{
		"AllUpload":  0,
		"UploadLogs": 1,
		"UploadDB":   2,
	}
)

func (x UploadSDKDataMode) Enum() *UploadSDKDataMode {
	p := new(UploadSDKDataMode)
	*p = x
	return p
}

func (x UploadSDKDataMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadSDKDataMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[11].Descriptor()
}

func (UploadSDKDataMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[11]
}

func (x UploadSDKDataMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadSDKDataMode.Descriptor instead.
func (UploadSDKDataMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

type OfflinePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Desc          string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc"`
	Ex            string `protobuf:"bytes,3,opt,name=ex,proto3" json:"ex"`
	IOSPushSound  string `protobuf:"bytes,4,opt,name=iOSPushSound,proto3" json:"iOSPushSound"`
	IOSBadgeCount bool   `protobuf:"varint,5,opt,name=iOSBadgeCount,proto3" json:"iOSBadgeCount"`
	SignalInfo    string `protobuf:"bytes,6,opt,name=signalInfo,proto3" json:"signalInfo"`
}

func (x *OfflinePushInfo) Reset() {
	*x = OfflinePushInfo{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OfflinePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePushInfo) ProtoMessage() {}

func (x *OfflinePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePushInfo.ProtoReflect.Descriptor instead.
func (*OfflinePushInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *OfflinePushInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflinePushInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *OfflinePushInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *OfflinePushInfo) GetIOSPushSound() string {
	if x != nil {
		return x.IOSPushSound
	}
	return ""
}

func (x *OfflinePushInfo) GetIOSBadgeCount() bool {
	if x != nil {
		return x.IOSBadgeCount
	}
	return false
}

func (x *OfflinePushInfo) GetSignalInfo() string {
	if x != nil {
		return x.SignalInfo
	}
	return ""
}

type RequestPagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNumber int32 `protobuf:"varint,1,opt,name=pageNumber,proto3" json:"pageNumber"`
	ShowNumber int32 `protobuf:"varint,2,opt,name=showNumber,proto3" json:"showNumber"`
}

func (x *RequestPagination) Reset() {
	*x = RequestPagination{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPagination) ProtoMessage() {}

func (x *RequestPagination) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPagination.ProtoReflect.Descriptor instead.
func (*RequestPagination) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *RequestPagination) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *RequestPagination) GetShowNumber() int32 {
	if x != nil {
		return x.ShowNumber
	}
	return 0
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x4f, 0x53, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x4f, 0x53, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x4f, 0x53, 0x42, 0x61, 0x64, 0x67, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x4f, 0x53, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x5c,
	0x0a, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x52,
	0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x2a, 0x2e, 0x0a, 0x07,
	0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x46, 0x72,
	0x6f, 0x6d, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x10, 0x64, 0x12,
	0x0b, 0x0a, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0xc8, 0x01, 0x2a, 0x9c, 0x01, 0x0a,
	0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x4f, 0x53, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x6d,
	0x61, 0x63, 0x4f, 0x53, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x62, 0x10, 0x05, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x62, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x69, 0x6e, 0x75, 0x78, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x50, 0x61, 0x64, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x50, 0x61, 0x64, 0x10,
	0x09, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09,
	0x48, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x4f, 0x53, 0x10, 0x0b, 0x2a, 0xc1, 0x01, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x11, 0x0a, 0x0d,
	0x41, 0x70, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x6c, 0x75, 0x74, 0x74, 0x65, 0x72, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x79,
	0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x51, 0x74, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x6f, 0x74, 0x4e, 0x65, 0x74, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x6f, 0x74, 0x4e,
	0x65, 0x74, 0x4d, 0x41, 0x55, 0x49, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x76, 0x61, 0x6c,
	0x6f, 0x6e, 0x69, 0x61, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x72, 0x64, 0x6f, 0x76,
	0x61, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x10, 0x0c, 0x2a,
	0x67, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x61,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x10, 0x05, 0x2a, 0x87, 0x06, 0x0a, 0x0b, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x10, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x10,
	0x66, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x67, 0x12, 0x09, 0x0a, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x68, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10,
	0x69, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x74, 0x54, 0x65, 0x78, 0x74, 0x10, 0x6a, 0x12, 0x09, 0x0a,
	0x05, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x10, 0x6b, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x6c, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x6d,
	0x12, 0x0a, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x6e, 0x12, 0x0a, 0x0a, 0x06,
	0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x10, 0x71, 0x12, 0x09, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x10, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x61, 0x63, 0x65, 0x10, 0x73, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x74, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x10, 0x75, 0x12, 0x23, 0x0a, 0x1f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x4e, 0x6f, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x77,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x78, 0x12, 0x2a, 0x0a, 0x25, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0xb1, 0x09, 0x12, 0x1d, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0xdd, 0x0b, 0x12, 0x1b, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x51, 0x75,
	0x69, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe0,
	0x0b, 0x12, 0x26, 0x0a, 0x21, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe3, 0x0b, 0x12, 0x1d, 0x0a, 0x18, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe4, 0x0b, 0x12, 0x1e, 0x0a, 0x19, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe5, 0x0b, 0x12, 0x1c, 0x0a, 0x17, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0xe6, 0x0b, 0x12, 0x1f, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe7, 0x0b, 0x12, 0x21, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe8, 0x0b, 0x12, 0x27, 0x0a, 0x22, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x75, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0xe9, 0x0b, 0x12, 0x1b, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xea, 0x0b,
	0x12, 0x21, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d,
	0x75, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0xeb, 0x0b, 0x12, 0x28, 0x0a, 0x23, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xa5, 0x0d, 0x12, 0x19, 0x0a,
	0x14, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xd1, 0x0f, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0xb5, 0x10, 0x2a, 0x42, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x2a, 0x58, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x76, 0x52, 0x65,
	0x63, 0x76, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x4e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4e, 0x6f,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x02,
	0x2a, 0x43, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x76, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x74, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x74, 0x4d, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x74, 0x41, 0x6c, 0x6c, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x41,
	0x74, 0x4d, 0x65, 0x10, 0x03, 0x2a, 0x3d, 0x0a, 0x10, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x65, 0x63, 0x76, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x10, 0x02, 0x2a, 0x7f, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x46, 0x61, 0x74, 0x61, 0x6c, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x57, 0x61, 0x72, 0x6e, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x04, 0x12, 0x0e,
	0x0a, 0x0a, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x05, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x51, 0x4c, 0x10, 0x06, 0x2a, 0x40, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x44, 0x4b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x6c,
	0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x42, 0x10, 0x02, 0x42, 0x3c, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x73, 0x64, 0x6b, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x76, 0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0xba, 0x02, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_proto_goTypes = []any{
	(SessionType)(0),          // 0: openim.sdk.common.SessionType
	(MsgFrom)(0),              // 1: openim.sdk.common.MsgFrom
	(Platform)(0),             // 2: openim.sdk.common.Platform
	(AppFramework)(0),         // 3: openim.sdk.common.AppFramework
	(MsgStatus)(0),            // 4: openim.sdk.common.MsgStatus
	(ContentType)(0),          // 5: openim.sdk.common.ContentType
	(ApprovalStatus)(0),       // 6: openim.sdk.common.ApprovalStatus
	(ConvRecvMsgOpt)(0),       // 7: openim.sdk.common.ConvRecvMsgOpt
	(ConvGroupAtType)(0),      // 8: openim.sdk.common.ConvGroupAtType
	(GlobalRecvMsgOpt)(0),     // 9: openim.sdk.common.GlobalRecvMsgOpt
	(LogLevel)(0),             // 10: openim.sdk.common.LogLevel
	(UploadSDKDataMode)(0),    // 11: openim.sdk.common.UploadSDKDataMode
	(*OfflinePushInfo)(nil),   // 12: openim.sdk.common.OfflinePushInfo
	(*RequestPagination)(nil), // 13: openim.sdk.common.RequestPagination
}
var file_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
