// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: shared.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Openim.Sdk.Shared {

  /// <summary>Holder for reflection information generated from shared.proto</summary>
  public static partial class SharedReflection {

    #region Descriptor
    /// <summary>File descriptor for shared.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SharedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzaGFyZWQucHJvdG8SEW9wZW5pbS5zZGsuc2hhcmVkIqEBCghVc2VySW5m",
            "bxIOCgZ1c2VySUQYASABKAkSEAoIbmlja25hbWUYAiABKAkSDwoHZmFjZVVS",
            "TBgDIAEoCRIKCgJleBgEIAEoCRISCgpjcmVhdGVUaW1lGAUgASgDEhYKDmFw",
            "cE1hbmdlckxldmVsGAYgASgFEhgKEGdsb2JhbFJlY3ZNc2dPcHQYByABKAUS",
            "EAoIYXR0YWNoZWQYCCABKAki3QEKCkZyaWVuZEluZm8SEwoLb3duZXJVc2Vy",
            "SUQYASABKAkSFAoMZnJpZW5kVXNlcklEGAIgASgJEg4KBnJlbWFyaxgDIAEo",
            "CRISCgpjcmVhdGVUaW1lGAQgASgDEhEKCWFkZFNvdXJjZRgFIAEoBRIWCg5v",
            "cGVyYXRvclVzZXJJRBgGIAEoCRIQCghuaWNrbmFtZRgHIAEoCRIPCgdmYWNl",
            "VVJMGAggASgJEgoKAmV4GAkgASgJEhQKDGF0dGFjaGVkSW5mbxgKIAEoCRIQ",
            "Cghpc1Bpbm5lZBgLIAEoCCK1AQoJQmxhY2tJbmZvEhMKC293bmVyVXNlcklE",
            "GAEgASgJEhMKC2Jsb2NrVXNlcklEGAIgASgJEhAKCG5pY2tuYW1lGAMgASgJ",
            "Eg8KB2ZhY2VVUkwYBCABKAkSEgoKY3JlYXRlVGltZRgFIAEoAxIRCglhZGRT",
            "b3VyY2UYBiABKAUSFgoOb3BlcmF0b3JVc2VySUQYByABKAkSCgoCZXgYCCAB",
            "KAkSEAoIYXR0YWNoZWQYCSABKAkioQIKEUZyaWVuZFJlcXVlc3RJbmZvEhIK",
            "CmZyb21Vc2VySUQYASABKAkSFAoMZnJvbU5pY2tuYW1lGAIgASgJEhMKC2Zy",
            "b21GYWNlVVJMGAMgASgJEhAKCHRvVXNlcklEGAQgASgJEhIKCnRvTmlja25h",
            "bWUYBSABKAkSEQoJdG9GYWNlVVJMGAYgASgJEhQKDGhhbmRsZVJlc3VsdBgH",
            "IAEoBRIOCgZyZXFNc2cYCCABKAkSEgoKY3JlYXRlVGltZRgJIAEoAxIVCg1o",
            "YW5kbGVyVXNlcklEGAogASgJEhEKCWhhbmRsZU1zZxgLIAEoCRISCgpoYW5k",
            "bGVUaW1lGAwgASgDEgoKAmV4GA0gASgJEhAKCGF0dGFjaGVkGA4gASgJIpwD",
            "CglHcm91cEluZm8SDwoHZ3JvdXBJRBgBIAEoCRIRCglncm91cE5hbWUYAiAB",
            "KAkSFAoMbm90aWZpY2F0aW9uGAMgASgJEhQKDGludHJvZHVjdGlvbhgEIAEo",
            "CRIPCgdmYWNlVVJMGAUgASgJEhMKC293bmVyVXNlcklEGAYgASgJEhIKCmNy",
            "ZWF0ZVRpbWUYByABKAMSEwoLbWVtYmVyQ291bnQYCCABKAMSCgoCZXgYCSAB",
            "KAkSLgoGc3RhdHVzGAogASgOMh4ub3BlbmltLnNkay5zaGFyZWQuR3JvdXBT",
            "dGF0dXMSFQoNY3JlYXRvclVzZXJJRBgLIAEoCRIYChBuZWVkVmVyaWZpY2F0",
            "aW9uGAwgASgFEhYKDmxvb2tNZW1iZXJJbmZvGA0gASgFEhkKEWFwcGx5TWVt",
            "YmVyRnJpZW5kGA4gASgFEh4KFm5vdGlmaWNhdGlvblVwZGF0ZVRpbWUYDyAB",
            "KAMSGgoSbm90aWZpY2F0aW9uVXNlcklEGBAgASgJEhQKDGF0dGFjaGVkSW5m",
            "bxgRIAEoCSL0AQoPR3JvdXBNZW1iZXJJbmZvEg8KB2dyb3VwSUQYASABKAkS",
            "DgoGdXNlcklEGAIgASgJEhAKCG5pY2tuYW1lGAMgASgJEg8KB2ZhY2VVUkwY",
            "BCABKAkSEQoJcm9sZUxldmVsGAUgASgFEhAKCGpvaW5UaW1lGAYgASgDEhIK",
            "CmpvaW5Tb3VyY2UYByABKAUSFQoNaW52aXRlclVzZXJJRBgIIAEoCRITCgtt",
            "dXRlRW5kVGltZRgJIAEoAxIWCg5vcGVyYXRvclVzZXJJRBgKIAEoCRIKCgJl",
            "eBgLIAEoCRIUCgxhdHRhY2hlZEluZm8YDCABKAki6gMKEEdyb3VwUmVxdWVz",
            "dEluZm8SDwoHZ3JvdXBJRBgBIAEoCRIRCglncm91cE5hbWUYAiABKAkSFAoM",
            "bm90aWZpY2F0aW9uGAMgASgJEhQKDGludHJvZHVjdGlvbhgEIAEoCRIUCgxn",
            "cm91cEZhY2VVUkwYBSABKAkSEgoKY3JlYXRlVGltZRgGIAEoAxIOCgZzdGF0",
            "dXMYByABKAUSFQoNY3JlYXRvclVzZXJJRBgIIAEoCRIRCglncm91cFR5cGUY",
            "CSABKAUSEwoLb3duZXJVc2VySUQYCiABKAkSEwoLbWVtYmVyQ291bnQYCyAB",
            "KAUSDgoGdXNlcklEGAwgASgJEhAKCG5pY2tuYW1lGA0gASgJEhMKC3VzZXJG",
            "YWNlVVJMGA4gASgJEhQKDGhhbmRsZVJlc3VsdBgPIAEoBRIOCgZyZXFNc2cY",
            "ECABKAkSEgoKaGFuZGxlZE1zZxgRIAEoCRIPCgdyZXFUaW1lGBIgASgDEhQK",
            "DGhhbmRsZVVzZXJJRBgTIAEoCRITCgtoYW5kbGVkVGltZRgUIAEoAxIKCgJl",
            "eBgVIAEoCRIUCgxhdHRhY2hlZEluZm8YFiABKAkSEgoKam9pblNvdXJjZRgX",
            "IAEoBRIVCg1pbnZpdGVyVXNlcklEGBggASgJIpUDCgxDb252ZXJzYXRpb24S",
            "FgoOY29udmVyc2F0aW9uSUQYASABKAkSGAoQY29udmVyc2F0aW9uVHlwZRgC",
            "IAEoBRIOCgZ1c2VySUQYAyABKAkSDwoHZ3JvdXBJRBgEIAEoCRIQCghzaG93",
            "TmFtZRgFIAEoCRIPCgdmYWNlVVJMGAYgASgJEhIKCnJlY3ZNc2dPcHQYByAB",
            "KAUSEwoLdW5yZWFkQ291bnQYCCABKAUSEwoLZ3JvdXBBdFR5cGUYCSABKAUS",
            "EQoJbGF0ZXN0TXNnGAogASgJEhkKEWxhdGVzdE1zZ1NlbmRUaW1lGAsgASgD",
            "EhEKCWRyYWZ0VGV4dBgMIAEoCRIVCg1kcmFmdFRleHRUaW1lGA0gASgDEhAK",
            "CGlzUGlubmVkGA4gASgIEhUKDWlzUHJpdmF0ZUNoYXQYDyABKAgSFAoMYnVy",
            "bkR1cmF0aW9uGBAgASgFEgoKAmV4GBEgASgJEhcKD21zZ0Rlc3RydWN0VGlt",
            "ZRgSIAEoAxIVCg1pc01zZ0Rlc3RydWN0GBMgASgIKikKC0dyb3VwU3RhdHVz",
            "EgsKB0RlZmF1bHQQABINCglEaXNtaXNzZWQQAiptCgtHcm91cEZpbHRlchIH",
            "CgNBbGwQABIJCgVPd25lchABEgkKBUFkbWluEAISEQoNT3JkaW5hcnlVc2Vy",
            "cxADEhkKFUFkbWluQW5kT3JkaW5hcnlVc2VycxAEEhEKDU93bmVyQW5kQWRt",
            "aW4QBUI5WjdnaXRodWIuY29tL29wZW5pbXNkay9vcGVuaW0tc2RrLWNvcmUv",
            "djMvcHJvdG8vZ28vc2hhcmVkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Openim.Sdk.Shared.GroupStatus), typeof(global::Openim.Sdk.Shared.GroupFilter), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.UserInfo), global::Openim.Sdk.Shared.UserInfo.Parser, new[]{ "UserID", "Nickname", "FaceURL", "Ex", "CreateTime", "AppMangerLevel", "GlobalRecvMsgOpt", "Attached" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.FriendInfo), global::Openim.Sdk.Shared.FriendInfo.Parser, new[]{ "OwnerUserID", "FriendUserID", "Remark", "CreateTime", "AddSource", "OperatorUserID", "Nickname", "FaceURL", "Ex", "AttachedInfo", "IsPinned" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.BlackInfo), global::Openim.Sdk.Shared.BlackInfo.Parser, new[]{ "OwnerUserID", "BlockUserID", "Nickname", "FaceURL", "CreateTime", "AddSource", "OperatorUserID", "Ex", "Attached" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.FriendRequestInfo), global::Openim.Sdk.Shared.FriendRequestInfo.Parser, new[]{ "FromUserID", "FromNickname", "FromFaceURL", "ToUserID", "ToNickname", "ToFaceURL", "HandleResult", "ReqMsg", "CreateTime", "HandlerUserID", "HandleMsg", "HandleTime", "Ex", "Attached" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.GroupInfo), global::Openim.Sdk.Shared.GroupInfo.Parser, new[]{ "GroupID", "GroupName", "Notification", "Introduction", "FaceURL", "OwnerUserID", "CreateTime", "MemberCount", "Ex", "Status", "CreatorUserID", "NeedVerification", "LookMemberInfo", "ApplyMemberFriend", "NotificationUpdateTime", "NotificationUserID", "AttachedInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.GroupMemberInfo), global::Openim.Sdk.Shared.GroupMemberInfo.Parser, new[]{ "GroupID", "UserID", "Nickname", "FaceURL", "RoleLevel", "JoinTime", "JoinSource", "InviterUserID", "MuteEndTime", "OperatorUserID", "Ex", "AttachedInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.GroupRequestInfo), global::Openim.Sdk.Shared.GroupRequestInfo.Parser, new[]{ "GroupID", "GroupName", "Notification", "Introduction", "GroupFaceURL", "CreateTime", "Status", "CreatorUserID", "GroupType", "OwnerUserID", "MemberCount", "UserID", "Nickname", "UserFaceURL", "HandleResult", "ReqMsg", "HandledMsg", "ReqTime", "HandleUserID", "HandledTime", "Ex", "AttachedInfo", "JoinSource", "InviterUserID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openim.Sdk.Shared.Conversation), global::Openim.Sdk.Shared.Conversation.Parser, new[]{ "ConversationID", "ConversationType", "UserID", "GroupID", "ShowName", "FaceURL", "RecvMsgOpt", "UnreadCount", "GroupAtType", "LatestMsg", "LatestMsgSendTime", "DraftText", "DraftTextTime", "IsPinned", "IsPrivateChat", "BurnDuration", "Ex", "MsgDestructTime", "IsMsgDestruct" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GroupStatus {
    [pbr::OriginalName("Default")] Default = 0,
    [pbr::OriginalName("Dismissed")] Dismissed = 2,
  }

  public enum GroupFilter {
    [pbr::OriginalName("All")] All = 0,
    [pbr::OriginalName("Owner")] Owner = 1,
    [pbr::OriginalName("Admin")] Admin = 2,
    [pbr::OriginalName("OrdinaryUsers")] OrdinaryUsers = 3,
    [pbr::OriginalName("AdminAndOrdinaryUsers")] AdminAndOrdinaryUsers = 4,
    [pbr::OriginalName("OwnerAndAdmin")] OwnerAndAdmin = 5,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserInfo : pb::IMessage<UserInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo(UserInfo other) : this() {
      userID_ = other.userID_;
      nickname_ = other.nickname_;
      faceURL_ = other.faceURL_;
      ex_ = other.ex_;
      createTime_ = other.createTime_;
      appMangerLevel_ = other.appMangerLevel_;
      globalRecvMsgOpt_ = other.globalRecvMsgOpt_;
      attached_ = other.attached_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 1;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 3;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 4;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "appMangerLevel" field.</summary>
    public const int AppMangerLevelFieldNumber = 6;
    private int appMangerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AppMangerLevel {
      get { return appMangerLevel_; }
      set {
        appMangerLevel_ = value;
      }
    }

    /// <summary>Field number for the "globalRecvMsgOpt" field.</summary>
    public const int GlobalRecvMsgOptFieldNumber = 7;
    private int globalRecvMsgOpt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GlobalRecvMsgOpt {
      get { return globalRecvMsgOpt_; }
      set {
        globalRecvMsgOpt_ = value;
      }
    }

    /// <summary>Field number for the "attached" field.</summary>
    public const int AttachedFieldNumber = 8;
    private string attached_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Attached {
      get { return attached_; }
      set {
        attached_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserID != other.UserID) return false;
      if (Nickname != other.Nickname) return false;
      if (FaceURL != other.FaceURL) return false;
      if (Ex != other.Ex) return false;
      if (CreateTime != other.CreateTime) return false;
      if (AppMangerLevel != other.AppMangerLevel) return false;
      if (GlobalRecvMsgOpt != other.GlobalRecvMsgOpt) return false;
      if (Attached != other.Attached) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (AppMangerLevel != 0) hash ^= AppMangerLevel.GetHashCode();
      if (GlobalRecvMsgOpt != 0) hash ^= GlobalRecvMsgOpt.GetHashCode();
      if (Attached.Length != 0) hash ^= Attached.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FaceURL);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ex);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      if (AppMangerLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AppMangerLevel);
      }
      if (GlobalRecvMsgOpt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GlobalRecvMsgOpt);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FaceURL);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ex);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      if (AppMangerLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AppMangerLevel);
      }
      if (GlobalRecvMsgOpt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GlobalRecvMsgOpt);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (AppMangerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppMangerLevel);
      }
      if (GlobalRecvMsgOpt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GlobalRecvMsgOpt);
      }
      if (Attached.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attached);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.AppMangerLevel != 0) {
        AppMangerLevel = other.AppMangerLevel;
      }
      if (other.GlobalRecvMsgOpt != 0) {
        GlobalRecvMsgOpt = other.GlobalRecvMsgOpt;
      }
      if (other.Attached.Length != 0) {
        Attached = other.Attached;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            FaceURL = input.ReadString();
            break;
          }
          case 34: {
            Ex = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 48: {
            AppMangerLevel = input.ReadInt32();
            break;
          }
          case 56: {
            GlobalRecvMsgOpt = input.ReadInt32();
            break;
          }
          case 66: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserID = input.ReadString();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            FaceURL = input.ReadString();
            break;
          }
          case 34: {
            Ex = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 48: {
            AppMangerLevel = input.ReadInt32();
            break;
          }
          case 56: {
            GlobalRecvMsgOpt = input.ReadInt32();
            break;
          }
          case 66: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FriendInfo : pb::IMessage<FriendInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendInfo> _parser = new pb::MessageParser<FriendInfo>(() => new FriendInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FriendInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendInfo(FriendInfo other) : this() {
      ownerUserID_ = other.ownerUserID_;
      friendUserID_ = other.friendUserID_;
      remark_ = other.remark_;
      createTime_ = other.createTime_;
      addSource_ = other.addSource_;
      operatorUserID_ = other.operatorUserID_;
      nickname_ = other.nickname_;
      faceURL_ = other.faceURL_;
      ex_ = other.ex_;
      attachedInfo_ = other.attachedInfo_;
      isPinned_ = other.isPinned_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendInfo Clone() {
      return new FriendInfo(this);
    }

    /// <summary>Field number for the "ownerUserID" field.</summary>
    public const int OwnerUserIDFieldNumber = 1;
    private string ownerUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerUserID {
      get { return ownerUserID_; }
      set {
        ownerUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendUserID" field.</summary>
    public const int FriendUserIDFieldNumber = 2;
    private string friendUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FriendUserID {
      get { return friendUserID_; }
      set {
        friendUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 3;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "addSource" field.</summary>
    public const int AddSourceFieldNumber = 5;
    private int addSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddSource {
      get { return addSource_; }
      set {
        addSource_ = value;
      }
    }

    /// <summary>Field number for the "operatorUserID" field.</summary>
    public const int OperatorUserIDFieldNumber = 6;
    private string operatorUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatorUserID {
      get { return operatorUserID_; }
      set {
        operatorUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 7;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 8;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 9;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachedInfo" field.</summary>
    public const int AttachedInfoFieldNumber = 10;
    private string attachedInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AttachedInfo {
      get { return attachedInfo_; }
      set {
        attachedInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPinned" field.</summary>
    public const int IsPinnedFieldNumber = 11;
    private bool isPinned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPinned {
      get { return isPinned_; }
      set {
        isPinned_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FriendInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FriendInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerUserID != other.OwnerUserID) return false;
      if (FriendUserID != other.FriendUserID) return false;
      if (Remark != other.Remark) return false;
      if (CreateTime != other.CreateTime) return false;
      if (AddSource != other.AddSource) return false;
      if (OperatorUserID != other.OperatorUserID) return false;
      if (Nickname != other.Nickname) return false;
      if (FaceURL != other.FaceURL) return false;
      if (Ex != other.Ex) return false;
      if (AttachedInfo != other.AttachedInfo) return false;
      if (IsPinned != other.IsPinned) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerUserID.Length != 0) hash ^= OwnerUserID.GetHashCode();
      if (FriendUserID.Length != 0) hash ^= FriendUserID.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (AddSource != 0) hash ^= AddSource.GetHashCode();
      if (OperatorUserID.Length != 0) hash ^= OperatorUserID.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (AttachedInfo.Length != 0) hash ^= AttachedInfo.GetHashCode();
      if (IsPinned != false) hash ^= IsPinned.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnerUserID);
      }
      if (FriendUserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendUserID);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreateTime);
      }
      if (AddSource != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OperatorUserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FaceURL);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AttachedInfo);
      }
      if (IsPinned != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsPinned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnerUserID);
      }
      if (FriendUserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FriendUserID);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Remark);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreateTime);
      }
      if (AddSource != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OperatorUserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FaceURL);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(AttachedInfo);
      }
      if (IsPinned != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsPinned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OwnerUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerUserID);
      }
      if (FriendUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendUserID);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (AddSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperatorUserID);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (AttachedInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachedInfo);
      }
      if (IsPinned != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FriendInfo other) {
      if (other == null) {
        return;
      }
      if (other.OwnerUserID.Length != 0) {
        OwnerUserID = other.OwnerUserID;
      }
      if (other.FriendUserID.Length != 0) {
        FriendUserID = other.FriendUserID;
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.AddSource != 0) {
        AddSource = other.AddSource;
      }
      if (other.OperatorUserID.Length != 0) {
        OperatorUserID = other.OperatorUserID;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.AttachedInfo.Length != 0) {
        AttachedInfo = other.AttachedInfo;
      }
      if (other.IsPinned != false) {
        IsPinned = other.IsPinned;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 18: {
            FriendUserID = input.ReadString();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
          case 32: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 40: {
            AddSource = input.ReadInt32();
            break;
          }
          case 50: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 58: {
            Nickname = input.ReadString();
            break;
          }
          case 66: {
            FaceURL = input.ReadString();
            break;
          }
          case 74: {
            Ex = input.ReadString();
            break;
          }
          case 82: {
            AttachedInfo = input.ReadString();
            break;
          }
          case 88: {
            IsPinned = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 18: {
            FriendUserID = input.ReadString();
            break;
          }
          case 26: {
            Remark = input.ReadString();
            break;
          }
          case 32: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 40: {
            AddSource = input.ReadInt32();
            break;
          }
          case 50: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 58: {
            Nickname = input.ReadString();
            break;
          }
          case 66: {
            FaceURL = input.ReadString();
            break;
          }
          case 74: {
            Ex = input.ReadString();
            break;
          }
          case 82: {
            AttachedInfo = input.ReadString();
            break;
          }
          case 88: {
            IsPinned = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BlackInfo : pb::IMessage<BlackInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlackInfo> _parser = new pb::MessageParser<BlackInfo>(() => new BlackInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BlackInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlackInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlackInfo(BlackInfo other) : this() {
      ownerUserID_ = other.ownerUserID_;
      blockUserID_ = other.blockUserID_;
      nickname_ = other.nickname_;
      faceURL_ = other.faceURL_;
      createTime_ = other.createTime_;
      addSource_ = other.addSource_;
      operatorUserID_ = other.operatorUserID_;
      ex_ = other.ex_;
      attached_ = other.attached_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BlackInfo Clone() {
      return new BlackInfo(this);
    }

    /// <summary>Field number for the "ownerUserID" field.</summary>
    public const int OwnerUserIDFieldNumber = 1;
    private string ownerUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerUserID {
      get { return ownerUserID_; }
      set {
        ownerUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blockUserID" field.</summary>
    public const int BlockUserIDFieldNumber = 2;
    private string blockUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BlockUserID {
      get { return blockUserID_; }
      set {
        blockUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 4;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "addSource" field.</summary>
    public const int AddSourceFieldNumber = 6;
    private int addSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AddSource {
      get { return addSource_; }
      set {
        addSource_ = value;
      }
    }

    /// <summary>Field number for the "operatorUserID" field.</summary>
    public const int OperatorUserIDFieldNumber = 7;
    private string operatorUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatorUserID {
      get { return operatorUserID_; }
      set {
        operatorUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 8;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attached" field.</summary>
    public const int AttachedFieldNumber = 9;
    private string attached_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Attached {
      get { return attached_; }
      set {
        attached_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BlackInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BlackInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerUserID != other.OwnerUserID) return false;
      if (BlockUserID != other.BlockUserID) return false;
      if (Nickname != other.Nickname) return false;
      if (FaceURL != other.FaceURL) return false;
      if (CreateTime != other.CreateTime) return false;
      if (AddSource != other.AddSource) return false;
      if (OperatorUserID != other.OperatorUserID) return false;
      if (Ex != other.Ex) return false;
      if (Attached != other.Attached) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerUserID.Length != 0) hash ^= OwnerUserID.GetHashCode();
      if (BlockUserID.Length != 0) hash ^= BlockUserID.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (AddSource != 0) hash ^= AddSource.GetHashCode();
      if (OperatorUserID.Length != 0) hash ^= OperatorUserID.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (Attached.Length != 0) hash ^= Attached.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnerUserID);
      }
      if (BlockUserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BlockUserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FaceURL);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      if (AddSource != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OperatorUserID);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Ex);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OwnerUserID);
      }
      if (BlockUserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BlockUserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FaceURL);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      if (AddSource != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(OperatorUserID);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Ex);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OwnerUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerUserID);
      }
      if (BlockUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockUserID);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (AddSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddSource);
      }
      if (OperatorUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperatorUserID);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (Attached.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attached);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BlackInfo other) {
      if (other == null) {
        return;
      }
      if (other.OwnerUserID.Length != 0) {
        OwnerUserID = other.OwnerUserID;
      }
      if (other.BlockUserID.Length != 0) {
        BlockUserID = other.BlockUserID;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.AddSource != 0) {
        AddSource = other.AddSource;
      }
      if (other.OperatorUserID.Length != 0) {
        OperatorUserID = other.OperatorUserID;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.Attached.Length != 0) {
        Attached = other.Attached;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 18: {
            BlockUserID = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            FaceURL = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 48: {
            AddSource = input.ReadInt32();
            break;
          }
          case 58: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 66: {
            Ex = input.ReadString();
            break;
          }
          case 74: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 18: {
            BlockUserID = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            FaceURL = input.ReadString();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 48: {
            AddSource = input.ReadInt32();
            break;
          }
          case 58: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 66: {
            Ex = input.ReadString();
            break;
          }
          case 74: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FriendRequestInfo : pb::IMessage<FriendRequestInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendRequestInfo> _parser = new pb::MessageParser<FriendRequestInfo>(() => new FriendRequestInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FriendRequestInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendRequestInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendRequestInfo(FriendRequestInfo other) : this() {
      fromUserID_ = other.fromUserID_;
      fromNickname_ = other.fromNickname_;
      fromFaceURL_ = other.fromFaceURL_;
      toUserID_ = other.toUserID_;
      toNickname_ = other.toNickname_;
      toFaceURL_ = other.toFaceURL_;
      handleResult_ = other.handleResult_;
      reqMsg_ = other.reqMsg_;
      createTime_ = other.createTime_;
      handlerUserID_ = other.handlerUserID_;
      handleMsg_ = other.handleMsg_;
      handleTime_ = other.handleTime_;
      ex_ = other.ex_;
      attached_ = other.attached_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FriendRequestInfo Clone() {
      return new FriendRequestInfo(this);
    }

    /// <summary>Field number for the "fromUserID" field.</summary>
    public const int FromUserIDFieldNumber = 1;
    private string fromUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FromUserID {
      get { return fromUserID_; }
      set {
        fromUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromNickname" field.</summary>
    public const int FromNicknameFieldNumber = 2;
    private string fromNickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FromNickname {
      get { return fromNickname_; }
      set {
        fromNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fromFaceURL" field.</summary>
    public const int FromFaceURLFieldNumber = 3;
    private string fromFaceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FromFaceURL {
      get { return fromFaceURL_; }
      set {
        fromFaceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toUserID" field.</summary>
    public const int ToUserIDFieldNumber = 4;
    private string toUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ToUserID {
      get { return toUserID_; }
      set {
        toUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toNickname" field.</summary>
    public const int ToNicknameFieldNumber = 5;
    private string toNickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ToNickname {
      get { return toNickname_; }
      set {
        toNickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toFaceURL" field.</summary>
    public const int ToFaceURLFieldNumber = 6;
    private string toFaceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ToFaceURL {
      get { return toFaceURL_; }
      set {
        toFaceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handleResult" field.</summary>
    public const int HandleResultFieldNumber = 7;
    private int handleResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandleResult {
      get { return handleResult_; }
      set {
        handleResult_ = value;
      }
    }

    /// <summary>Field number for the "reqMsg" field.</summary>
    public const int ReqMsgFieldNumber = 8;
    private string reqMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReqMsg {
      get { return reqMsg_; }
      set {
        reqMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "handlerUserID" field.</summary>
    public const int HandlerUserIDFieldNumber = 10;
    private string handlerUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandlerUserID {
      get { return handlerUserID_; }
      set {
        handlerUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handleMsg" field.</summary>
    public const int HandleMsgFieldNumber = 11;
    private string handleMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandleMsg {
      get { return handleMsg_; }
      set {
        handleMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handleTime" field.</summary>
    public const int HandleTimeFieldNumber = 12;
    private long handleTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HandleTime {
      get { return handleTime_; }
      set {
        handleTime_ = value;
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 13;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attached" field.</summary>
    public const int AttachedFieldNumber = 14;
    private string attached_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Attached {
      get { return attached_; }
      set {
        attached_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FriendRequestInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromUserID != other.FromUserID) return false;
      if (FromNickname != other.FromNickname) return false;
      if (FromFaceURL != other.FromFaceURL) return false;
      if (ToUserID != other.ToUserID) return false;
      if (ToNickname != other.ToNickname) return false;
      if (ToFaceURL != other.ToFaceURL) return false;
      if (HandleResult != other.HandleResult) return false;
      if (ReqMsg != other.ReqMsg) return false;
      if (CreateTime != other.CreateTime) return false;
      if (HandlerUserID != other.HandlerUserID) return false;
      if (HandleMsg != other.HandleMsg) return false;
      if (HandleTime != other.HandleTime) return false;
      if (Ex != other.Ex) return false;
      if (Attached != other.Attached) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FromUserID.Length != 0) hash ^= FromUserID.GetHashCode();
      if (FromNickname.Length != 0) hash ^= FromNickname.GetHashCode();
      if (FromFaceURL.Length != 0) hash ^= FromFaceURL.GetHashCode();
      if (ToUserID.Length != 0) hash ^= ToUserID.GetHashCode();
      if (ToNickname.Length != 0) hash ^= ToNickname.GetHashCode();
      if (ToFaceURL.Length != 0) hash ^= ToFaceURL.GetHashCode();
      if (HandleResult != 0) hash ^= HandleResult.GetHashCode();
      if (ReqMsg.Length != 0) hash ^= ReqMsg.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (HandlerUserID.Length != 0) hash ^= HandlerUserID.GetHashCode();
      if (HandleMsg.Length != 0) hash ^= HandleMsg.GetHashCode();
      if (HandleTime != 0L) hash ^= HandleTime.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (Attached.Length != 0) hash ^= Attached.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FromUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FromUserID);
      }
      if (FromNickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromNickname);
      }
      if (FromFaceURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromFaceURL);
      }
      if (ToUserID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ToUserID);
      }
      if (ToNickname.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ToNickname);
      }
      if (ToFaceURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ToFaceURL);
      }
      if (HandleResult != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ReqMsg);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (HandlerUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HandlerUserID);
      }
      if (HandleMsg.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HandleMsg);
      }
      if (HandleTime != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(HandleTime);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ex);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FromUserID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FromUserID);
      }
      if (FromNickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromNickname);
      }
      if (FromFaceURL.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromFaceURL);
      }
      if (ToUserID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ToUserID);
      }
      if (ToNickname.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ToNickname);
      }
      if (ToFaceURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ToFaceURL);
      }
      if (HandleResult != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ReqMsg);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (HandlerUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HandlerUserID);
      }
      if (HandleMsg.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HandleMsg);
      }
      if (HandleTime != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(HandleTime);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Ex);
      }
      if (Attached.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FromUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserID);
      }
      if (FromNickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromNickname);
      }
      if (FromFaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromFaceURL);
      }
      if (ToUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUserID);
      }
      if (ToNickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToNickname);
      }
      if (ToFaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToFaceURL);
      }
      if (HandleResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqMsg);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (HandlerUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerUserID);
      }
      if (HandleMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandleMsg);
      }
      if (HandleTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HandleTime);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (Attached.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attached);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FriendRequestInfo other) {
      if (other == null) {
        return;
      }
      if (other.FromUserID.Length != 0) {
        FromUserID = other.FromUserID;
      }
      if (other.FromNickname.Length != 0) {
        FromNickname = other.FromNickname;
      }
      if (other.FromFaceURL.Length != 0) {
        FromFaceURL = other.FromFaceURL;
      }
      if (other.ToUserID.Length != 0) {
        ToUserID = other.ToUserID;
      }
      if (other.ToNickname.Length != 0) {
        ToNickname = other.ToNickname;
      }
      if (other.ToFaceURL.Length != 0) {
        ToFaceURL = other.ToFaceURL;
      }
      if (other.HandleResult != 0) {
        HandleResult = other.HandleResult;
      }
      if (other.ReqMsg.Length != 0) {
        ReqMsg = other.ReqMsg;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.HandlerUserID.Length != 0) {
        HandlerUserID = other.HandlerUserID;
      }
      if (other.HandleMsg.Length != 0) {
        HandleMsg = other.HandleMsg;
      }
      if (other.HandleTime != 0L) {
        HandleTime = other.HandleTime;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.Attached.Length != 0) {
        Attached = other.Attached;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromUserID = input.ReadString();
            break;
          }
          case 18: {
            FromNickname = input.ReadString();
            break;
          }
          case 26: {
            FromFaceURL = input.ReadString();
            break;
          }
          case 34: {
            ToUserID = input.ReadString();
            break;
          }
          case 42: {
            ToNickname = input.ReadString();
            break;
          }
          case 50: {
            ToFaceURL = input.ReadString();
            break;
          }
          case 56: {
            HandleResult = input.ReadInt32();
            break;
          }
          case 66: {
            ReqMsg = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 82: {
            HandlerUserID = input.ReadString();
            break;
          }
          case 90: {
            HandleMsg = input.ReadString();
            break;
          }
          case 96: {
            HandleTime = input.ReadInt64();
            break;
          }
          case 106: {
            Ex = input.ReadString();
            break;
          }
          case 114: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FromUserID = input.ReadString();
            break;
          }
          case 18: {
            FromNickname = input.ReadString();
            break;
          }
          case 26: {
            FromFaceURL = input.ReadString();
            break;
          }
          case 34: {
            ToUserID = input.ReadString();
            break;
          }
          case 42: {
            ToNickname = input.ReadString();
            break;
          }
          case 50: {
            ToFaceURL = input.ReadString();
            break;
          }
          case 56: {
            HandleResult = input.ReadInt32();
            break;
          }
          case 66: {
            ReqMsg = input.ReadString();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 82: {
            HandlerUserID = input.ReadString();
            break;
          }
          case 90: {
            HandleMsg = input.ReadString();
            break;
          }
          case 96: {
            HandleTime = input.ReadInt64();
            break;
          }
          case 106: {
            Ex = input.ReadString();
            break;
          }
          case 114: {
            Attached = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GroupInfo : pb::IMessage<GroupInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupInfo> _parser = new pb::MessageParser<GroupInfo>(() => new GroupInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupInfo(GroupInfo other) : this() {
      groupID_ = other.groupID_;
      groupName_ = other.groupName_;
      notification_ = other.notification_;
      introduction_ = other.introduction_;
      faceURL_ = other.faceURL_;
      ownerUserID_ = other.ownerUserID_;
      createTime_ = other.createTime_;
      memberCount_ = other.memberCount_;
      ex_ = other.ex_;
      status_ = other.status_;
      creatorUserID_ = other.creatorUserID_;
      needVerification_ = other.needVerification_;
      lookMemberInfo_ = other.lookMemberInfo_;
      applyMemberFriend_ = other.applyMemberFriend_;
      notificationUpdateTime_ = other.notificationUpdateTime_;
      notificationUserID_ = other.notificationUserID_;
      attachedInfo_ = other.attachedInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupInfo Clone() {
      return new GroupInfo(this);
    }

    /// <summary>Field number for the "groupID" field.</summary>
    public const int GroupIDFieldNumber = 1;
    private string groupID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupID {
      get { return groupID_; }
      set {
        groupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 3;
    private string notification_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notification {
      get { return notification_; }
      set {
        notification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "introduction" field.</summary>
    public const int IntroductionFieldNumber = 4;
    private string introduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Introduction {
      get { return introduction_; }
      set {
        introduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 5;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerUserID" field.</summary>
    public const int OwnerUserIDFieldNumber = 6;
    private string ownerUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerUserID {
      get { return ownerUserID_; }
      set {
        ownerUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "memberCount" field.</summary>
    public const int MemberCountFieldNumber = 8;
    private long memberCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemberCount {
      get { return memberCount_; }
      set {
        memberCount_ = value;
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 9;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Openim.Sdk.Shared.GroupStatus status_ = global::Openim.Sdk.Shared.GroupStatus.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Openim.Sdk.Shared.GroupStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "creatorUserID" field.</summary>
    public const int CreatorUserIDFieldNumber = 11;
    private string creatorUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreatorUserID {
      get { return creatorUserID_; }
      set {
        creatorUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "needVerification" field.</summary>
    public const int NeedVerificationFieldNumber = 12;
    private int needVerification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NeedVerification {
      get { return needVerification_; }
      set {
        needVerification_ = value;
      }
    }

    /// <summary>Field number for the "lookMemberInfo" field.</summary>
    public const int LookMemberInfoFieldNumber = 13;
    private int lookMemberInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LookMemberInfo {
      get { return lookMemberInfo_; }
      set {
        lookMemberInfo_ = value;
      }
    }

    /// <summary>Field number for the "applyMemberFriend" field.</summary>
    public const int ApplyMemberFriendFieldNumber = 14;
    private int applyMemberFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ApplyMemberFriend {
      get { return applyMemberFriend_; }
      set {
        applyMemberFriend_ = value;
      }
    }

    /// <summary>Field number for the "notificationUpdateTime" field.</summary>
    public const int NotificationUpdateTimeFieldNumber = 15;
    private long notificationUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NotificationUpdateTime {
      get { return notificationUpdateTime_; }
      set {
        notificationUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "notificationUserID" field.</summary>
    public const int NotificationUserIDFieldNumber = 16;
    private string notificationUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NotificationUserID {
      get { return notificationUserID_; }
      set {
        notificationUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachedInfo" field.</summary>
    public const int AttachedInfoFieldNumber = 17;
    private string attachedInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AttachedInfo {
      get { return attachedInfo_; }
      set {
        attachedInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupID != other.GroupID) return false;
      if (GroupName != other.GroupName) return false;
      if (Notification != other.Notification) return false;
      if (Introduction != other.Introduction) return false;
      if (FaceURL != other.FaceURL) return false;
      if (OwnerUserID != other.OwnerUserID) return false;
      if (CreateTime != other.CreateTime) return false;
      if (MemberCount != other.MemberCount) return false;
      if (Ex != other.Ex) return false;
      if (Status != other.Status) return false;
      if (CreatorUserID != other.CreatorUserID) return false;
      if (NeedVerification != other.NeedVerification) return false;
      if (LookMemberInfo != other.LookMemberInfo) return false;
      if (ApplyMemberFriend != other.ApplyMemberFriend) return false;
      if (NotificationUpdateTime != other.NotificationUpdateTime) return false;
      if (NotificationUserID != other.NotificationUserID) return false;
      if (AttachedInfo != other.AttachedInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupID.Length != 0) hash ^= GroupID.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (Notification.Length != 0) hash ^= Notification.GetHashCode();
      if (Introduction.Length != 0) hash ^= Introduction.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (OwnerUserID.Length != 0) hash ^= OwnerUserID.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (MemberCount != 0L) hash ^= MemberCount.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (Status != global::Openim.Sdk.Shared.GroupStatus.Default) hash ^= Status.GetHashCode();
      if (CreatorUserID.Length != 0) hash ^= CreatorUserID.GetHashCode();
      if (NeedVerification != 0) hash ^= NeedVerification.GetHashCode();
      if (LookMemberInfo != 0) hash ^= LookMemberInfo.GetHashCode();
      if (ApplyMemberFriend != 0) hash ^= ApplyMemberFriend.GetHashCode();
      if (NotificationUpdateTime != 0L) hash ^= NotificationUpdateTime.GetHashCode();
      if (NotificationUserID.Length != 0) hash ^= NotificationUserID.GetHashCode();
      if (AttachedInfo.Length != 0) hash ^= AttachedInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (Notification.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notification);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Introduction);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FaceURL);
      }
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerUserID);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreateTime);
      }
      if (MemberCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MemberCount);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Ex);
      }
      if (Status != global::Openim.Sdk.Shared.GroupStatus.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (CreatorUserID.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatorUserID);
      }
      if (NeedVerification != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(NeedVerification);
      }
      if (LookMemberInfo != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(LookMemberInfo);
      }
      if (ApplyMemberFriend != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ApplyMemberFriend);
      }
      if (NotificationUpdateTime != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(NotificationUpdateTime);
      }
      if (NotificationUserID.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(NotificationUserID);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AttachedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (Notification.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notification);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Introduction);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FaceURL);
      }
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OwnerUserID);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CreateTime);
      }
      if (MemberCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MemberCount);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Ex);
      }
      if (Status != global::Openim.Sdk.Shared.GroupStatus.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (CreatorUserID.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatorUserID);
      }
      if (NeedVerification != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(NeedVerification);
      }
      if (LookMemberInfo != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(LookMemberInfo);
      }
      if (ApplyMemberFriend != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ApplyMemberFriend);
      }
      if (NotificationUpdateTime != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(NotificationUpdateTime);
      }
      if (NotificationUserID.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(NotificationUserID);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AttachedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupID);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (Notification.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notification);
      }
      if (Introduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Introduction);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (OwnerUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerUserID);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (MemberCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberCount);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (Status != global::Openim.Sdk.Shared.GroupStatus.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (CreatorUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatorUserID);
      }
      if (NeedVerification != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NeedVerification);
      }
      if (LookMemberInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LookMemberInfo);
      }
      if (ApplyMemberFriend != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApplyMemberFriend);
      }
      if (NotificationUpdateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NotificationUpdateTime);
      }
      if (NotificationUserID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NotificationUserID);
      }
      if (AttachedInfo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AttachedInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupInfo other) {
      if (other == null) {
        return;
      }
      if (other.GroupID.Length != 0) {
        GroupID = other.GroupID;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.Notification.Length != 0) {
        Notification = other.Notification;
      }
      if (other.Introduction.Length != 0) {
        Introduction = other.Introduction;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.OwnerUserID.Length != 0) {
        OwnerUserID = other.OwnerUserID;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.MemberCount != 0L) {
        MemberCount = other.MemberCount;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.Status != global::Openim.Sdk.Shared.GroupStatus.Default) {
        Status = other.Status;
      }
      if (other.CreatorUserID.Length != 0) {
        CreatorUserID = other.CreatorUserID;
      }
      if (other.NeedVerification != 0) {
        NeedVerification = other.NeedVerification;
      }
      if (other.LookMemberInfo != 0) {
        LookMemberInfo = other.LookMemberInfo;
      }
      if (other.ApplyMemberFriend != 0) {
        ApplyMemberFriend = other.ApplyMemberFriend;
      }
      if (other.NotificationUpdateTime != 0L) {
        NotificationUpdateTime = other.NotificationUpdateTime;
      }
      if (other.NotificationUserID.Length != 0) {
        NotificationUserID = other.NotificationUserID;
      }
      if (other.AttachedInfo.Length != 0) {
        AttachedInfo = other.AttachedInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Notification = input.ReadString();
            break;
          }
          case 34: {
            Introduction = input.ReadString();
            break;
          }
          case 42: {
            FaceURL = input.ReadString();
            break;
          }
          case 50: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 56: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 64: {
            MemberCount = input.ReadInt64();
            break;
          }
          case 74: {
            Ex = input.ReadString();
            break;
          }
          case 80: {
            Status = (global::Openim.Sdk.Shared.GroupStatus) input.ReadEnum();
            break;
          }
          case 90: {
            CreatorUserID = input.ReadString();
            break;
          }
          case 96: {
            NeedVerification = input.ReadInt32();
            break;
          }
          case 104: {
            LookMemberInfo = input.ReadInt32();
            break;
          }
          case 112: {
            ApplyMemberFriend = input.ReadInt32();
            break;
          }
          case 120: {
            NotificationUpdateTime = input.ReadInt64();
            break;
          }
          case 130: {
            NotificationUserID = input.ReadString();
            break;
          }
          case 138: {
            AttachedInfo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Notification = input.ReadString();
            break;
          }
          case 34: {
            Introduction = input.ReadString();
            break;
          }
          case 42: {
            FaceURL = input.ReadString();
            break;
          }
          case 50: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 56: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 64: {
            MemberCount = input.ReadInt64();
            break;
          }
          case 74: {
            Ex = input.ReadString();
            break;
          }
          case 80: {
            Status = (global::Openim.Sdk.Shared.GroupStatus) input.ReadEnum();
            break;
          }
          case 90: {
            CreatorUserID = input.ReadString();
            break;
          }
          case 96: {
            NeedVerification = input.ReadInt32();
            break;
          }
          case 104: {
            LookMemberInfo = input.ReadInt32();
            break;
          }
          case 112: {
            ApplyMemberFriend = input.ReadInt32();
            break;
          }
          case 120: {
            NotificationUpdateTime = input.ReadInt64();
            break;
          }
          case 130: {
            NotificationUserID = input.ReadString();
            break;
          }
          case 138: {
            AttachedInfo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GroupMemberInfo : pb::IMessage<GroupMemberInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMemberInfo> _parser = new pb::MessageParser<GroupMemberInfo>(() => new GroupMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMemberInfo(GroupMemberInfo other) : this() {
      groupID_ = other.groupID_;
      userID_ = other.userID_;
      nickname_ = other.nickname_;
      faceURL_ = other.faceURL_;
      roleLevel_ = other.roleLevel_;
      joinTime_ = other.joinTime_;
      joinSource_ = other.joinSource_;
      inviterUserID_ = other.inviterUserID_;
      muteEndTime_ = other.muteEndTime_;
      operatorUserID_ = other.operatorUserID_;
      ex_ = other.ex_;
      attachedInfo_ = other.attachedInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupMemberInfo Clone() {
      return new GroupMemberInfo(this);
    }

    /// <summary>Field number for the "groupID" field.</summary>
    public const int GroupIDFieldNumber = 1;
    private string groupID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupID {
      get { return groupID_; }
      set {
        groupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 2;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 4;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roleLevel" field.</summary>
    public const int RoleLevelFieldNumber = 5;
    private int roleLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RoleLevel {
      get { return roleLevel_; }
      set {
        roleLevel_ = value;
      }
    }

    /// <summary>Field number for the "joinTime" field.</summary>
    public const int JoinTimeFieldNumber = 6;
    private long joinTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long JoinTime {
      get { return joinTime_; }
      set {
        joinTime_ = value;
      }
    }

    /// <summary>Field number for the "joinSource" field.</summary>
    public const int JoinSourceFieldNumber = 7;
    private int joinSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinSource {
      get { return joinSource_; }
      set {
        joinSource_ = value;
      }
    }

    /// <summary>Field number for the "inviterUserID" field.</summary>
    public const int InviterUserIDFieldNumber = 8;
    private string inviterUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InviterUserID {
      get { return inviterUserID_; }
      set {
        inviterUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "muteEndTime" field.</summary>
    public const int MuteEndTimeFieldNumber = 9;
    private long muteEndTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MuteEndTime {
      get { return muteEndTime_; }
      set {
        muteEndTime_ = value;
      }
    }

    /// <summary>Field number for the "operatorUserID" field.</summary>
    public const int OperatorUserIDFieldNumber = 10;
    private string operatorUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatorUserID {
      get { return operatorUserID_; }
      set {
        operatorUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 11;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachedInfo" field.</summary>
    public const int AttachedInfoFieldNumber = 12;
    private string attachedInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AttachedInfo {
      get { return attachedInfo_; }
      set {
        attachedInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupID != other.GroupID) return false;
      if (UserID != other.UserID) return false;
      if (Nickname != other.Nickname) return false;
      if (FaceURL != other.FaceURL) return false;
      if (RoleLevel != other.RoleLevel) return false;
      if (JoinTime != other.JoinTime) return false;
      if (JoinSource != other.JoinSource) return false;
      if (InviterUserID != other.InviterUserID) return false;
      if (MuteEndTime != other.MuteEndTime) return false;
      if (OperatorUserID != other.OperatorUserID) return false;
      if (Ex != other.Ex) return false;
      if (AttachedInfo != other.AttachedInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupID.Length != 0) hash ^= GroupID.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (RoleLevel != 0) hash ^= RoleLevel.GetHashCode();
      if (JoinTime != 0L) hash ^= JoinTime.GetHashCode();
      if (JoinSource != 0) hash ^= JoinSource.GetHashCode();
      if (InviterUserID.Length != 0) hash ^= InviterUserID.GetHashCode();
      if (MuteEndTime != 0L) hash ^= MuteEndTime.GetHashCode();
      if (OperatorUserID.Length != 0) hash ^= OperatorUserID.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (AttachedInfo.Length != 0) hash ^= AttachedInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FaceURL);
      }
      if (RoleLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoleLevel);
      }
      if (JoinTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(JoinTime);
      }
      if (JoinSource != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InviterUserID);
      }
      if (MuteEndTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MuteEndTime);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OperatorUserID);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AttachedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FaceURL);
      }
      if (RoleLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RoleLevel);
      }
      if (JoinTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(JoinTime);
      }
      if (JoinSource != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InviterUserID);
      }
      if (MuteEndTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(MuteEndTime);
      }
      if (OperatorUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OperatorUserID);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AttachedInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupID);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (RoleLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleLevel);
      }
      if (JoinTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(JoinTime);
      }
      if (JoinSource != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InviterUserID);
      }
      if (MuteEndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MuteEndTime);
      }
      if (OperatorUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperatorUserID);
      }
      if (Ex.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (AttachedInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttachedInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.GroupID.Length != 0) {
        GroupID = other.GroupID;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.RoleLevel != 0) {
        RoleLevel = other.RoleLevel;
      }
      if (other.JoinTime != 0L) {
        JoinTime = other.JoinTime;
      }
      if (other.JoinSource != 0) {
        JoinSource = other.JoinSource;
      }
      if (other.InviterUserID.Length != 0) {
        InviterUserID = other.InviterUserID;
      }
      if (other.MuteEndTime != 0L) {
        MuteEndTime = other.MuteEndTime;
      }
      if (other.OperatorUserID.Length != 0) {
        OperatorUserID = other.OperatorUserID;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.AttachedInfo.Length != 0) {
        AttachedInfo = other.AttachedInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            FaceURL = input.ReadString();
            break;
          }
          case 40: {
            RoleLevel = input.ReadInt32();
            break;
          }
          case 48: {
            JoinTime = input.ReadInt64();
            break;
          }
          case 56: {
            JoinSource = input.ReadInt32();
            break;
          }
          case 66: {
            InviterUserID = input.ReadString();
            break;
          }
          case 72: {
            MuteEndTime = input.ReadInt64();
            break;
          }
          case 82: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 90: {
            Ex = input.ReadString();
            break;
          }
          case 98: {
            AttachedInfo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            UserID = input.ReadString();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 34: {
            FaceURL = input.ReadString();
            break;
          }
          case 40: {
            RoleLevel = input.ReadInt32();
            break;
          }
          case 48: {
            JoinTime = input.ReadInt64();
            break;
          }
          case 56: {
            JoinSource = input.ReadInt32();
            break;
          }
          case 66: {
            InviterUserID = input.ReadString();
            break;
          }
          case 72: {
            MuteEndTime = input.ReadInt64();
            break;
          }
          case 82: {
            OperatorUserID = input.ReadString();
            break;
          }
          case 90: {
            Ex = input.ReadString();
            break;
          }
          case 98: {
            AttachedInfo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GroupRequestInfo : pb::IMessage<GroupRequestInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupRequestInfo> _parser = new pb::MessageParser<GroupRequestInfo>(() => new GroupRequestInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupRequestInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupRequestInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupRequestInfo(GroupRequestInfo other) : this() {
      groupID_ = other.groupID_;
      groupName_ = other.groupName_;
      notification_ = other.notification_;
      introduction_ = other.introduction_;
      groupFaceURL_ = other.groupFaceURL_;
      createTime_ = other.createTime_;
      status_ = other.status_;
      creatorUserID_ = other.creatorUserID_;
      groupType_ = other.groupType_;
      ownerUserID_ = other.ownerUserID_;
      memberCount_ = other.memberCount_;
      userID_ = other.userID_;
      nickname_ = other.nickname_;
      userFaceURL_ = other.userFaceURL_;
      handleResult_ = other.handleResult_;
      reqMsg_ = other.reqMsg_;
      handledMsg_ = other.handledMsg_;
      reqTime_ = other.reqTime_;
      handleUserID_ = other.handleUserID_;
      handledTime_ = other.handledTime_;
      ex_ = other.ex_;
      attachedInfo_ = other.attachedInfo_;
      joinSource_ = other.joinSource_;
      inviterUserID_ = other.inviterUserID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupRequestInfo Clone() {
      return new GroupRequestInfo(this);
    }

    /// <summary>Field number for the "groupID" field.</summary>
    public const int GroupIDFieldNumber = 1;
    private string groupID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupID {
      get { return groupID_; }
      set {
        groupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 3;
    private string notification_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notification {
      get { return notification_; }
      set {
        notification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "introduction" field.</summary>
    public const int IntroductionFieldNumber = 4;
    private string introduction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Introduction {
      get { return introduction_; }
      set {
        introduction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupFaceURL" field.</summary>
    public const int GroupFaceURLFieldNumber = 5;
    private string groupFaceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupFaceURL {
      get { return groupFaceURL_; }
      set {
        groupFaceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "creatorUserID" field.</summary>
    public const int CreatorUserIDFieldNumber = 8;
    private string creatorUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CreatorUserID {
      get { return creatorUserID_; }
      set {
        creatorUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupType" field.</summary>
    public const int GroupTypeFieldNumber = 9;
    private int groupType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupType {
      get { return groupType_; }
      set {
        groupType_ = value;
      }
    }

    /// <summary>Field number for the "ownerUserID" field.</summary>
    public const int OwnerUserIDFieldNumber = 10;
    private string ownerUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OwnerUserID {
      get { return ownerUserID_; }
      set {
        ownerUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberCount" field.</summary>
    public const int MemberCountFieldNumber = 11;
    private int memberCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MemberCount {
      get { return memberCount_; }
      set {
        memberCount_ = value;
      }
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 12;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 13;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userFaceURL" field.</summary>
    public const int UserFaceURLFieldNumber = 14;
    private string userFaceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserFaceURL {
      get { return userFaceURL_; }
      set {
        userFaceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handleResult" field.</summary>
    public const int HandleResultFieldNumber = 15;
    private int handleResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandleResult {
      get { return handleResult_; }
      set {
        handleResult_ = value;
      }
    }

    /// <summary>Field number for the "reqMsg" field.</summary>
    public const int ReqMsgFieldNumber = 16;
    private string reqMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReqMsg {
      get { return reqMsg_; }
      set {
        reqMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handledMsg" field.</summary>
    public const int HandledMsgFieldNumber = 17;
    private string handledMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandledMsg {
      get { return handledMsg_; }
      set {
        handledMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reqTime" field.</summary>
    public const int ReqTimeFieldNumber = 18;
    private long reqTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReqTime {
      get { return reqTime_; }
      set {
        reqTime_ = value;
      }
    }

    /// <summary>Field number for the "handleUserID" field.</summary>
    public const int HandleUserIDFieldNumber = 19;
    private string handleUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandleUserID {
      get { return handleUserID_; }
      set {
        handleUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "handledTime" field.</summary>
    public const int HandledTimeFieldNumber = 20;
    private long handledTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HandledTime {
      get { return handledTime_; }
      set {
        handledTime_ = value;
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 21;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attachedInfo" field.</summary>
    public const int AttachedInfoFieldNumber = 22;
    private string attachedInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AttachedInfo {
      get { return attachedInfo_; }
      set {
        attachedInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "joinSource" field.</summary>
    public const int JoinSourceFieldNumber = 23;
    private int joinSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int JoinSource {
      get { return joinSource_; }
      set {
        joinSource_ = value;
      }
    }

    /// <summary>Field number for the "inviterUserID" field.</summary>
    public const int InviterUserIDFieldNumber = 24;
    private string inviterUserID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InviterUserID {
      get { return inviterUserID_; }
      set {
        inviterUserID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupRequestInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupRequestInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupID != other.GroupID) return false;
      if (GroupName != other.GroupName) return false;
      if (Notification != other.Notification) return false;
      if (Introduction != other.Introduction) return false;
      if (GroupFaceURL != other.GroupFaceURL) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Status != other.Status) return false;
      if (CreatorUserID != other.CreatorUserID) return false;
      if (GroupType != other.GroupType) return false;
      if (OwnerUserID != other.OwnerUserID) return false;
      if (MemberCount != other.MemberCount) return false;
      if (UserID != other.UserID) return false;
      if (Nickname != other.Nickname) return false;
      if (UserFaceURL != other.UserFaceURL) return false;
      if (HandleResult != other.HandleResult) return false;
      if (ReqMsg != other.ReqMsg) return false;
      if (HandledMsg != other.HandledMsg) return false;
      if (ReqTime != other.ReqTime) return false;
      if (HandleUserID != other.HandleUserID) return false;
      if (HandledTime != other.HandledTime) return false;
      if (Ex != other.Ex) return false;
      if (AttachedInfo != other.AttachedInfo) return false;
      if (JoinSource != other.JoinSource) return false;
      if (InviterUserID != other.InviterUserID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupID.Length != 0) hash ^= GroupID.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      if (Notification.Length != 0) hash ^= Notification.GetHashCode();
      if (Introduction.Length != 0) hash ^= Introduction.GetHashCode();
      if (GroupFaceURL.Length != 0) hash ^= GroupFaceURL.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (CreatorUserID.Length != 0) hash ^= CreatorUserID.GetHashCode();
      if (GroupType != 0) hash ^= GroupType.GetHashCode();
      if (OwnerUserID.Length != 0) hash ^= OwnerUserID.GetHashCode();
      if (MemberCount != 0) hash ^= MemberCount.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (UserFaceURL.Length != 0) hash ^= UserFaceURL.GetHashCode();
      if (HandleResult != 0) hash ^= HandleResult.GetHashCode();
      if (ReqMsg.Length != 0) hash ^= ReqMsg.GetHashCode();
      if (HandledMsg.Length != 0) hash ^= HandledMsg.GetHashCode();
      if (ReqTime != 0L) hash ^= ReqTime.GetHashCode();
      if (HandleUserID.Length != 0) hash ^= HandleUserID.GetHashCode();
      if (HandledTime != 0L) hash ^= HandledTime.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (AttachedInfo.Length != 0) hash ^= AttachedInfo.GetHashCode();
      if (JoinSource != 0) hash ^= JoinSource.GetHashCode();
      if (InviterUserID.Length != 0) hash ^= InviterUserID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (Notification.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notification);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Introduction);
      }
      if (GroupFaceURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupFaceURL);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTime);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Status);
      }
      if (CreatorUserID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatorUserID);
      }
      if (GroupType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupType);
      }
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OwnerUserID);
      }
      if (MemberCount != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MemberCount);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Nickname);
      }
      if (UserFaceURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserFaceURL);
      }
      if (HandleResult != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ReqMsg);
      }
      if (HandledMsg.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(HandledMsg);
      }
      if (ReqTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(ReqTime);
      }
      if (HandleUserID.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(HandleUserID);
      }
      if (HandledTime != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(HandledTime);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AttachedInfo);
      }
      if (JoinSource != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(InviterUserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupID);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
      if (Notification.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Notification);
      }
      if (Introduction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Introduction);
      }
      if (GroupFaceURL.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupFaceURL);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTime);
      }
      if (Status != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Status);
      }
      if (CreatorUserID.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatorUserID);
      }
      if (GroupType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupType);
      }
      if (OwnerUserID.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OwnerUserID);
      }
      if (MemberCount != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MemberCount);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(UserID);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Nickname);
      }
      if (UserFaceURL.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserFaceURL);
      }
      if (HandleResult != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ReqMsg);
      }
      if (HandledMsg.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(HandledMsg);
      }
      if (ReqTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(ReqTime);
      }
      if (HandleUserID.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(HandleUserID);
      }
      if (HandledTime != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(HandledTime);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Ex);
      }
      if (AttachedInfo.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(AttachedInfo);
      }
      if (JoinSource != 0) {
        output.WriteRawTag(184, 1);
        output.WriteInt32(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(InviterUserID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupID);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      if (Notification.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notification);
      }
      if (Introduction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Introduction);
      }
      if (GroupFaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupFaceURL);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (CreatorUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatorUserID);
      }
      if (GroupType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupType);
      }
      if (OwnerUserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerUserID);
      }
      if (MemberCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemberCount);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (UserFaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserFaceURL);
      }
      if (HandleResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandleResult);
      }
      if (ReqMsg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReqMsg);
      }
      if (HandledMsg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HandledMsg);
      }
      if (ReqTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ReqTime);
      }
      if (HandleUserID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HandleUserID);
      }
      if (HandledTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HandledTime);
      }
      if (Ex.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (AttachedInfo.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AttachedInfo);
      }
      if (JoinSource != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(JoinSource);
      }
      if (InviterUserID.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InviterUserID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupRequestInfo other) {
      if (other == null) {
        return;
      }
      if (other.GroupID.Length != 0) {
        GroupID = other.GroupID;
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
      if (other.Notification.Length != 0) {
        Notification = other.Notification;
      }
      if (other.Introduction.Length != 0) {
        Introduction = other.Introduction;
      }
      if (other.GroupFaceURL.Length != 0) {
        GroupFaceURL = other.GroupFaceURL;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.CreatorUserID.Length != 0) {
        CreatorUserID = other.CreatorUserID;
      }
      if (other.GroupType != 0) {
        GroupType = other.GroupType;
      }
      if (other.OwnerUserID.Length != 0) {
        OwnerUserID = other.OwnerUserID;
      }
      if (other.MemberCount != 0) {
        MemberCount = other.MemberCount;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.UserFaceURL.Length != 0) {
        UserFaceURL = other.UserFaceURL;
      }
      if (other.HandleResult != 0) {
        HandleResult = other.HandleResult;
      }
      if (other.ReqMsg.Length != 0) {
        ReqMsg = other.ReqMsg;
      }
      if (other.HandledMsg.Length != 0) {
        HandledMsg = other.HandledMsg;
      }
      if (other.ReqTime != 0L) {
        ReqTime = other.ReqTime;
      }
      if (other.HandleUserID.Length != 0) {
        HandleUserID = other.HandleUserID;
      }
      if (other.HandledTime != 0L) {
        HandledTime = other.HandledTime;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.AttachedInfo.Length != 0) {
        AttachedInfo = other.AttachedInfo;
      }
      if (other.JoinSource != 0) {
        JoinSource = other.JoinSource;
      }
      if (other.InviterUserID.Length != 0) {
        InviterUserID = other.InviterUserID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Notification = input.ReadString();
            break;
          }
          case 34: {
            Introduction = input.ReadString();
            break;
          }
          case 42: {
            GroupFaceURL = input.ReadString();
            break;
          }
          case 48: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 56: {
            Status = input.ReadInt32();
            break;
          }
          case 66: {
            CreatorUserID = input.ReadString();
            break;
          }
          case 72: {
            GroupType = input.ReadInt32();
            break;
          }
          case 82: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 88: {
            MemberCount = input.ReadInt32();
            break;
          }
          case 98: {
            UserID = input.ReadString();
            break;
          }
          case 106: {
            Nickname = input.ReadString();
            break;
          }
          case 114: {
            UserFaceURL = input.ReadString();
            break;
          }
          case 120: {
            HandleResult = input.ReadInt32();
            break;
          }
          case 130: {
            ReqMsg = input.ReadString();
            break;
          }
          case 138: {
            HandledMsg = input.ReadString();
            break;
          }
          case 144: {
            ReqTime = input.ReadInt64();
            break;
          }
          case 154: {
            HandleUserID = input.ReadString();
            break;
          }
          case 160: {
            HandledTime = input.ReadInt64();
            break;
          }
          case 170: {
            Ex = input.ReadString();
            break;
          }
          case 178: {
            AttachedInfo = input.ReadString();
            break;
          }
          case 184: {
            JoinSource = input.ReadInt32();
            break;
          }
          case 194: {
            InviterUserID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GroupID = input.ReadString();
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
          case 26: {
            Notification = input.ReadString();
            break;
          }
          case 34: {
            Introduction = input.ReadString();
            break;
          }
          case 42: {
            GroupFaceURL = input.ReadString();
            break;
          }
          case 48: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 56: {
            Status = input.ReadInt32();
            break;
          }
          case 66: {
            CreatorUserID = input.ReadString();
            break;
          }
          case 72: {
            GroupType = input.ReadInt32();
            break;
          }
          case 82: {
            OwnerUserID = input.ReadString();
            break;
          }
          case 88: {
            MemberCount = input.ReadInt32();
            break;
          }
          case 98: {
            UserID = input.ReadString();
            break;
          }
          case 106: {
            Nickname = input.ReadString();
            break;
          }
          case 114: {
            UserFaceURL = input.ReadString();
            break;
          }
          case 120: {
            HandleResult = input.ReadInt32();
            break;
          }
          case 130: {
            ReqMsg = input.ReadString();
            break;
          }
          case 138: {
            HandledMsg = input.ReadString();
            break;
          }
          case 144: {
            ReqTime = input.ReadInt64();
            break;
          }
          case 154: {
            HandleUserID = input.ReadString();
            break;
          }
          case 160: {
            HandledTime = input.ReadInt64();
            break;
          }
          case 170: {
            Ex = input.ReadString();
            break;
          }
          case 178: {
            AttachedInfo = input.ReadString();
            break;
          }
          case 184: {
            JoinSource = input.ReadInt32();
            break;
          }
          case 194: {
            InviterUserID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Conversation : pb::IMessage<Conversation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Conversation> _parser = new pb::MessageParser<Conversation>(() => new Conversation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Conversation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openim.Sdk.Shared.SharedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversation(Conversation other) : this() {
      conversationID_ = other.conversationID_;
      conversationType_ = other.conversationType_;
      userID_ = other.userID_;
      groupID_ = other.groupID_;
      showName_ = other.showName_;
      faceURL_ = other.faceURL_;
      recvMsgOpt_ = other.recvMsgOpt_;
      unreadCount_ = other.unreadCount_;
      groupAtType_ = other.groupAtType_;
      latestMsg_ = other.latestMsg_;
      latestMsgSendTime_ = other.latestMsgSendTime_;
      draftText_ = other.draftText_;
      draftTextTime_ = other.draftTextTime_;
      isPinned_ = other.isPinned_;
      isPrivateChat_ = other.isPrivateChat_;
      burnDuration_ = other.burnDuration_;
      ex_ = other.ex_;
      msgDestructTime_ = other.msgDestructTime_;
      isMsgDestruct_ = other.isMsgDestruct_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversation Clone() {
      return new Conversation(this);
    }

    /// <summary>Field number for the "conversationID" field.</summary>
    public const int ConversationIDFieldNumber = 1;
    private string conversationID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ConversationID {
      get { return conversationID_; }
      set {
        conversationID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conversationType" field.</summary>
    public const int ConversationTypeFieldNumber = 2;
    private int conversationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConversationType {
      get { return conversationType_; }
      set {
        conversationType_ = value;
      }
    }

    /// <summary>Field number for the "userID" field.</summary>
    public const int UserIDFieldNumber = 3;
    private string userID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserID {
      get { return userID_; }
      set {
        userID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "groupID" field.</summary>
    public const int GroupIDFieldNumber = 4;
    private string groupID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GroupID {
      get { return groupID_; }
      set {
        groupID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "showName" field.</summary>
    public const int ShowNameFieldNumber = 5;
    private string showName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShowName {
      get { return showName_; }
      set {
        showName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "faceURL" field.</summary>
    public const int FaceURLFieldNumber = 6;
    private string faceURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FaceURL {
      get { return faceURL_; }
      set {
        faceURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recvMsgOpt" field.</summary>
    public const int RecvMsgOptFieldNumber = 7;
    private int recvMsgOpt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RecvMsgOpt {
      get { return recvMsgOpt_; }
      set {
        recvMsgOpt_ = value;
      }
    }

    /// <summary>Field number for the "unreadCount" field.</summary>
    public const int UnreadCountFieldNumber = 8;
    private int unreadCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UnreadCount {
      get { return unreadCount_; }
      set {
        unreadCount_ = value;
      }
    }

    /// <summary>Field number for the "groupAtType" field.</summary>
    public const int GroupAtTypeFieldNumber = 9;
    private int groupAtType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupAtType {
      get { return groupAtType_; }
      set {
        groupAtType_ = value;
      }
    }

    /// <summary>Field number for the "latestMsg" field.</summary>
    public const int LatestMsgFieldNumber = 10;
    private string latestMsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LatestMsg {
      get { return latestMsg_; }
      set {
        latestMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latestMsgSendTime" field.</summary>
    public const int LatestMsgSendTimeFieldNumber = 11;
    private long latestMsgSendTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LatestMsgSendTime {
      get { return latestMsgSendTime_; }
      set {
        latestMsgSendTime_ = value;
      }
    }

    /// <summary>Field number for the "draftText" field.</summary>
    public const int DraftTextFieldNumber = 12;
    private string draftText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DraftText {
      get { return draftText_; }
      set {
        draftText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "draftTextTime" field.</summary>
    public const int DraftTextTimeFieldNumber = 13;
    private long draftTextTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DraftTextTime {
      get { return draftTextTime_; }
      set {
        draftTextTime_ = value;
      }
    }

    /// <summary>Field number for the "isPinned" field.</summary>
    public const int IsPinnedFieldNumber = 14;
    private bool isPinned_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPinned {
      get { return isPinned_; }
      set {
        isPinned_ = value;
      }
    }

    /// <summary>Field number for the "isPrivateChat" field.</summary>
    public const int IsPrivateChatFieldNumber = 15;
    private bool isPrivateChat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsPrivateChat {
      get { return isPrivateChat_; }
      set {
        isPrivateChat_ = value;
      }
    }

    /// <summary>Field number for the "burnDuration" field.</summary>
    public const int BurnDurationFieldNumber = 16;
    private int burnDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BurnDuration {
      get { return burnDuration_; }
      set {
        burnDuration_ = value;
      }
    }

    /// <summary>Field number for the "ex" field.</summary>
    public const int ExFieldNumber = 17;
    private string ex_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ex {
      get { return ex_; }
      set {
        ex_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msgDestructTime" field.</summary>
    public const int MsgDestructTimeFieldNumber = 18;
    private long msgDestructTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgDestructTime {
      get { return msgDestructTime_; }
      set {
        msgDestructTime_ = value;
      }
    }

    /// <summary>Field number for the "isMsgDestruct" field.</summary>
    public const int IsMsgDestructFieldNumber = 19;
    private bool isMsgDestruct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMsgDestruct {
      get { return isMsgDestruct_; }
      set {
        isMsgDestruct_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Conversation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Conversation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConversationID != other.ConversationID) return false;
      if (ConversationType != other.ConversationType) return false;
      if (UserID != other.UserID) return false;
      if (GroupID != other.GroupID) return false;
      if (ShowName != other.ShowName) return false;
      if (FaceURL != other.FaceURL) return false;
      if (RecvMsgOpt != other.RecvMsgOpt) return false;
      if (UnreadCount != other.UnreadCount) return false;
      if (GroupAtType != other.GroupAtType) return false;
      if (LatestMsg != other.LatestMsg) return false;
      if (LatestMsgSendTime != other.LatestMsgSendTime) return false;
      if (DraftText != other.DraftText) return false;
      if (DraftTextTime != other.DraftTextTime) return false;
      if (IsPinned != other.IsPinned) return false;
      if (IsPrivateChat != other.IsPrivateChat) return false;
      if (BurnDuration != other.BurnDuration) return false;
      if (Ex != other.Ex) return false;
      if (MsgDestructTime != other.MsgDestructTime) return false;
      if (IsMsgDestruct != other.IsMsgDestruct) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ConversationID.Length != 0) hash ^= ConversationID.GetHashCode();
      if (ConversationType != 0) hash ^= ConversationType.GetHashCode();
      if (UserID.Length != 0) hash ^= UserID.GetHashCode();
      if (GroupID.Length != 0) hash ^= GroupID.GetHashCode();
      if (ShowName.Length != 0) hash ^= ShowName.GetHashCode();
      if (FaceURL.Length != 0) hash ^= FaceURL.GetHashCode();
      if (RecvMsgOpt != 0) hash ^= RecvMsgOpt.GetHashCode();
      if (UnreadCount != 0) hash ^= UnreadCount.GetHashCode();
      if (GroupAtType != 0) hash ^= GroupAtType.GetHashCode();
      if (LatestMsg.Length != 0) hash ^= LatestMsg.GetHashCode();
      if (LatestMsgSendTime != 0L) hash ^= LatestMsgSendTime.GetHashCode();
      if (DraftText.Length != 0) hash ^= DraftText.GetHashCode();
      if (DraftTextTime != 0L) hash ^= DraftTextTime.GetHashCode();
      if (IsPinned != false) hash ^= IsPinned.GetHashCode();
      if (IsPrivateChat != false) hash ^= IsPrivateChat.GetHashCode();
      if (BurnDuration != 0) hash ^= BurnDuration.GetHashCode();
      if (Ex.Length != 0) hash ^= Ex.GetHashCode();
      if (MsgDestructTime != 0L) hash ^= MsgDestructTime.GetHashCode();
      if (IsMsgDestruct != false) hash ^= IsMsgDestruct.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConversationID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConversationID);
      }
      if (ConversationType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConversationType);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserID);
      }
      if (GroupID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupID);
      }
      if (ShowName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShowName);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FaceURL);
      }
      if (RecvMsgOpt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RecvMsgOpt);
      }
      if (UnreadCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UnreadCount);
      }
      if (GroupAtType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupAtType);
      }
      if (LatestMsg.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LatestMsg);
      }
      if (LatestMsgSendTime != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(LatestMsgSendTime);
      }
      if (DraftText.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DraftText);
      }
      if (DraftTextTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(DraftTextTime);
      }
      if (IsPinned != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsPinned);
      }
      if (IsPrivateChat != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsPrivateChat);
      }
      if (BurnDuration != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BurnDuration);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ex);
      }
      if (MsgDestructTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(MsgDestructTime);
      }
      if (IsMsgDestruct != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsMsgDestruct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConversationID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConversationID);
      }
      if (ConversationType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ConversationType);
      }
      if (UserID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserID);
      }
      if (GroupID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GroupID);
      }
      if (ShowName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShowName);
      }
      if (FaceURL.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FaceURL);
      }
      if (RecvMsgOpt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RecvMsgOpt);
      }
      if (UnreadCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UnreadCount);
      }
      if (GroupAtType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GroupAtType);
      }
      if (LatestMsg.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LatestMsg);
      }
      if (LatestMsgSendTime != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(LatestMsgSendTime);
      }
      if (DraftText.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DraftText);
      }
      if (DraftTextTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(DraftTextTime);
      }
      if (IsPinned != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsPinned);
      }
      if (IsPrivateChat != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsPrivateChat);
      }
      if (BurnDuration != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BurnDuration);
      }
      if (Ex.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ex);
      }
      if (MsgDestructTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(MsgDestructTime);
      }
      if (IsMsgDestruct != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsMsgDestruct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ConversationID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConversationID);
      }
      if (ConversationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConversationType);
      }
      if (UserID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserID);
      }
      if (GroupID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupID);
      }
      if (ShowName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowName);
      }
      if (FaceURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FaceURL);
      }
      if (RecvMsgOpt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecvMsgOpt);
      }
      if (UnreadCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnreadCount);
      }
      if (GroupAtType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupAtType);
      }
      if (LatestMsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LatestMsg);
      }
      if (LatestMsgSendTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestMsgSendTime);
      }
      if (DraftText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DraftText);
      }
      if (DraftTextTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DraftTextTime);
      }
      if (IsPinned != false) {
        size += 1 + 1;
      }
      if (IsPrivateChat != false) {
        size += 1 + 1;
      }
      if (BurnDuration != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BurnDuration);
      }
      if (Ex.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ex);
      }
      if (MsgDestructTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MsgDestructTime);
      }
      if (IsMsgDestruct != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Conversation other) {
      if (other == null) {
        return;
      }
      if (other.ConversationID.Length != 0) {
        ConversationID = other.ConversationID;
      }
      if (other.ConversationType != 0) {
        ConversationType = other.ConversationType;
      }
      if (other.UserID.Length != 0) {
        UserID = other.UserID;
      }
      if (other.GroupID.Length != 0) {
        GroupID = other.GroupID;
      }
      if (other.ShowName.Length != 0) {
        ShowName = other.ShowName;
      }
      if (other.FaceURL.Length != 0) {
        FaceURL = other.FaceURL;
      }
      if (other.RecvMsgOpt != 0) {
        RecvMsgOpt = other.RecvMsgOpt;
      }
      if (other.UnreadCount != 0) {
        UnreadCount = other.UnreadCount;
      }
      if (other.GroupAtType != 0) {
        GroupAtType = other.GroupAtType;
      }
      if (other.LatestMsg.Length != 0) {
        LatestMsg = other.LatestMsg;
      }
      if (other.LatestMsgSendTime != 0L) {
        LatestMsgSendTime = other.LatestMsgSendTime;
      }
      if (other.DraftText.Length != 0) {
        DraftText = other.DraftText;
      }
      if (other.DraftTextTime != 0L) {
        DraftTextTime = other.DraftTextTime;
      }
      if (other.IsPinned != false) {
        IsPinned = other.IsPinned;
      }
      if (other.IsPrivateChat != false) {
        IsPrivateChat = other.IsPrivateChat;
      }
      if (other.BurnDuration != 0) {
        BurnDuration = other.BurnDuration;
      }
      if (other.Ex.Length != 0) {
        Ex = other.Ex;
      }
      if (other.MsgDestructTime != 0L) {
        MsgDestructTime = other.MsgDestructTime;
      }
      if (other.IsMsgDestruct != false) {
        IsMsgDestruct = other.IsMsgDestruct;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConversationID = input.ReadString();
            break;
          }
          case 16: {
            ConversationType = input.ReadInt32();
            break;
          }
          case 26: {
            UserID = input.ReadString();
            break;
          }
          case 34: {
            GroupID = input.ReadString();
            break;
          }
          case 42: {
            ShowName = input.ReadString();
            break;
          }
          case 50: {
            FaceURL = input.ReadString();
            break;
          }
          case 56: {
            RecvMsgOpt = input.ReadInt32();
            break;
          }
          case 64: {
            UnreadCount = input.ReadInt32();
            break;
          }
          case 72: {
            GroupAtType = input.ReadInt32();
            break;
          }
          case 82: {
            LatestMsg = input.ReadString();
            break;
          }
          case 88: {
            LatestMsgSendTime = input.ReadInt64();
            break;
          }
          case 98: {
            DraftText = input.ReadString();
            break;
          }
          case 104: {
            DraftTextTime = input.ReadInt64();
            break;
          }
          case 112: {
            IsPinned = input.ReadBool();
            break;
          }
          case 120: {
            IsPrivateChat = input.ReadBool();
            break;
          }
          case 128: {
            BurnDuration = input.ReadInt32();
            break;
          }
          case 138: {
            Ex = input.ReadString();
            break;
          }
          case 144: {
            MsgDestructTime = input.ReadInt64();
            break;
          }
          case 152: {
            IsMsgDestruct = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConversationID = input.ReadString();
            break;
          }
          case 16: {
            ConversationType = input.ReadInt32();
            break;
          }
          case 26: {
            UserID = input.ReadString();
            break;
          }
          case 34: {
            GroupID = input.ReadString();
            break;
          }
          case 42: {
            ShowName = input.ReadString();
            break;
          }
          case 50: {
            FaceURL = input.ReadString();
            break;
          }
          case 56: {
            RecvMsgOpt = input.ReadInt32();
            break;
          }
          case 64: {
            UnreadCount = input.ReadInt32();
            break;
          }
          case 72: {
            GroupAtType = input.ReadInt32();
            break;
          }
          case 82: {
            LatestMsg = input.ReadString();
            break;
          }
          case 88: {
            LatestMsgSendTime = input.ReadInt64();
            break;
          }
          case 98: {
            DraftText = input.ReadString();
            break;
          }
          case 104: {
            DraftTextTime = input.ReadInt64();
            break;
          }
          case 112: {
            IsPinned = input.ReadBool();
            break;
          }
          case 120: {
            IsPrivateChat = input.ReadBool();
            break;
          }
          case 128: {
            BurnDuration = input.ReadInt32();
            break;
          }
          case 138: {
            Ex = input.ReadString();
            break;
          }
          case 144: {
            MsgDestructTime = input.ReadInt64();
            break;
          }
          case 152: {
            IsMsgDestruct = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
