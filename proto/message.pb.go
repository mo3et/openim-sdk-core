// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0
// source: message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtUserID      string `protobuf:"bytes,1,opt,name=atUserID,proto3" json:"atUserID,omitempty"`
	GroupNickname string `protobuf:"bytes,2,opt,name=groupNickname,proto3" json:"groupNickname,omitempty"`
}

func (x *AtInfo) Reset() {
	*x = AtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtInfo) ProtoMessage() {}

func (x *AtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtInfo.ProtoReflect.Descriptor instead.
func (*AtInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *AtInfo) GetAtUserID() string {
	if x != nil {
		return x.AtUserID
	}
	return ""
}

func (x *AtInfo) GetGroupNickname() string {
	if x != nil {
		return x.GroupNickname
	}
	return ""
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *ImageInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PictureBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Width  int32  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Url    string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PictureBaseInfo) Reset() {
	*x = PictureBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureBaseInfo) ProtoMessage() {}

func (x *PictureBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureBaseInfo.ProtoReflect.Descriptor instead.
func (*PictureBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *PictureBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PictureBaseInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PictureBaseInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PictureBaseInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PictureBaseInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PictureBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SoundBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=soundPath,proto3" json:"soundPath,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=dataSize,proto3" json:"dataSize,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=soundType,proto3" json:"soundType,omitempty"`
}

func (x *SoundBaseInfo) Reset() {
	*x = SoundBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundBaseInfo) ProtoMessage() {}

func (x *SoundBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundBaseInfo.ProtoReflect.Descriptor instead.
func (*SoundBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *SoundBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundBaseInfo) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundBaseInfo) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *SoundBaseInfo) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundBaseInfo) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=videoPath,proto3" json:"videoPath,omitempty"`
	VideoUUID      string `protobuf:"bytes,2,opt,name=videoUUID,proto3" json:"videoUUID,omitempty"`
	VideoURL       string `protobuf:"bytes,3,opt,name=videoURL,proto3" json:"videoURL,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=videoType,proto3" json:"videoType,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=videoSize,proto3" json:"videoSize,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshotPath,proto3" json:"snapshotPath,omitempty"`
	SnapshotUUID   string `protobuf:"bytes,8,opt,name=snapshotUUID,proto3" json:"snapshotUUID,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshotSize,proto3" json:"snapshotSize,omitempty"`
	SnapshotURL    string `protobuf:"bytes,10,opt,name=snapshotURL,proto3" json:"snapshotURL,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshotWidth,proto3" json:"snapshotWidth,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshotHeight,proto3" json:"snapshotHeight,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshotType,proto3" json:"snapshotType,omitempty"`
}

func (x *VideoBaseInfo) Reset() {
	*x = VideoBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBaseInfo) ProtoMessage() {}

func (x *VideoBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBaseInfo.ProtoReflect.Descriptor instead.
func (*VideoBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *VideoBaseInfo) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoUUID() string {
	if x != nil {
		return x.VideoUUID
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoURL() string {
	if x != nil {
		return x.VideoURL
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotUUID() string {
	if x != nil {
		return x.SnapshotUUID
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotURL() string {
	if x != nil {
		return x.SnapshotURL
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *FileBaseInfo) Reset() {
	*x = FileBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBaseInfo) ProtoMessage() {}

func (x *FileBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBaseInfo.ProtoReflect.Descriptor instead.
func (*FileBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *FileBaseInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileBaseInfo) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *FileBaseInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileBaseInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileBaseInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type TextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TextElem) Reset() {
	*x = TextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextElem) ProtoMessage() {}

func (x *TextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextElem.ProtoReflect.Descriptor instead.
func (*TextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *TextElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CardElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL  string `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Ex       string `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *CardElem) Reset() {
	*x = CardElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardElem) ProtoMessage() {}

func (x *CardElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardElem.ProtoReflect.Descriptor instead.
func (*CardElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *CardElem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CardElem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CardElem) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CardElem) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type PictureElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      string           `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	SourcePicture   *PictureBaseInfo `protobuf:"bytes,2,opt,name=sourcePicture,proto3" json:"sourcePicture,omitempty"`
	BigPicture      *PictureBaseInfo `protobuf:"bytes,3,opt,name=bigPicture,proto3" json:"bigPicture,omitempty"`
	SnapshotPicture *PictureBaseInfo `protobuf:"bytes,4,opt,name=snapshotPicture,proto3" json:"snapshotPicture,omitempty"`
}

func (x *PictureElem) Reset() {
	*x = PictureElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureElem) ProtoMessage() {}

func (x *PictureElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureElem.ProtoReflect.Descriptor instead.
func (*PictureElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *PictureElem) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *PictureElem) GetSourcePicture() *PictureBaseInfo {
	if x != nil {
		return x.SourcePicture
	}
	return nil
}

func (x *PictureElem) GetBigPicture() *PictureBaseInfo {
	if x != nil {
		return x.BigPicture
	}
	return nil
}

func (x *PictureElem) GetSnapshotPicture() *PictureBaseInfo {
	if x != nil {
		return x.SnapshotPicture
	}
	return nil
}

type SoundElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=soundPath,proto3" json:"soundPath,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=dataSize,proto3" json:"dataSize,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=soundType,proto3" json:"soundType,omitempty"`
}

func (x *SoundElem) Reset() {
	*x = SoundElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundElem) ProtoMessage() {}

func (x *SoundElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundElem.ProtoReflect.Descriptor instead.
func (*SoundElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *SoundElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundElem) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundElem) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *SoundElem) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundElem) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=videoPath,proto3" json:"videoPath,omitempty"`
	VideoUUID      string `protobuf:"bytes,2,opt,name=videoUUID,proto3" json:"videoUUID,omitempty"`
	VideoURL       string `protobuf:"bytes,3,opt,name=videoURL,proto3" json:"videoURL,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=videoType,proto3" json:"videoType,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=videoSize,proto3" json:"videoSize,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshotPath,proto3" json:"snapshotPath,omitempty"`
	SnapshotUUID   string `protobuf:"bytes,8,opt,name=snapshotUUID,proto3" json:"snapshotUUID,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshotSize,proto3" json:"snapshotSize,omitempty"`
	SnapshotURL    string `protobuf:"bytes,10,opt,name=snapshotURL,proto3" json:"snapshotURL,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshotWidth,proto3" json:"snapshotWidth,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshotHeight,proto3" json:"snapshotHeight,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshotType,proto3" json:"snapshotType,omitempty"`
}

func (x *VideoElem) Reset() {
	*x = VideoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoElem) ProtoMessage() {}

func (x *VideoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoElem.ProtoReflect.Descriptor instead.
func (*VideoElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *VideoElem) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoElem) GetVideoUUID() string {
	if x != nil {
		return x.VideoUUID
	}
	return ""
}

func (x *VideoElem) GetVideoURL() string {
	if x != nil {
		return x.VideoURL
	}
	return ""
}

func (x *VideoElem) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoElem) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoElem) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoElem) GetSnapshotUUID() string {
	if x != nil {
		return x.SnapshotUUID
	}
	return ""
}

func (x *VideoElem) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoElem) GetSnapshotURL() string {
	if x != nil {
		return x.SnapshotURL
	}
	return ""
}

func (x *VideoElem) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoElem) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoElem) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *FileElem) Reset() {
	*x = FileElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileElem) ProtoMessage() {}

func (x *FileElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileElem.ProtoReflect.Descriptor instead.
func (*FileElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *FileElem) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileElem) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *FileElem) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileElem) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileElem) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type MessageEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length int32  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Ex     string `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *MessageEntity) Reset() {
	*x = MessageEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEntity) ProtoMessage() {}

func (x *MessageEntity) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEntity.ProtoReflect.Descriptor instead.
func (*MessageEntity) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *MessageEntity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageEntity) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MessageEntity) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MessageEntity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEntity) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type MergeElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AbstractList      []string         `protobuf:"bytes,2,rep,name=abstractList,proto3" json:"abstractList,omitempty"`
	MultiMessage      []*IMMessage     `protobuf:"bytes,3,rep,name=multiMessage,proto3" json:"multiMessage,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,4,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *MergeElem) Reset() {
	*x = MergeElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeElem) ProtoMessage() {}

func (x *MergeElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeElem.ProtoReflect.Descriptor instead.
func (*MergeElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *MergeElem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MergeElem) GetAbstractList() []string {
	if x != nil {
		return x.AbstractList
	}
	return nil
}

func (x *MergeElem) GetMultiMessage() []*IMMessage {
	if x != nil {
		return x.MultiMessage
	}
	return nil
}

func (x *MergeElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type AtTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	AtUserList   []string   `protobuf:"bytes,2,rep,name=atUserList,proto3" json:"atUserList,omitempty"`
	AtUsersInfo  []*AtInfo  `protobuf:"bytes,3,rep,name=atUsersInfo,proto3" json:"atUsersInfo,omitempty"`
	QuoteMessage *IMMessage `protobuf:"bytes,4,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
	IsAtSelf     bool       `protobuf:"varint,5,opt,name=isAtSelf,proto3" json:"isAtSelf,omitempty"`
}

func (x *AtTextElem) Reset() {
	*x = AtTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtTextElem) ProtoMessage() {}

func (x *AtTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtTextElem.ProtoReflect.Descriptor instead.
func (*AtTextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *AtTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AtTextElem) GetAtUserList() []string {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

func (x *AtTextElem) GetAtUsersInfo() []*AtInfo {
	if x != nil {
		return x.AtUsersInfo
	}
	return nil
}

func (x *AtTextElem) GetQuoteMessage() *IMMessage {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *AtTextElem) GetIsAtSelf() bool {
	if x != nil {
		return x.IsAtSelf
	}
	return false
}

type FaceElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FaceElem) Reset() {
	*x = FaceElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceElem) ProtoMessage() {}

func (x *FaceElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceElem.ProtoReflect.Descriptor instead.
func (*FaceElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *FaceElem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FaceElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type LocationElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *LocationElem) Reset() {
	*x = LocationElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationElem) ProtoMessage() {}

func (x *LocationElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationElem.ProtoReflect.Descriptor instead.
func (*LocationElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{16}
}

func (x *LocationElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LocationElem) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationElem) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CustomElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Extension   string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *CustomElem) Reset() {
	*x = CustomElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomElem) ProtoMessage() {}

func (x *CustomElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomElem.ProtoReflect.Descriptor instead.
func (*CustomElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{17}
}

func (x *CustomElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CustomElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomElem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type QuoteElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	QuoteMessage      *IMMessage       `protobuf:"bytes,2,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,3,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *QuoteElem) Reset() {
	*x = QuoteElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteElem) ProtoMessage() {}

func (x *QuoteElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteElem.ProtoReflect.Descriptor instead.
func (*QuoteElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{18}
}

func (x *QuoteElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QuoteElem) GetQuoteMessage() *IMMessage {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *QuoteElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type AdvancedTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,2,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *AdvancedTextElem) Reset() {
	*x = AdvancedTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvancedTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedTextElem) ProtoMessage() {}

func (x *AdvancedTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedTextElem.ProtoReflect.Descriptor instead.
func (*AdvancedTextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{19}
}

func (x *AdvancedTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdvancedTextElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type TypingElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgTips string `protobuf:"bytes,1,opt,name=msgTips,proto3" json:"msgTips,omitempty"`
}

func (x *TypingElem) Reset() {
	*x = TypingElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingElem) ProtoMessage() {}

func (x *TypingElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingElem.ProtoReflect.Descriptor instead.
func (*TypingElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{20}
}

func (x *TypingElem) GetMsgTips() string {
	if x != nil {
		return x.MsgTips
	}
	return ""
}

type StreamElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Content string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Packets []string `protobuf:"bytes,3,rep,name=packets,proto3" json:"packets,omitempty"`
	End     bool     `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StreamElem) Reset() {
	*x = StreamElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamElem) ProtoMessage() {}

func (x *StreamElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamElem.ProtoReflect.Descriptor instead.
func (*StreamElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{21}
}

func (x *StreamElem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StreamElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StreamElem) GetPackets() []string {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *StreamElem) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type GroupHasReadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasReadUserIDList []string `protobuf:"bytes,1,rep,name=hasReadUserIDList,proto3" json:"hasReadUserIDList,omitempty"`
	HasReadCount      int32    `protobuf:"varint,2,opt,name=hasReadCount,proto3" json:"hasReadCount,omitempty"`
	GroupMemberCount  int32    `protobuf:"varint,3,opt,name=groupMemberCount,proto3" json:"groupMemberCount,omitempty"`
}

func (x *GroupHasReadInfo) Reset() {
	*x = GroupHasReadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupHasReadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupHasReadInfo) ProtoMessage() {}

func (x *GroupHasReadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupHasReadInfo.ProtoReflect.Descriptor instead.
func (*GroupHasReadInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{22}
}

func (x *GroupHasReadInfo) GetHasReadUserIDList() []string {
	if x != nil {
		return x.HasReadUserIDList
	}
	return nil
}

func (x *GroupHasReadInfo) GetHasReadCount() int32 {
	if x != nil {
		return x.HasReadCount
	}
	return 0
}

func (x *GroupHasReadInfo) GetGroupMemberCount() int32 {
	if x != nil {
		return x.GroupMemberCount
	}
	return 0
}

type UploadProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Save     int64  `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"`
	Current  int64  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	UploadID string `protobuf:"bytes,4,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
}

func (x *UploadProgress) Reset() {
	*x = UploadProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProgress) ProtoMessage() {}

func (x *UploadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProgress.ProtoReflect.Descriptor instead.
func (*UploadProgress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{23}
}

func (x *UploadProgress) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UploadProgress) GetSave() int64 {
	if x != nil {
		return x.Save
	}
	return 0
}

func (x *UploadProgress) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UploadProgress) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

type AttachedInfoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHasReadInfo *GroupHasReadInfo `protobuf:"bytes,1,opt,name=groupHasReadInfo,proto3" json:"groupHasReadInfo,omitempty"`
	IsPrivateChat    bool              `protobuf:"varint,2,opt,name=isPrivateChat,proto3" json:"isPrivateChat,omitempty"`
	BurnDuration     int32             `protobuf:"varint,3,opt,name=burnDuration,proto3" json:"burnDuration,omitempty"`
	HasReadTime      int64             `protobuf:"varint,4,opt,name=hasReadTime,proto3" json:"hasReadTime,omitempty"`
	Progress         *UploadProgress   `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *AttachedInfoElem) Reset() {
	*x = AttachedInfoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachedInfoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedInfoElem) ProtoMessage() {}

func (x *AttachedInfoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedInfoElem.ProtoReflect.Descriptor instead.
func (*AttachedInfoElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{24}
}

func (x *AttachedInfoElem) GetGroupHasReadInfo() *GroupHasReadInfo {
	if x != nil {
		return x.GroupHasReadInfo
	}
	return nil
}

func (x *AttachedInfoElem) GetIsPrivateChat() bool {
	if x != nil {
		return x.IsPrivateChat
	}
	return false
}

func (x *AttachedInfoElem) GetBurnDuration() int32 {
	if x != nil {
		return x.BurnDuration
	}
	return 0
}

func (x *AttachedInfoElem) GetHasReadTime() int64 {
	if x != nil {
		return x.HasReadTime
	}
	return 0
}

func (x *AttachedInfoElem) GetProgress() *UploadProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// OnGroupCreated()
type GroupCreatedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group          *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser         *GroupMemberInfo   `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	MemberList     []*GroupMemberInfo `protobuf:"bytes,3,rep,name=memberList,proto3" json:"memberList,omitempty"`
	OperationTime  int64              `protobuf:"varint,4,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	GroupOwnerUser *GroupMemberInfo   `protobuf:"bytes,5,opt,name=groupOwnerUser,proto3" json:"groupOwnerUser,omitempty"`
}

func (x *GroupCreatedTips) Reset() {
	*x = GroupCreatedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreatedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreatedTips) ProtoMessage() {}

func (x *GroupCreatedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreatedTips.ProtoReflect.Descriptor instead.
func (*GroupCreatedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{25}
}

func (x *GroupCreatedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupCreatedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupCreatedTips) GetMemberList() []*GroupMemberInfo {
	if x != nil {
		return x.MemberList
	}
	return nil
}

func (x *GroupCreatedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupCreatedTips) GetGroupOwnerUser() *GroupMemberInfo {
	if x != nil {
		return x.GroupOwnerUser
	}
	return nil
}

// OnGroupInfoSet()
type GroupInfoSetTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUser   *GroupMemberInfo `protobuf:"bytes,1,opt,name=opUser,proto3" json:"opUser,omitempty"` //who do this
	MuteTime int64            `protobuf:"varint,2,opt,name=muteTime,proto3" json:"muteTime,omitempty"`
	Group    *GroupInfo       `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupInfoSetTips) Reset() {
	*x = GroupInfoSetTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoSetTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoSetTips) ProtoMessage() {}

func (x *GroupInfoSetTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoSetTips.ProtoReflect.Descriptor instead.
func (*GroupInfoSetTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{26}
}

func (x *GroupInfoSetTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupInfoSetTips) GetMuteTime() int64 {
	if x != nil {
		return x.MuteTime
	}
	return 0
}

func (x *GroupInfoSetTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupInfoSetNameTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUser *GroupMemberInfo `protobuf:"bytes,1,opt,name=opUser,proto3" json:"opUser,omitempty"` //who do this
	Group  *GroupInfo       `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupInfoSetNameTips) Reset() {
	*x = GroupInfoSetNameTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoSetNameTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoSetNameTips) ProtoMessage() {}

func (x *GroupInfoSetNameTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoSetNameTips.ProtoReflect.Descriptor instead.
func (*GroupInfoSetNameTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{27}
}

func (x *GroupInfoSetNameTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupInfoSetNameTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

type GroupInfoSetAnnouncementTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUser *GroupMemberInfo `protobuf:"bytes,1,opt,name=opUser,proto3" json:"opUser,omitempty"` //who do this
	Group  *GroupInfo       `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupInfoSetAnnouncementTips) Reset() {
	*x = GroupInfoSetAnnouncementTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoSetAnnouncementTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoSetAnnouncementTips) ProtoMessage() {}

func (x *GroupInfoSetAnnouncementTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoSetAnnouncementTips.ProtoReflect.Descriptor instead.
func (*GroupInfoSetAnnouncementTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{28}
}

func (x *GroupInfoSetAnnouncementTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupInfoSetAnnouncementTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

// OnJoinGroupApplication()
type JoinGroupApplicationTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *GroupInfo `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Applicant *UserInfo  `protobuf:"bytes,2,opt,name=applicant,proto3" json:"applicant,omitempty"`
	ReqMsg    string     `protobuf:"bytes,3,opt,name=reqMsg,proto3" json:"reqMsg,omitempty"`
}

func (x *JoinGroupApplicationTips) Reset() {
	*x = JoinGroupApplicationTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupApplicationTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupApplicationTips) ProtoMessage() {}

func (x *JoinGroupApplicationTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupApplicationTips.ProtoReflect.Descriptor instead.
func (*JoinGroupApplicationTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{29}
}

func (x *JoinGroupApplicationTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *JoinGroupApplicationTips) GetApplicant() *UserInfo {
	if x != nil {
		return x.Applicant
	}
	return nil
}

func (x *JoinGroupApplicationTips) GetReqMsg() string {
	if x != nil {
		return x.ReqMsg
	}
	return ""
}

//	OnQuitGroup()
//
// Actively leave the group
type MemberQuitTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	QuitUser      *GroupMemberInfo `protobuf:"bytes,2,opt,name=quitUser,proto3" json:"quitUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *MemberQuitTips) Reset() {
	*x = MemberQuitTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberQuitTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberQuitTips) ProtoMessage() {}

func (x *MemberQuitTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberQuitTips.ProtoReflect.Descriptor instead.
func (*MemberQuitTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{30}
}

func (x *MemberQuitTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberQuitTips) GetQuitUser() *GroupMemberInfo {
	if x != nil {
		return x.QuitUser
	}
	return nil
}

func (x *MemberQuitTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// OnApplicationGroupAccepted()
type GroupApplicationAcceptedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser     *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	HandleMsg  string           `protobuf:"bytes,4,opt,name=handleMsg,proto3" json:"handleMsg,omitempty"`
	ReceiverAs int32            `protobuf:"varint,5,opt,name=receiverAs,proto3" json:"receiverAs,omitempty"` // admin(==1) or applicant(==0)
}

func (x *GroupApplicationAcceptedTips) Reset() {
	*x = GroupApplicationAcceptedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationAcceptedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationAcceptedTips) ProtoMessage() {}

func (x *GroupApplicationAcceptedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationAcceptedTips.ProtoReflect.Descriptor instead.
func (*GroupApplicationAcceptedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{31}
}

func (x *GroupApplicationAcceptedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupApplicationAcceptedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupApplicationAcceptedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *GroupApplicationAcceptedTips) GetReceiverAs() int32 {
	if x != nil {
		return x.ReceiverAs
	}
	return 0
}

// OnApplicationGroupRejected()
type GroupApplicationRejectedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group      *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser     *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	HandleMsg  string           `protobuf:"bytes,4,opt,name=handleMsg,proto3" json:"handleMsg,omitempty"`
	ReceiverAs int32            `protobuf:"varint,5,opt,name=receiverAs,proto3" json:"receiverAs,omitempty"` // admin(==1) or applicant(==0)
}

func (x *GroupApplicationRejectedTips) Reset() {
	*x = GroupApplicationRejectedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupApplicationRejectedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupApplicationRejectedTips) ProtoMessage() {}

func (x *GroupApplicationRejectedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupApplicationRejectedTips.ProtoReflect.Descriptor instead.
func (*GroupApplicationRejectedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{32}
}

func (x *GroupApplicationRejectedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupApplicationRejectedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupApplicationRejectedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

func (x *GroupApplicationRejectedTips) GetReceiverAs() int32 {
	if x != nil {
		return x.ReceiverAs
	}
	return 0
}

// OnTransferGroupOwner()
type GroupOwnerTransferredTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group             *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser            *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	NewGroupOwner     *GroupMemberInfo `protobuf:"bytes,3,opt,name=newGroupOwner,proto3" json:"newGroupOwner,omitempty"`
	OldGroupOwner     string           `protobuf:"bytes,4,opt,name=oldGroupOwner,proto3" json:"oldGroupOwner,omitempty"`
	OperationTime     int64            `protobuf:"varint,5,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	OldGroupOwnerInfo *GroupMemberInfo `protobuf:"bytes,6,opt,name=oldGroupOwnerInfo,proto3" json:"oldGroupOwnerInfo,omitempty"`
}

func (x *GroupOwnerTransferredTips) Reset() {
	*x = GroupOwnerTransferredTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupOwnerTransferredTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupOwnerTransferredTips) ProtoMessage() {}

func (x *GroupOwnerTransferredTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupOwnerTransferredTips.ProtoReflect.Descriptor instead.
func (*GroupOwnerTransferredTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{33}
}

func (x *GroupOwnerTransferredTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetNewGroupOwner() *GroupMemberInfo {
	if x != nil {
		return x.NewGroupOwner
	}
	return nil
}

func (x *GroupOwnerTransferredTips) GetOldGroupOwner() string {
	if x != nil {
		return x.OldGroupOwner
	}
	return ""
}

func (x *GroupOwnerTransferredTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupOwnerTransferredTips) GetOldGroupOwnerInfo() *GroupMemberInfo {
	if x != nil {
		return x.OldGroupOwnerInfo
	}
	return nil
}

// OnMemberKicked()
type MemberKickedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group          *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser         *GroupMemberInfo   `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	KickedUserList []*GroupMemberInfo `protobuf:"bytes,3,rep,name=kickedUserList,proto3" json:"kickedUserList,omitempty"`
	OperationTime  int64              `protobuf:"varint,4,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *MemberKickedTips) Reset() {
	*x = MemberKickedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberKickedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberKickedTips) ProtoMessage() {}

func (x *MemberKickedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberKickedTips.ProtoReflect.Descriptor instead.
func (*MemberKickedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{34}
}

func (x *MemberKickedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberKickedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *MemberKickedTips) GetKickedUserList() []*GroupMemberInfo {
	if x != nil {
		return x.KickedUserList
	}
	return nil
}

func (x *MemberKickedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

// OnMemberInvited()
type MemberInvitedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group           *GroupInfo         `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser          *GroupMemberInfo   `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	InvitedUserList []*GroupMemberInfo `protobuf:"bytes,3,rep,name=invitedUserList,proto3" json:"invitedUserList,omitempty"`
	OperationTime   int64              `protobuf:"varint,4,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	InviterUser     *GroupMemberInfo   `protobuf:"bytes,7,opt,name=inviterUser,proto3" json:"inviterUser,omitempty"`
}

func (x *MemberInvitedTips) Reset() {
	*x = MemberInvitedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInvitedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInvitedTips) ProtoMessage() {}

func (x *MemberInvitedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInvitedTips.ProtoReflect.Descriptor instead.
func (*MemberInvitedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{35}
}

func (x *MemberInvitedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberInvitedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *MemberInvitedTips) GetInvitedUserList() []*GroupMemberInfo {
	if x != nil {
		return x.InvitedUserList
	}
	return nil
}

func (x *MemberInvitedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *MemberInvitedTips) GetInviterUser() *GroupMemberInfo {
	if x != nil {
		return x.InviterUser
	}
	return nil
}

// Actively join the group
type MemberEnterTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	EntrantUser   *GroupMemberInfo `protobuf:"bytes,2,opt,name=entrantUser,proto3" json:"entrantUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *MemberEnterTips) Reset() {
	*x = MemberEnterTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberEnterTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberEnterTips) ProtoMessage() {}

func (x *MemberEnterTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberEnterTips.ProtoReflect.Descriptor instead.
func (*MemberEnterTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{36}
}

func (x *MemberEnterTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MemberEnterTips) GetEntrantUser() *GroupMemberInfo {
	if x != nil {
		return x.EntrantUser
	}
	return nil
}

func (x *MemberEnterTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type GroupDismissedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *GroupDismissedTips) Reset() {
	*x = GroupDismissedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDismissedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDismissedTips) ProtoMessage() {}

func (x *GroupDismissedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDismissedTips.ProtoReflect.Descriptor instead.
func (*GroupDismissedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{37}
}

func (x *GroupDismissedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupDismissedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupDismissedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type GroupMemberMutedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	MutedUser     *GroupMemberInfo `protobuf:"bytes,4,opt,name=mutedUser,proto3" json:"mutedUser,omitempty"`
	MutedSeconds  uint32           `protobuf:"varint,5,opt,name=mutedSeconds,proto3" json:"mutedSeconds,omitempty"`
}

func (x *GroupMemberMutedTips) Reset() {
	*x = GroupMemberMutedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberMutedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberMutedTips) ProtoMessage() {}

func (x *GroupMemberMutedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberMutedTips.ProtoReflect.Descriptor instead.
func (*GroupMemberMutedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{38}
}

func (x *GroupMemberMutedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupMemberMutedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupMemberMutedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupMemberMutedTips) GetMutedUser() *GroupMemberInfo {
	if x != nil {
		return x.MutedUser
	}
	return nil
}

func (x *GroupMemberMutedTips) GetMutedSeconds() uint32 {
	if x != nil {
		return x.MutedSeconds
	}
	return 0
}

type GroupMemberCancelMutedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	MutedUser     *GroupMemberInfo `protobuf:"bytes,4,opt,name=mutedUser,proto3" json:"mutedUser,omitempty"`
}

func (x *GroupMemberCancelMutedTips) Reset() {
	*x = GroupMemberCancelMutedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberCancelMutedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberCancelMutedTips) ProtoMessage() {}

func (x *GroupMemberCancelMutedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberCancelMutedTips.ProtoReflect.Descriptor instead.
func (*GroupMemberCancelMutedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{39}
}

func (x *GroupMemberCancelMutedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupMemberCancelMutedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupMemberCancelMutedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupMemberCancelMutedTips) GetMutedUser() *GroupMemberInfo {
	if x != nil {
		return x.MutedUser
	}
	return nil
}

type GroupMutedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *GroupMutedTips) Reset() {
	*x = GroupMutedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMutedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMutedTips) ProtoMessage() {}

func (x *GroupMutedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMutedTips.ProtoReflect.Descriptor instead.
func (*GroupMutedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{40}
}

func (x *GroupMutedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupMutedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupMutedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type GroupCancelMutedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
}

func (x *GroupCancelMutedTips) Reset() {
	*x = GroupCancelMutedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCancelMutedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCancelMutedTips) ProtoMessage() {}

func (x *GroupCancelMutedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCancelMutedTips.ProtoReflect.Descriptor instead.
func (*GroupCancelMutedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{41}
}

func (x *GroupCancelMutedTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupCancelMutedTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupCancelMutedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

type GroupMemberInfoSetTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group         *GroupInfo       `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	OpUser        *GroupMemberInfo `protobuf:"bytes,2,opt,name=opUser,proto3" json:"opUser,omitempty"`
	OperationTime int64            `protobuf:"varint,3,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	ChangedUser   *GroupMemberInfo `protobuf:"bytes,4,opt,name=changedUser,proto3" json:"changedUser,omitempty"`
}

func (x *GroupMemberInfoSetTips) Reset() {
	*x = GroupMemberInfoSetTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupMemberInfoSetTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupMemberInfoSetTips) ProtoMessage() {}

func (x *GroupMemberInfoSetTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupMemberInfoSetTips.ProtoReflect.Descriptor instead.
func (*GroupMemberInfoSetTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{42}
}

func (x *GroupMemberInfoSetTips) GetGroup() *GroupInfo {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupMemberInfoSetTips) GetOpUser() *GroupMemberInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

func (x *GroupMemberInfoSetTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *GroupMemberInfoSetTips) GetChangedUser() *GroupMemberInfo {
	if x != nil {
		return x.ChangedUser
	}
	return nil
}

type FriendApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddTime    int64  `protobuf:"varint,1,opt,name=addTime,proto3" json:"addTime,omitempty"`
	AddSource  string `protobuf:"bytes,2,opt,name=addSource,proto3" json:"addSource,omitempty"`
	AddWording string `protobuf:"bytes,3,opt,name=addWording,proto3" json:"addWording,omitempty"`
}

func (x *FriendApplication) Reset() {
	*x = FriendApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplication) ProtoMessage() {}

func (x *FriendApplication) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplication.ProtoReflect.Descriptor instead.
func (*FriendApplication) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{43}
}

func (x *FriendApplication) GetAddTime() int64 {
	if x != nil {
		return x.AddTime
	}
	return 0
}

func (x *FriendApplication) GetAddSource() string {
	if x != nil {
		return x.AddSource
	}
	return ""
}

func (x *FriendApplication) GetAddWording() string {
	if x != nil {
		return x.AddWording
	}
	return ""
}

type FromToUserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *FromToUserID) Reset() {
	*x = FromToUserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FromToUserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FromToUserID) ProtoMessage() {}

func (x *FromToUserID) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FromToUserID.ProtoReflect.Descriptor instead.
func (*FromToUserID) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{44}
}

func (x *FromToUserID) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *FromToUserID) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

// FromUserID apply to add ToUserID
type FriendApplicationTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：发起者； to：接收者
}

func (x *FriendApplicationTips) Reset() {
	*x = FriendApplicationTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationTips) ProtoMessage() {}

func (x *FriendApplicationTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{45}
}

func (x *FriendApplicationTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

// FromUserID accept or reject ToUserID
type FriendApplicationApprovedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：同意者；to：请求发起者
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handleMsg,proto3" json:"handleMsg,omitempty"`
}

func (x *FriendApplicationApprovedTips) Reset() {
	*x = FriendApplicationApprovedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationApprovedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationApprovedTips) ProtoMessage() {}

func (x *FriendApplicationApprovedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationApprovedTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationApprovedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{46}
}

func (x *FriendApplicationApprovedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

func (x *FriendApplicationApprovedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// FromUserID accept or reject ToUserID
type FriendApplicationRejectedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：拒绝者；to：请求发起者
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handleMsg,proto3" json:"handleMsg,omitempty"`
}

func (x *FriendApplicationRejectedTips) Reset() {
	*x = FriendApplicationRejectedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendApplicationRejectedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendApplicationRejectedTips) ProtoMessage() {}

func (x *FriendApplicationRejectedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendApplicationRejectedTips.ProtoReflect.Descriptor instead.
func (*FriendApplicationRejectedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{47}
}

func (x *FriendApplicationRejectedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

func (x *FriendApplicationRejectedTips) GetHandleMsg() string {
	if x != nil {
		return x.HandleMsg
	}
	return ""
}

// FromUserID  Added a friend ToUserID
type FriendAddedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend        *FriendInfo `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
	OperationTime int64       `protobuf:"varint,2,opt,name=operationTime,proto3" json:"operationTime,omitempty"`
	OpUser        *UserInfo   `protobuf:"bytes,3,opt,name=opUser,proto3" json:"opUser,omitempty"` //who do this
}

func (x *FriendAddedTips) Reset() {
	*x = FriendAddedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendAddedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendAddedTips) ProtoMessage() {}

func (x *FriendAddedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendAddedTips.ProtoReflect.Descriptor instead.
func (*FriendAddedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{48}
}

func (x *FriendAddedTips) GetFriend() *FriendInfo {
	if x != nil {
		return x.Friend
	}
	return nil
}

func (x *FriendAddedTips) GetOperationTime() int64 {
	if x != nil {
		return x.OperationTime
	}
	return 0
}

func (x *FriendAddedTips) GetOpUser() *UserInfo {
	if x != nil {
		return x.OpUser
	}
	return nil
}

// FromUserID  deleted a friend ToUserID
type FriendDeletedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：owner； to：friend
}

func (x *FriendDeletedTips) Reset() {
	*x = FriendDeletedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendDeletedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendDeletedTips) ProtoMessage() {}

func (x *FriendDeletedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendDeletedTips.ProtoReflect.Descriptor instead.
func (*FriendDeletedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{49}
}

func (x *FriendDeletedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

type BlackAddedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：owner； to：black
}

func (x *BlackAddedTips) Reset() {
	*x = BlackAddedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackAddedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackAddedTips) ProtoMessage() {}

func (x *BlackAddedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackAddedTips.ProtoReflect.Descriptor instead.
func (*BlackAddedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{50}
}

func (x *BlackAddedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

type BlackDeletedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：owner； to：black
}

func (x *BlackDeletedTips) Reset() {
	*x = BlackDeletedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackDeletedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackDeletedTips) ProtoMessage() {}

func (x *BlackDeletedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackDeletedTips.ProtoReflect.Descriptor instead.
func (*BlackDeletedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{51}
}

func (x *BlackDeletedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

type FriendInfoChangedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"` //from：changed； to：friend
}

func (x *FriendInfoChangedTips) Reset() {
	*x = FriendInfoChangedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendInfoChangedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendInfoChangedTips) ProtoMessage() {}

func (x *FriendInfoChangedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendInfoChangedTips.ProtoReflect.Descriptor instead.
func (*FriendInfoChangedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{52}
}

func (x *FriendInfoChangedTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

// ////////////////////user/////////////////////
type UserInfoUpdatedTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserInfoUpdatedTips) Reset() {
	*x = UserInfoUpdatedTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoUpdatedTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoUpdatedTips) ProtoMessage() {}

func (x *UserInfoUpdatedTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoUpdatedTips.ProtoReflect.Descriptor instead.
func (*UserInfoUpdatedTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{53}
}

func (x *UserInfoUpdatedTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserStatusChangeTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
	Status     int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	PlatformID int32  `protobuf:"varint,4,opt,name=platformID,proto3" json:"platformID,omitempty"`
}

func (x *UserStatusChangeTips) Reset() {
	*x = UserStatusChangeTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatusChangeTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatusChangeTips) ProtoMessage() {}

func (x *UserStatusChangeTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatusChangeTips.ProtoReflect.Descriptor instead.
func (*UserStatusChangeTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{54}
}

func (x *UserStatusChangeTips) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *UserStatusChangeTips) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

func (x *UserStatusChangeTips) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserStatusChangeTips) GetPlatformID() int32 {
	if x != nil {
		return x.PlatformID
	}
	return 0
}

type UserCommandAddTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *UserCommandAddTips) Reset() {
	*x = UserCommandAddTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandAddTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandAddTips) ProtoMessage() {}

func (x *UserCommandAddTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandAddTips.ProtoReflect.Descriptor instead.
func (*UserCommandAddTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{55}
}

func (x *UserCommandAddTips) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *UserCommandAddTips) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type UserCommandUpdateTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *UserCommandUpdateTips) Reset() {
	*x = UserCommandUpdateTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandUpdateTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandUpdateTips) ProtoMessage() {}

func (x *UserCommandUpdateTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandUpdateTips.ProtoReflect.Descriptor instead.
func (*UserCommandUpdateTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{56}
}

func (x *UserCommandUpdateTips) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *UserCommandUpdateTips) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

type UserCommandDeleteTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID,proto3" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID,proto3" json:"toUserID,omitempty"`
}

func (x *UserCommandDeleteTips) Reset() {
	*x = UserCommandDeleteTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCommandDeleteTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCommandDeleteTips) ProtoMessage() {}

func (x *UserCommandDeleteTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCommandDeleteTips.ProtoReflect.Descriptor instead.
func (*UserCommandDeleteTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{57}
}

func (x *UserCommandDeleteTips) GetFromUserID() string {
	if x != nil {
		return x.FromUserID
	}
	return ""
}

func (x *UserCommandDeleteTips) GetToUserID() string {
	if x != nil {
		return x.ToUserID
	}
	return ""
}

// ////////////////////conversation/////////////////////
type ConversationUpdateTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID             string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConversationIDList []string `protobuf:"bytes,2,rep,name=conversationIDList,proto3" json:"conversationIDList,omitempty"`
}

func (x *ConversationUpdateTips) Reset() {
	*x = ConversationUpdateTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationUpdateTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationUpdateTips) ProtoMessage() {}

func (x *ConversationUpdateTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationUpdateTips.ProtoReflect.Descriptor instead.
func (*ConversationUpdateTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{58}
}

func (x *ConversationUpdateTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ConversationUpdateTips) GetConversationIDList() []string {
	if x != nil {
		return x.ConversationIDList
	}
	return nil
}

type ConversationSetPrivateTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecvID         string `protobuf:"bytes,1,opt,name=recvID,proto3" json:"recvID,omitempty"`
	SendID         string `protobuf:"bytes,2,opt,name=sendID,proto3" json:"sendID,omitempty"`
	IsPrivate      bool   `protobuf:"varint,3,opt,name=isPrivate,proto3" json:"isPrivate,omitempty"`
	ConversationID string `protobuf:"bytes,4,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
}

func (x *ConversationSetPrivateTips) Reset() {
	*x = ConversationSetPrivateTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationSetPrivateTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationSetPrivateTips) ProtoMessage() {}

func (x *ConversationSetPrivateTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationSetPrivateTips.ProtoReflect.Descriptor instead.
func (*ConversationSetPrivateTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{59}
}

func (x *ConversationSetPrivateTips) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *ConversationSetPrivateTips) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *ConversationSetPrivateTips) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *ConversationSetPrivateTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type ConversationHasReadTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConversationID  string `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	HasReadSeq      int64  `protobuf:"varint,3,opt,name=hasReadSeq,proto3" json:"hasReadSeq,omitempty"`
	UnreadCountTime int64  `protobuf:"varint,4,opt,name=unreadCountTime,proto3" json:"unreadCountTime,omitempty"`
}

func (x *ConversationHasReadTips) Reset() {
	*x = ConversationHasReadTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationHasReadTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationHasReadTips) ProtoMessage() {}

func (x *ConversationHasReadTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationHasReadTips.ProtoReflect.Descriptor instead.
func (*ConversationHasReadTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{60}
}

func (x *ConversationHasReadTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ConversationHasReadTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *ConversationHasReadTips) GetHasReadSeq() int64 {
	if x != nil {
		return x.HasReadSeq
	}
	return 0
}

func (x *ConversationHasReadTips) GetUnreadCountTime() int64 {
	if x != nil {
		return x.UnreadCountTime
	}
	return 0
}

type DeleteMessageTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUserID string  `protobuf:"bytes,1,opt,name=opUserID,proto3" json:"opUserID,omitempty"`
	UserID   string  `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Seqs     []int64 `protobuf:"varint,3,rep,packed,name=seqs,proto3" json:"seqs,omitempty"`
}

func (x *DeleteMessageTips) Reset() {
	*x = DeleteMessageTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageTips) ProtoMessage() {}

func (x *DeleteMessageTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageTips.ProtoReflect.Descriptor instead.
func (*DeleteMessageTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteMessageTips) GetOpUserID() string {
	if x != nil {
		return x.OpUserID
	}
	return ""
}

func (x *DeleteMessageTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteMessageTips) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

type RevokeMsgTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokerUserID  string `protobuf:"bytes,1,opt,name=revokerUserID,proto3" json:"revokerUserID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	RevokeTime     int64  `protobuf:"varint,3,opt,name=revokeTime,proto3" json:"revokeTime,omitempty"`
	SesstionType   int32  `protobuf:"varint,5,opt,name=sesstionType,proto3" json:"sesstionType,omitempty"`
	Seq            int64  `protobuf:"varint,6,opt,name=seq,proto3" json:"seq,omitempty"`
	ConversationID string `protobuf:"bytes,7,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	IsAdminRevoke  bool   `protobuf:"varint,8,opt,name=isAdminRevoke,proto3" json:"isAdminRevoke,omitempty"`
}

func (x *RevokeMsgTips) Reset() {
	*x = RevokeMsgTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeMsgTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMsgTips) ProtoMessage() {}

func (x *RevokeMsgTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMsgTips.ProtoReflect.Descriptor instead.
func (*RevokeMsgTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{62}
}

func (x *RevokeMsgTips) GetRevokerUserID() string {
	if x != nil {
		return x.RevokerUserID
	}
	return ""
}

func (x *RevokeMsgTips) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *RevokeMsgTips) GetRevokeTime() int64 {
	if x != nil {
		return x.RevokeTime
	}
	return 0
}

func (x *RevokeMsgTips) GetSesstionType() int32 {
	if x != nil {
		return x.SesstionType
	}
	return 0
}

func (x *RevokeMsgTips) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *RevokeMsgTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *RevokeMsgTips) GetIsAdminRevoke() bool {
	if x != nil {
		return x.IsAdminRevoke
	}
	return false
}

type MessageRevokedContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokerID                   string `protobuf:"bytes,1,opt,name=revokerID,proto3" json:"revokerID,omitempty"`
	RevokerRole                 int32  `protobuf:"varint,2,opt,name=revokerRole,proto3" json:"revokerRole,omitempty"`
	ClientMsgID                 string `protobuf:"bytes,3,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	RevokerNickname             string `protobuf:"bytes,4,opt,name=revokerNickname,proto3" json:"revokerNickname,omitempty"`
	RevokeTime                  int64  `protobuf:"varint,5,opt,name=revokeTime,proto3" json:"revokeTime,omitempty"`
	SourceMessageSendTime       int64  `protobuf:"varint,6,opt,name=sourceMessageSendTime,proto3" json:"sourceMessageSendTime,omitempty"`
	SourceMessageSendID         string `protobuf:"bytes,7,opt,name=sourceMessageSendID,proto3" json:"sourceMessageSendID,omitempty"`
	SourceMessageSenderNickname string `protobuf:"bytes,8,opt,name=sourceMessageSenderNickname,proto3" json:"sourceMessageSenderNickname,omitempty"`
	SessionType                 int32  `protobuf:"varint,10,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	Seq                         int64  `protobuf:"varint,11,opt,name=seq,proto3" json:"seq,omitempty"`
	Ex                          string `protobuf:"bytes,12,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *MessageRevokedContent) Reset() {
	*x = MessageRevokedContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRevokedContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRevokedContent) ProtoMessage() {}

func (x *MessageRevokedContent) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRevokedContent.ProtoReflect.Descriptor instead.
func (*MessageRevokedContent) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{63}
}

func (x *MessageRevokedContent) GetRevokerID() string {
	if x != nil {
		return x.RevokerID
	}
	return ""
}

func (x *MessageRevokedContent) GetRevokerRole() int32 {
	if x != nil {
		return x.RevokerRole
	}
	return 0
}

func (x *MessageRevokedContent) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MessageRevokedContent) GetRevokerNickname() string {
	if x != nil {
		return x.RevokerNickname
	}
	return ""
}

func (x *MessageRevokedContent) GetRevokeTime() int64 {
	if x != nil {
		return x.RevokeTime
	}
	return 0
}

func (x *MessageRevokedContent) GetSourceMessageSendTime() int64 {
	if x != nil {
		return x.SourceMessageSendTime
	}
	return 0
}

func (x *MessageRevokedContent) GetSourceMessageSendID() string {
	if x != nil {
		return x.SourceMessageSendID
	}
	return ""
}

func (x *MessageRevokedContent) GetSourceMessageSenderNickname() string {
	if x != nil {
		return x.SourceMessageSenderNickname
	}
	return ""
}

func (x *MessageRevokedContent) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageRevokedContent) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MessageRevokedContent) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type ClearConversationTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID          string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConversationIDs []string `protobuf:"bytes,2,rep,name=conversationIDs,proto3" json:"conversationIDs,omitempty"`
}

func (x *ClearConversationTips) Reset() {
	*x = ClearConversationTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearConversationTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearConversationTips) ProtoMessage() {}

func (x *ClearConversationTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearConversationTips.ProtoReflect.Descriptor instead.
func (*ClearConversationTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{64}
}

func (x *ClearConversationTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ClearConversationTips) GetConversationIDs() []string {
	if x != nil {
		return x.ConversationIDs
	}
	return nil
}

type DeleteMsgsTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID         string  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ConversationID string  `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Seqs           []int64 `protobuf:"varint,3,rep,packed,name=seqs,proto3" json:"seqs,omitempty"`
}

func (x *DeleteMsgsTips) Reset() {
	*x = DeleteMsgsTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMsgsTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMsgsTips) ProtoMessage() {}

func (x *DeleteMsgsTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMsgsTips.ProtoReflect.Descriptor instead.
func (*DeleteMsgsTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{65}
}

func (x *DeleteMsgsTips) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *DeleteMsgsTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMsgsTips) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

type MarkAsReadTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkAsReadUserID string  `protobuf:"bytes,1,opt,name=markAsReadUserID,proto3" json:"markAsReadUserID,omitempty"`
	ConversationID   string  `protobuf:"bytes,2,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	Seqs             []int64 `protobuf:"varint,3,rep,packed,name=seqs,proto3" json:"seqs,omitempty"`
	HasReadSeq       int64   `protobuf:"varint,4,opt,name=hasReadSeq,proto3" json:"hasReadSeq,omitempty"`
}

func (x *MarkAsReadTips) Reset() {
	*x = MarkAsReadTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAsReadTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadTips) ProtoMessage() {}

func (x *MarkAsReadTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadTips.ProtoReflect.Descriptor instead.
func (*MarkAsReadTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{66}
}

func (x *MarkAsReadTips) GetMarkAsReadUserID() string {
	if x != nil {
		return x.MarkAsReadUserID
	}
	return ""
}

func (x *MarkAsReadTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *MarkAsReadTips) GetSeqs() []int64 {
	if x != nil {
		return x.Seqs
	}
	return nil
}

func (x *MarkAsReadTips) GetHasReadSeq() int64 {
	if x != nil {
		return x.HasReadSeq
	}
	return 0
}

type FriendsInfoUpdateTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID,proto3" json:"fromToUserID,omitempty"`
	FriendIDs    []string      `protobuf:"bytes,2,rep,name=friendIDs,proto3" json:"friendIDs,omitempty"`
}

func (x *FriendsInfoUpdateTips) Reset() {
	*x = FriendsInfoUpdateTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendsInfoUpdateTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendsInfoUpdateTips) ProtoMessage() {}

func (x *FriendsInfoUpdateTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendsInfoUpdateTips.ProtoReflect.Descriptor instead.
func (*FriendsInfoUpdateTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{67}
}

func (x *FriendsInfoUpdateTips) GetFromToUserID() *FromToUserID {
	if x != nil {
		return x.FromToUserID
	}
	return nil
}

func (x *FriendsInfoUpdateTips) GetFriendIDs() []string {
	if x != nil {
		return x.FriendIDs
	}
	return nil
}

type SubUserOnlineStatusElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID            string  `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	OnlinePlatformIDs []int32 `protobuf:"varint,2,rep,packed,name=onlinePlatformIDs,proto3" json:"onlinePlatformIDs,omitempty"`
}

func (x *SubUserOnlineStatusElem) Reset() {
	*x = SubUserOnlineStatusElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubUserOnlineStatusElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubUserOnlineStatusElem) ProtoMessage() {}

func (x *SubUserOnlineStatusElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubUserOnlineStatusElem.ProtoReflect.Descriptor instead.
func (*SubUserOnlineStatusElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{68}
}

func (x *SubUserOnlineStatusElem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SubUserOnlineStatusElem) GetOnlinePlatformIDs() []int32 {
	if x != nil {
		return x.OnlinePlatformIDs
	}
	return nil
}

type SubUserOnlineStatusTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribers []*SubUserOnlineStatusElem `protobuf:"bytes,1,rep,name=subscribers,proto3" json:"subscribers,omitempty"`
}

func (x *SubUserOnlineStatusTips) Reset() {
	*x = SubUserOnlineStatusTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubUserOnlineStatusTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubUserOnlineStatusTips) ProtoMessage() {}

func (x *SubUserOnlineStatusTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubUserOnlineStatusTips.ProtoReflect.Descriptor instead.
func (*SubUserOnlineStatusTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{69}
}

func (x *SubUserOnlineStatusTips) GetSubscribers() []*SubUserOnlineStatusElem {
	if x != nil {
		return x.Subscribers
	}
	return nil
}

type SubUserOnlineStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscribeUserID   []string `protobuf:"bytes,1,rep,name=subscribeUserID,proto3" json:"subscribeUserID,omitempty"`
	UnsubscribeUserID []string `protobuf:"bytes,2,rep,name=unsubscribeUserID,proto3" json:"unsubscribeUserID,omitempty"`
}

func (x *SubUserOnlineStatus) Reset() {
	*x = SubUserOnlineStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubUserOnlineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubUserOnlineStatus) ProtoMessage() {}

func (x *SubUserOnlineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubUserOnlineStatus.ProtoReflect.Descriptor instead.
func (*SubUserOnlineStatus) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{70}
}

func (x *SubUserOnlineStatus) GetSubscribeUserID() []string {
	if x != nil {
		return x.SubscribeUserID
	}
	return nil
}

func (x *SubUserOnlineStatus) GetUnsubscribeUserID() []string {
	if x != nil {
		return x.UnsubscribeUserID
	}
	return nil
}

type StreamMsgTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string   `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string   `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	StartIndex     int64    `protobuf:"varint,3,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	Packets        []string `protobuf:"bytes,4,rep,name=packets,proto3" json:"packets,omitempty"`
	End            bool     `protobuf:"varint,5,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StreamMsgTips) Reset() {
	*x = StreamMsgTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMsgTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMsgTips) ProtoMessage() {}

func (x *StreamMsgTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMsgTips.ProtoReflect.Descriptor instead.
func (*StreamMsgTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{71}
}

func (x *StreamMsgTips) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *StreamMsgTips) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *StreamMsgTips) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *StreamMsgTips) GetPackets() []string {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *StreamMsgTips) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type IMMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID      string            `protobuf:"bytes,1,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	ServerMsgID      string            `protobuf:"bytes,2,opt,name=serverMsgID,proto3" json:"serverMsgID,omitempty"`
	CreateTime       int64             `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	SendTime         int64             `protobuf:"varint,4,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	SessionType      SessionType       `protobuf:"varint,5,opt,name=sessionType,proto3,enum=openim.sdk.common.SessionType" json:"sessionType,omitempty"`
	SendID           string            `protobuf:"bytes,6,opt,name=sendID,proto3" json:"sendID,omitempty"`
	RecvID           string            `protobuf:"bytes,7,opt,name=recvID,proto3" json:"recvID,omitempty"`
	MsgFrom          MsgFrom           `protobuf:"varint,8,opt,name=msgFrom,proto3,enum=openim.sdk.common.MsgFrom" json:"msgFrom,omitempty"`
	ContentType      ContentType       `protobuf:"varint,9,opt,name=contentType,proto3,enum=openim.sdk.common.ContentType" json:"contentType,omitempty"`
	SenderPlatformID Platform          `protobuf:"varint,10,opt,name=senderPlatformID,proto3,enum=openim.sdk.common.Platform" json:"senderPlatformID,omitempty"`
	SenderNickname   string            `protobuf:"bytes,11,opt,name=senderNickname,proto3" json:"senderNickname,omitempty"`
	SenderFaceURL    string            `protobuf:"bytes,12,opt,name=senderFaceURL,proto3" json:"senderFaceURL,omitempty"`
	GroupID          string            `protobuf:"bytes,13,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Seq              int64             `protobuf:"varint,15,opt,name=seq,proto3" json:"seq,omitempty"`
	IsRead           bool              `protobuf:"varint,16,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Status           MsgStatus         `protobuf:"varint,17,opt,name=status,proto3,enum=openim.sdk.common.MsgStatus" json:"status,omitempty"`
	OfflinePush      *OfflinePushInfo  `protobuf:"bytes,18,opt,name=offlinePush,proto3" json:"offlinePush,omitempty"`
	Ex               string            `protobuf:"bytes,20,opt,name=ex,proto3" json:"ex,omitempty"`
	LocalEx          string            `protobuf:"bytes,21,opt,name=localEx,proto3" json:"localEx,omitempty"`
	AttachedInfoElem *AttachedInfoElem `protobuf:"bytes,22,opt,name=attachedInfoElem,proto3" json:"attachedInfoElem,omitempty"`
	// Types that are assignable to Content:
	//
	//	*IMMessage_TextElem
	//	*IMMessage_CardElem
	//	*IMMessage_PictureElem
	//	*IMMessage_SoundElem
	//	*IMMessage_VideoElem
	//	*IMMessage_FileElem
	//	*IMMessage_MergeElem
	//	*IMMessage_AtTextElem
	//	*IMMessage_FaceElem
	//	*IMMessage_LocationElem
	//	*IMMessage_CustomElem
	//	*IMMessage_QuoteElem
	//	*IMMessage_AdvancedTextElem
	//	*IMMessage_TypingElem
	//	*IMMessage_StreamElem
	//	*IMMessage_GroupCreatedTips
	//	*IMMessage_GroupInfoSetTips
	//	*IMMessage_GroupInfoSetNameTips
	//	*IMMessage_GroupInfoSetAnnouncementTips
	//	*IMMessage_JoinGroupApplicationTips
	//	*IMMessage_MemberQuitTips
	//	*IMMessage_GroupApplicationAcceptedTips
	//	*IMMessage_GroupApplicationRejectedTips
	//	*IMMessage_GroupOwnerTransferredTips
	//	*IMMessage_MemberKickedTips
	//	*IMMessage_MemberInvitedTips
	//	*IMMessage_MemberEnterTips
	//	*IMMessage_GroupDismissedTips
	//	*IMMessage_GroupMemberMutedTips
	//	*IMMessage_GroupMemberCancelMutedTips
	//	*IMMessage_GroupMutedTips
	//	*IMMessage_GroupCancelMutedTips
	//	*IMMessage_GroupMemberInfoSetTips
	//	*IMMessage_FriendApplicationTips
	//	*IMMessage_FriendApplicationApprovedTips
	//	*IMMessage_FriendApplicationRejectedTips
	//	*IMMessage_FriendAddedTips
	//	*IMMessage_FriendDeletedTips
	//	*IMMessage_BlackAddedTips
	//	*IMMessage_BlackDeletedTips
	//	*IMMessage_FriendInfoChangedTips
	//	*IMMessage_UserInfoUpdatedTips
	//	*IMMessage_UserStatusChangeTips
	//	*IMMessage_UserCommandAddTips
	//	*IMMessage_UserCommandUpdateTips
	//	*IMMessage_UserCommandDeleteTips
	//	*IMMessage_ConversationUpdateTips
	//	*IMMessage_ConversationSetPrivateTips
	//	*IMMessage_ConversationHasReadTips
	//	*IMMessage_DeleteMessageTips
	//	*IMMessage_RevokeMsgTips
	//	*IMMessage_ClearConversationTips
	//	*IMMessage_DeleteMsgsTips
	//	*IMMessage_MarkAsReadTips
	//	*IMMessage_FriendsInfoUpdateTips
	//	*IMMessage_SubUserOnlineStatusTips
	//	*IMMessage_StreamMsgTips
	Content isIMMessage_Content `protobuf_oneof:"content"`
}

func (x *IMMessage) Reset() {
	*x = IMMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessage) ProtoMessage() {}

func (x *IMMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessage.ProtoReflect.Descriptor instead.
func (*IMMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{72}
}

func (x *IMMessage) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *IMMessage) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *IMMessage) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *IMMessage) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *IMMessage) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_SessionType_
}

func (x *IMMessage) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *IMMessage) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *IMMessage) GetMsgFrom() MsgFrom {
	if x != nil {
		return x.MsgFrom
	}
	return MsgFrom_MsgFrom_
}

func (x *IMMessage) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_ContentType_
}

func (x *IMMessage) GetSenderPlatformID() Platform {
	if x != nil {
		return x.SenderPlatformID
	}
	return Platform_Platform_
}

func (x *IMMessage) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *IMMessage) GetSenderFaceURL() string {
	if x != nil {
		return x.SenderFaceURL
	}
	return ""
}

func (x *IMMessage) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *IMMessage) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *IMMessage) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *IMMessage) GetStatus() MsgStatus {
	if x != nil {
		return x.Status
	}
	return MsgStatus_MsgStatus_
}

func (x *IMMessage) GetOfflinePush() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *IMMessage) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *IMMessage) GetLocalEx() string {
	if x != nil {
		return x.LocalEx
	}
	return ""
}

func (x *IMMessage) GetAttachedInfoElem() *AttachedInfoElem {
	if x != nil {
		return x.AttachedInfoElem
	}
	return nil
}

func (m *IMMessage) GetContent() isIMMessage_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *IMMessage) GetTextElem() *TextElem {
	if x, ok := x.GetContent().(*IMMessage_TextElem); ok {
		return x.TextElem
	}
	return nil
}

func (x *IMMessage) GetCardElem() *CardElem {
	if x, ok := x.GetContent().(*IMMessage_CardElem); ok {
		return x.CardElem
	}
	return nil
}

func (x *IMMessage) GetPictureElem() *PictureElem {
	if x, ok := x.GetContent().(*IMMessage_PictureElem); ok {
		return x.PictureElem
	}
	return nil
}

func (x *IMMessage) GetSoundElem() *SoundElem {
	if x, ok := x.GetContent().(*IMMessage_SoundElem); ok {
		return x.SoundElem
	}
	return nil
}

func (x *IMMessage) GetVideoElem() *VideoElem {
	if x, ok := x.GetContent().(*IMMessage_VideoElem); ok {
		return x.VideoElem
	}
	return nil
}

func (x *IMMessage) GetFileElem() *FileElem {
	if x, ok := x.GetContent().(*IMMessage_FileElem); ok {
		return x.FileElem
	}
	return nil
}

func (x *IMMessage) GetMergeElem() *MergeElem {
	if x, ok := x.GetContent().(*IMMessage_MergeElem); ok {
		return x.MergeElem
	}
	return nil
}

func (x *IMMessage) GetAtTextElem() *AtTextElem {
	if x, ok := x.GetContent().(*IMMessage_AtTextElem); ok {
		return x.AtTextElem
	}
	return nil
}

func (x *IMMessage) GetFaceElem() *FaceElem {
	if x, ok := x.GetContent().(*IMMessage_FaceElem); ok {
		return x.FaceElem
	}
	return nil
}

func (x *IMMessage) GetLocationElem() *LocationElem {
	if x, ok := x.GetContent().(*IMMessage_LocationElem); ok {
		return x.LocationElem
	}
	return nil
}

func (x *IMMessage) GetCustomElem() *CustomElem {
	if x, ok := x.GetContent().(*IMMessage_CustomElem); ok {
		return x.CustomElem
	}
	return nil
}

func (x *IMMessage) GetQuoteElem() *QuoteElem {
	if x, ok := x.GetContent().(*IMMessage_QuoteElem); ok {
		return x.QuoteElem
	}
	return nil
}

func (x *IMMessage) GetAdvancedTextElem() *AdvancedTextElem {
	if x, ok := x.GetContent().(*IMMessage_AdvancedTextElem); ok {
		return x.AdvancedTextElem
	}
	return nil
}

func (x *IMMessage) GetTypingElem() *TypingElem {
	if x, ok := x.GetContent().(*IMMessage_TypingElem); ok {
		return x.TypingElem
	}
	return nil
}

func (x *IMMessage) GetStreamElem() *StreamElem {
	if x, ok := x.GetContent().(*IMMessage_StreamElem); ok {
		return x.StreamElem
	}
	return nil
}

func (x *IMMessage) GetGroupCreatedTips() *GroupCreatedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupCreatedTips); ok {
		return x.GroupCreatedTips
	}
	return nil
}

func (x *IMMessage) GetGroupInfoSetTips() *GroupInfoSetTips {
	if x, ok := x.GetContent().(*IMMessage_GroupInfoSetTips); ok {
		return x.GroupInfoSetTips
	}
	return nil
}

func (x *IMMessage) GetGroupInfoSetNameTips() *GroupInfoSetNameTips {
	if x, ok := x.GetContent().(*IMMessage_GroupInfoSetNameTips); ok {
		return x.GroupInfoSetNameTips
	}
	return nil
}

func (x *IMMessage) GetGroupInfoSetAnnouncementTips() *GroupInfoSetAnnouncementTips {
	if x, ok := x.GetContent().(*IMMessage_GroupInfoSetAnnouncementTips); ok {
		return x.GroupInfoSetAnnouncementTips
	}
	return nil
}

func (x *IMMessage) GetJoinGroupApplicationTips() *JoinGroupApplicationTips {
	if x, ok := x.GetContent().(*IMMessage_JoinGroupApplicationTips); ok {
		return x.JoinGroupApplicationTips
	}
	return nil
}

func (x *IMMessage) GetMemberQuitTips() *MemberQuitTips {
	if x, ok := x.GetContent().(*IMMessage_MemberQuitTips); ok {
		return x.MemberQuitTips
	}
	return nil
}

func (x *IMMessage) GetGroupApplicationAcceptedTips() *GroupApplicationAcceptedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupApplicationAcceptedTips); ok {
		return x.GroupApplicationAcceptedTips
	}
	return nil
}

func (x *IMMessage) GetGroupApplicationRejectedTips() *GroupApplicationRejectedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupApplicationRejectedTips); ok {
		return x.GroupApplicationRejectedTips
	}
	return nil
}

func (x *IMMessage) GetGroupOwnerTransferredTips() *GroupOwnerTransferredTips {
	if x, ok := x.GetContent().(*IMMessage_GroupOwnerTransferredTips); ok {
		return x.GroupOwnerTransferredTips
	}
	return nil
}

func (x *IMMessage) GetMemberKickedTips() *MemberKickedTips {
	if x, ok := x.GetContent().(*IMMessage_MemberKickedTips); ok {
		return x.MemberKickedTips
	}
	return nil
}

func (x *IMMessage) GetMemberInvitedTips() *MemberInvitedTips {
	if x, ok := x.GetContent().(*IMMessage_MemberInvitedTips); ok {
		return x.MemberInvitedTips
	}
	return nil
}

func (x *IMMessage) GetMemberEnterTips() *MemberEnterTips {
	if x, ok := x.GetContent().(*IMMessage_MemberEnterTips); ok {
		return x.MemberEnterTips
	}
	return nil
}

func (x *IMMessage) GetGroupDismissedTips() *GroupDismissedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupDismissedTips); ok {
		return x.GroupDismissedTips
	}
	return nil
}

func (x *IMMessage) GetGroupMemberMutedTips() *GroupMemberMutedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupMemberMutedTips); ok {
		return x.GroupMemberMutedTips
	}
	return nil
}

func (x *IMMessage) GetGroupMemberCancelMutedTips() *GroupMemberCancelMutedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupMemberCancelMutedTips); ok {
		return x.GroupMemberCancelMutedTips
	}
	return nil
}

func (x *IMMessage) GetGroupMutedTips() *GroupMutedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupMutedTips); ok {
		return x.GroupMutedTips
	}
	return nil
}

func (x *IMMessage) GetGroupCancelMutedTips() *GroupCancelMutedTips {
	if x, ok := x.GetContent().(*IMMessage_GroupCancelMutedTips); ok {
		return x.GroupCancelMutedTips
	}
	return nil
}

func (x *IMMessage) GetGroupMemberInfoSetTips() *GroupMemberInfoSetTips {
	if x, ok := x.GetContent().(*IMMessage_GroupMemberInfoSetTips); ok {
		return x.GroupMemberInfoSetTips
	}
	return nil
}

func (x *IMMessage) GetFriendApplicationTips() *FriendApplicationTips {
	if x, ok := x.GetContent().(*IMMessage_FriendApplicationTips); ok {
		return x.FriendApplicationTips
	}
	return nil
}

func (x *IMMessage) GetFriendApplicationApprovedTips() *FriendApplicationApprovedTips {
	if x, ok := x.GetContent().(*IMMessage_FriendApplicationApprovedTips); ok {
		return x.FriendApplicationApprovedTips
	}
	return nil
}

func (x *IMMessage) GetFriendApplicationRejectedTips() *FriendApplicationRejectedTips {
	if x, ok := x.GetContent().(*IMMessage_FriendApplicationRejectedTips); ok {
		return x.FriendApplicationRejectedTips
	}
	return nil
}

func (x *IMMessage) GetFriendAddedTips() *FriendAddedTips {
	if x, ok := x.GetContent().(*IMMessage_FriendAddedTips); ok {
		return x.FriendAddedTips
	}
	return nil
}

func (x *IMMessage) GetFriendDeletedTips() *FriendDeletedTips {
	if x, ok := x.GetContent().(*IMMessage_FriendDeletedTips); ok {
		return x.FriendDeletedTips
	}
	return nil
}

func (x *IMMessage) GetBlackAddedTips() *BlackAddedTips {
	if x, ok := x.GetContent().(*IMMessage_BlackAddedTips); ok {
		return x.BlackAddedTips
	}
	return nil
}

func (x *IMMessage) GetBlackDeletedTips() *BlackDeletedTips {
	if x, ok := x.GetContent().(*IMMessage_BlackDeletedTips); ok {
		return x.BlackDeletedTips
	}
	return nil
}

func (x *IMMessage) GetFriendInfoChangedTips() *FriendInfoChangedTips {
	if x, ok := x.GetContent().(*IMMessage_FriendInfoChangedTips); ok {
		return x.FriendInfoChangedTips
	}
	return nil
}

func (x *IMMessage) GetUserInfoUpdatedTips() *UserInfoUpdatedTips {
	if x, ok := x.GetContent().(*IMMessage_UserInfoUpdatedTips); ok {
		return x.UserInfoUpdatedTips
	}
	return nil
}

func (x *IMMessage) GetUserStatusChangeTips() *UserStatusChangeTips {
	if x, ok := x.GetContent().(*IMMessage_UserStatusChangeTips); ok {
		return x.UserStatusChangeTips
	}
	return nil
}

func (x *IMMessage) GetUserCommandAddTips() *UserCommandAddTips {
	if x, ok := x.GetContent().(*IMMessage_UserCommandAddTips); ok {
		return x.UserCommandAddTips
	}
	return nil
}

func (x *IMMessage) GetUserCommandUpdateTips() *UserCommandUpdateTips {
	if x, ok := x.GetContent().(*IMMessage_UserCommandUpdateTips); ok {
		return x.UserCommandUpdateTips
	}
	return nil
}

func (x *IMMessage) GetUserCommandDeleteTips() *UserCommandDeleteTips {
	if x, ok := x.GetContent().(*IMMessage_UserCommandDeleteTips); ok {
		return x.UserCommandDeleteTips
	}
	return nil
}

func (x *IMMessage) GetConversationUpdateTips() *ConversationUpdateTips {
	if x, ok := x.GetContent().(*IMMessage_ConversationUpdateTips); ok {
		return x.ConversationUpdateTips
	}
	return nil
}

func (x *IMMessage) GetConversationSetPrivateTips() *ConversationSetPrivateTips {
	if x, ok := x.GetContent().(*IMMessage_ConversationSetPrivateTips); ok {
		return x.ConversationSetPrivateTips
	}
	return nil
}

func (x *IMMessage) GetConversationHasReadTips() *ConversationHasReadTips {
	if x, ok := x.GetContent().(*IMMessage_ConversationHasReadTips); ok {
		return x.ConversationHasReadTips
	}
	return nil
}

func (x *IMMessage) GetDeleteMessageTips() *DeleteMessageTips {
	if x, ok := x.GetContent().(*IMMessage_DeleteMessageTips); ok {
		return x.DeleteMessageTips
	}
	return nil
}

func (x *IMMessage) GetRevokeMsgTips() *RevokeMsgTips {
	if x, ok := x.GetContent().(*IMMessage_RevokeMsgTips); ok {
		return x.RevokeMsgTips
	}
	return nil
}

func (x *IMMessage) GetClearConversationTips() *ClearConversationTips {
	if x, ok := x.GetContent().(*IMMessage_ClearConversationTips); ok {
		return x.ClearConversationTips
	}
	return nil
}

func (x *IMMessage) GetDeleteMsgsTips() *DeleteMsgsTips {
	if x, ok := x.GetContent().(*IMMessage_DeleteMsgsTips); ok {
		return x.DeleteMsgsTips
	}
	return nil
}

func (x *IMMessage) GetMarkAsReadTips() *MarkAsReadTips {
	if x, ok := x.GetContent().(*IMMessage_MarkAsReadTips); ok {
		return x.MarkAsReadTips
	}
	return nil
}

func (x *IMMessage) GetFriendsInfoUpdateTips() *FriendsInfoUpdateTips {
	if x, ok := x.GetContent().(*IMMessage_FriendsInfoUpdateTips); ok {
		return x.FriendsInfoUpdateTips
	}
	return nil
}

func (x *IMMessage) GetSubUserOnlineStatusTips() *SubUserOnlineStatusTips {
	if x, ok := x.GetContent().(*IMMessage_SubUserOnlineStatusTips); ok {
		return x.SubUserOnlineStatusTips
	}
	return nil
}

func (x *IMMessage) GetStreamMsgTips() *StreamMsgTips {
	if x, ok := x.GetContent().(*IMMessage_StreamMsgTips); ok {
		return x.StreamMsgTips
	}
	return nil
}

type isIMMessage_Content interface {
	isIMMessage_Content()
}

type IMMessage_TextElem struct {
	TextElem *TextElem `protobuf:"bytes,23,opt,name=textElem,proto3,oneof"`
}

type IMMessage_CardElem struct {
	CardElem *CardElem `protobuf:"bytes,24,opt,name=cardElem,proto3,oneof"`
}

type IMMessage_PictureElem struct {
	PictureElem *PictureElem `protobuf:"bytes,25,opt,name=pictureElem,proto3,oneof"`
}

type IMMessage_SoundElem struct {
	SoundElem *SoundElem `protobuf:"bytes,26,opt,name=soundElem,proto3,oneof"`
}

type IMMessage_VideoElem struct {
	VideoElem *VideoElem `protobuf:"bytes,27,opt,name=videoElem,proto3,oneof"`
}

type IMMessage_FileElem struct {
	FileElem *FileElem `protobuf:"bytes,28,opt,name=fileElem,proto3,oneof"`
}

type IMMessage_MergeElem struct {
	MergeElem *MergeElem `protobuf:"bytes,29,opt,name=mergeElem,proto3,oneof"`
}

type IMMessage_AtTextElem struct {
	AtTextElem *AtTextElem `protobuf:"bytes,30,opt,name=atTextElem,proto3,oneof"`
}

type IMMessage_FaceElem struct {
	FaceElem *FaceElem `protobuf:"bytes,31,opt,name=faceElem,proto3,oneof"`
}

type IMMessage_LocationElem struct {
	LocationElem *LocationElem `protobuf:"bytes,32,opt,name=locationElem,proto3,oneof"`
}

type IMMessage_CustomElem struct {
	CustomElem *CustomElem `protobuf:"bytes,33,opt,name=customElem,proto3,oneof"`
}

type IMMessage_QuoteElem struct {
	QuoteElem *QuoteElem `protobuf:"bytes,34,opt,name=quoteElem,proto3,oneof"`
}

type IMMessage_AdvancedTextElem struct {
	AdvancedTextElem *AdvancedTextElem `protobuf:"bytes,35,opt,name=advancedTextElem,proto3,oneof"`
}

type IMMessage_TypingElem struct {
	TypingElem *TypingElem `protobuf:"bytes,36,opt,name=typingElem,proto3,oneof"`
}

type IMMessage_StreamElem struct {
	StreamElem *StreamElem `protobuf:"bytes,37,opt,name=streamElem,proto3,oneof"`
}

type IMMessage_GroupCreatedTips struct {
	GroupCreatedTips *GroupCreatedTips `protobuf:"bytes,38,opt,name=groupCreatedTips,proto3,oneof"`
}

type IMMessage_GroupInfoSetTips struct {
	GroupInfoSetTips *GroupInfoSetTips `protobuf:"bytes,39,opt,name=groupInfoSetTips,proto3,oneof"`
}

type IMMessage_GroupInfoSetNameTips struct {
	GroupInfoSetNameTips *GroupInfoSetNameTips `protobuf:"bytes,40,opt,name=groupInfoSetNameTips,proto3,oneof"`
}

type IMMessage_GroupInfoSetAnnouncementTips struct {
	GroupInfoSetAnnouncementTips *GroupInfoSetAnnouncementTips `protobuf:"bytes,41,opt,name=groupInfoSetAnnouncementTips,proto3,oneof"`
}

type IMMessage_JoinGroupApplicationTips struct {
	JoinGroupApplicationTips *JoinGroupApplicationTips `protobuf:"bytes,42,opt,name=joinGroupApplicationTips,proto3,oneof"`
}

type IMMessage_MemberQuitTips struct {
	MemberQuitTips *MemberQuitTips `protobuf:"bytes,43,opt,name=memberQuitTips,proto3,oneof"`
}

type IMMessage_GroupApplicationAcceptedTips struct {
	GroupApplicationAcceptedTips *GroupApplicationAcceptedTips `protobuf:"bytes,44,opt,name=groupApplicationAcceptedTips,proto3,oneof"`
}

type IMMessage_GroupApplicationRejectedTips struct {
	GroupApplicationRejectedTips *GroupApplicationRejectedTips `protobuf:"bytes,45,opt,name=groupApplicationRejectedTips,proto3,oneof"`
}

type IMMessage_GroupOwnerTransferredTips struct {
	GroupOwnerTransferredTips *GroupOwnerTransferredTips `protobuf:"bytes,46,opt,name=groupOwnerTransferredTips,proto3,oneof"`
}

type IMMessage_MemberKickedTips struct {
	MemberKickedTips *MemberKickedTips `protobuf:"bytes,47,opt,name=memberKickedTips,proto3,oneof"`
}

type IMMessage_MemberInvitedTips struct {
	MemberInvitedTips *MemberInvitedTips `protobuf:"bytes,48,opt,name=memberInvitedTips,proto3,oneof"`
}

type IMMessage_MemberEnterTips struct {
	MemberEnterTips *MemberEnterTips `protobuf:"bytes,49,opt,name=memberEnterTips,proto3,oneof"`
}

type IMMessage_GroupDismissedTips struct {
	GroupDismissedTips *GroupDismissedTips `protobuf:"bytes,50,opt,name=groupDismissedTips,proto3,oneof"`
}

type IMMessage_GroupMemberMutedTips struct {
	GroupMemberMutedTips *GroupMemberMutedTips `protobuf:"bytes,51,opt,name=groupMemberMutedTips,proto3,oneof"`
}

type IMMessage_GroupMemberCancelMutedTips struct {
	GroupMemberCancelMutedTips *GroupMemberCancelMutedTips `protobuf:"bytes,52,opt,name=groupMemberCancelMutedTips,proto3,oneof"`
}

type IMMessage_GroupMutedTips struct {
	GroupMutedTips *GroupMutedTips `protobuf:"bytes,53,opt,name=groupMutedTips,proto3,oneof"`
}

type IMMessage_GroupCancelMutedTips struct {
	GroupCancelMutedTips *GroupCancelMutedTips `protobuf:"bytes,54,opt,name=groupCancelMutedTips,proto3,oneof"`
}

type IMMessage_GroupMemberInfoSetTips struct {
	GroupMemberInfoSetTips *GroupMemberInfoSetTips `protobuf:"bytes,55,opt,name=groupMemberInfoSetTips,proto3,oneof"`
}

type IMMessage_FriendApplicationTips struct {
	FriendApplicationTips *FriendApplicationTips `protobuf:"bytes,56,opt,name=friendApplicationTips,proto3,oneof"`
}

type IMMessage_FriendApplicationApprovedTips struct {
	FriendApplicationApprovedTips *FriendApplicationApprovedTips `protobuf:"bytes,57,opt,name=friendApplicationApprovedTips,proto3,oneof"`
}

type IMMessage_FriendApplicationRejectedTips struct {
	FriendApplicationRejectedTips *FriendApplicationRejectedTips `protobuf:"bytes,58,opt,name=friendApplicationRejectedTips,proto3,oneof"`
}

type IMMessage_FriendAddedTips struct {
	FriendAddedTips *FriendAddedTips `protobuf:"bytes,59,opt,name=friendAddedTips,proto3,oneof"`
}

type IMMessage_FriendDeletedTips struct {
	FriendDeletedTips *FriendDeletedTips `protobuf:"bytes,60,opt,name=friendDeletedTips,proto3,oneof"`
}

type IMMessage_BlackAddedTips struct {
	BlackAddedTips *BlackAddedTips `protobuf:"bytes,61,opt,name=blackAddedTips,proto3,oneof"`
}

type IMMessage_BlackDeletedTips struct {
	BlackDeletedTips *BlackDeletedTips `protobuf:"bytes,62,opt,name=blackDeletedTips,proto3,oneof"`
}

type IMMessage_FriendInfoChangedTips struct {
	FriendInfoChangedTips *FriendInfoChangedTips `protobuf:"bytes,63,opt,name=friendInfoChangedTips,proto3,oneof"`
}

type IMMessage_UserInfoUpdatedTips struct {
	UserInfoUpdatedTips *UserInfoUpdatedTips `protobuf:"bytes,64,opt,name=userInfoUpdatedTips,proto3,oneof"`
}

type IMMessage_UserStatusChangeTips struct {
	UserStatusChangeTips *UserStatusChangeTips `protobuf:"bytes,65,opt,name=userStatusChangeTips,proto3,oneof"`
}

type IMMessage_UserCommandAddTips struct {
	UserCommandAddTips *UserCommandAddTips `protobuf:"bytes,66,opt,name=userCommandAddTips,proto3,oneof"`
}

type IMMessage_UserCommandUpdateTips struct {
	UserCommandUpdateTips *UserCommandUpdateTips `protobuf:"bytes,67,opt,name=userCommandUpdateTips,proto3,oneof"`
}

type IMMessage_UserCommandDeleteTips struct {
	UserCommandDeleteTips *UserCommandDeleteTips `protobuf:"bytes,68,opt,name=userCommandDeleteTips,proto3,oneof"`
}

type IMMessage_ConversationUpdateTips struct {
	ConversationUpdateTips *ConversationUpdateTips `protobuf:"bytes,69,opt,name=conversationUpdateTips,proto3,oneof"`
}

type IMMessage_ConversationSetPrivateTips struct {
	ConversationSetPrivateTips *ConversationSetPrivateTips `protobuf:"bytes,70,opt,name=conversationSetPrivateTips,proto3,oneof"`
}

type IMMessage_ConversationHasReadTips struct {
	ConversationHasReadTips *ConversationHasReadTips `protobuf:"bytes,71,opt,name=conversationHasReadTips,proto3,oneof"`
}

type IMMessage_DeleteMessageTips struct {
	DeleteMessageTips *DeleteMessageTips `protobuf:"bytes,72,opt,name=deleteMessageTips,proto3,oneof"`
}

type IMMessage_RevokeMsgTips struct {
	RevokeMsgTips *RevokeMsgTips `protobuf:"bytes,73,opt,name=revokeMsgTips,proto3,oneof"`
}

type IMMessage_ClearConversationTips struct {
	ClearConversationTips *ClearConversationTips `protobuf:"bytes,74,opt,name=clearConversationTips,proto3,oneof"`
}

type IMMessage_DeleteMsgsTips struct {
	DeleteMsgsTips *DeleteMsgsTips `protobuf:"bytes,75,opt,name=deleteMsgsTips,proto3,oneof"`
}

type IMMessage_MarkAsReadTips struct {
	MarkAsReadTips *MarkAsReadTips `protobuf:"bytes,76,opt,name=markAsReadTips,proto3,oneof"`
}

type IMMessage_FriendsInfoUpdateTips struct {
	FriendsInfoUpdateTips *FriendsInfoUpdateTips `protobuf:"bytes,77,opt,name=friendsInfoUpdateTips,proto3,oneof"`
}

type IMMessage_SubUserOnlineStatusTips struct {
	SubUserOnlineStatusTips *SubUserOnlineStatusTips `protobuf:"bytes,78,opt,name=subUserOnlineStatusTips,proto3,oneof"`
}

type IMMessage_StreamMsgTips struct {
	StreamMsgTips *StreamMsgTips `protobuf:"bytes,79,opt,name=streamMsgTips,proto3,oneof"`
}

func (*IMMessage_TextElem) isIMMessage_Content() {}

func (*IMMessage_CardElem) isIMMessage_Content() {}

func (*IMMessage_PictureElem) isIMMessage_Content() {}

func (*IMMessage_SoundElem) isIMMessage_Content() {}

func (*IMMessage_VideoElem) isIMMessage_Content() {}

func (*IMMessage_FileElem) isIMMessage_Content() {}

func (*IMMessage_MergeElem) isIMMessage_Content() {}

func (*IMMessage_AtTextElem) isIMMessage_Content() {}

func (*IMMessage_FaceElem) isIMMessage_Content() {}

func (*IMMessage_LocationElem) isIMMessage_Content() {}

func (*IMMessage_CustomElem) isIMMessage_Content() {}

func (*IMMessage_QuoteElem) isIMMessage_Content() {}

func (*IMMessage_AdvancedTextElem) isIMMessage_Content() {}

func (*IMMessage_TypingElem) isIMMessage_Content() {}

func (*IMMessage_StreamElem) isIMMessage_Content() {}

func (*IMMessage_GroupCreatedTips) isIMMessage_Content() {}

func (*IMMessage_GroupInfoSetTips) isIMMessage_Content() {}

func (*IMMessage_GroupInfoSetNameTips) isIMMessage_Content() {}

func (*IMMessage_GroupInfoSetAnnouncementTips) isIMMessage_Content() {}

func (*IMMessage_JoinGroupApplicationTips) isIMMessage_Content() {}

func (*IMMessage_MemberQuitTips) isIMMessage_Content() {}

func (*IMMessage_GroupApplicationAcceptedTips) isIMMessage_Content() {}

func (*IMMessage_GroupApplicationRejectedTips) isIMMessage_Content() {}

func (*IMMessage_GroupOwnerTransferredTips) isIMMessage_Content() {}

func (*IMMessage_MemberKickedTips) isIMMessage_Content() {}

func (*IMMessage_MemberInvitedTips) isIMMessage_Content() {}

func (*IMMessage_MemberEnterTips) isIMMessage_Content() {}

func (*IMMessage_GroupDismissedTips) isIMMessage_Content() {}

func (*IMMessage_GroupMemberMutedTips) isIMMessage_Content() {}

func (*IMMessage_GroupMemberCancelMutedTips) isIMMessage_Content() {}

func (*IMMessage_GroupMutedTips) isIMMessage_Content() {}

func (*IMMessage_GroupCancelMutedTips) isIMMessage_Content() {}

func (*IMMessage_GroupMemberInfoSetTips) isIMMessage_Content() {}

func (*IMMessage_FriendApplicationTips) isIMMessage_Content() {}

func (*IMMessage_FriendApplicationApprovedTips) isIMMessage_Content() {}

func (*IMMessage_FriendApplicationRejectedTips) isIMMessage_Content() {}

func (*IMMessage_FriendAddedTips) isIMMessage_Content() {}

func (*IMMessage_FriendDeletedTips) isIMMessage_Content() {}

func (*IMMessage_BlackAddedTips) isIMMessage_Content() {}

func (*IMMessage_BlackDeletedTips) isIMMessage_Content() {}

func (*IMMessage_FriendInfoChangedTips) isIMMessage_Content() {}

func (*IMMessage_UserInfoUpdatedTips) isIMMessage_Content() {}

func (*IMMessage_UserStatusChangeTips) isIMMessage_Content() {}

func (*IMMessage_UserCommandAddTips) isIMMessage_Content() {}

func (*IMMessage_UserCommandUpdateTips) isIMMessage_Content() {}

func (*IMMessage_UserCommandDeleteTips) isIMMessage_Content() {}

func (*IMMessage_ConversationUpdateTips) isIMMessage_Content() {}

func (*IMMessage_ConversationSetPrivateTips) isIMMessage_Content() {}

func (*IMMessage_ConversationHasReadTips) isIMMessage_Content() {}

func (*IMMessage_DeleteMessageTips) isIMMessage_Content() {}

func (*IMMessage_RevokeMsgTips) isIMMessage_Content() {}

func (*IMMessage_ClearConversationTips) isIMMessage_Content() {}

func (*IMMessage_DeleteMsgsTips) isIMMessage_Content() {}

func (*IMMessage_MarkAsReadTips) isIMMessage_Content() {}

func (*IMMessage_FriendsInfoUpdateTips) isIMMessage_Content() {}

func (*IMMessage_SubUserOnlineStatusTips) isIMMessage_Content() {}

func (*IMMessage_StreamMsgTips) isIMMessage_Content() {}

// ##########################################
type MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	MsgIDList   []string `protobuf:"bytes,3,rep,name=msgIDList,proto3" json:"msgIDList,omitempty"`
	ReadTime    int64    `protobuf:"varint,4,opt,name=readTime,proto3" json:"readTime,omitempty"`
	MsgFrom     int32    `protobuf:"varint,5,opt,name=msgFrom,proto3" json:"msgFrom,omitempty"`
	ContentType int32    `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	SessionType int32    `protobuf:"varint,7,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
}

func (x *MessageReceipt) Reset() {
	*x = MessageReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceipt) ProtoMessage() {}

func (x *MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceipt.ProtoReflect.Descriptor instead.
func (*MessageReceipt) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{73}
}

func (x *MessageReceipt) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MessageReceipt) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MessageReceipt) GetMsgIDList() []string {
	if x != nil {
		return x.MsgIDList
	}
	return nil
}

func (x *MessageReceipt) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *MessageReceipt) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MessageReceipt) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageReceipt) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type MessageRevoked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokerID                   string `protobuf:"bytes,1,opt,name=revokerID,proto3" json:"revokerID,omitempty"`
	RevokerRole                 int32  `protobuf:"varint,2,opt,name=revokerRole,proto3" json:"revokerRole,omitempty"`
	ClientMsgID                 string `protobuf:"bytes,3,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	RevokerNickname             string `protobuf:"bytes,4,opt,name=revokerNickname,proto3" json:"revokerNickname,omitempty"`
	RevokeTime                  int64  `protobuf:"varint,5,opt,name=revokeTime,proto3" json:"revokeTime,omitempty"`
	SourceMessageSendTime       int64  `protobuf:"varint,6,opt,name=sourceMessageSendTime,proto3" json:"sourceMessageSendTime,omitempty"`
	SourceMessageSendID         string `protobuf:"bytes,7,opt,name=sourceMessageSendID,proto3" json:"sourceMessageSendID,omitempty"`
	SourceMessageSenderNickname string `protobuf:"bytes,8,opt,name=sourceMessageSenderNickname,proto3" json:"sourceMessageSenderNickname,omitempty"`
	SessionType                 int32  `protobuf:"varint,9,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	Seq                         int64  `protobuf:"varint,10,opt,name=seq,proto3" json:"seq,omitempty"`
	Ex                          string `protobuf:"bytes,11,opt,name=ex,proto3" json:"ex,omitempty"`
	IsAdminRevoke               bool   `protobuf:"varint,12,opt,name=isAdminRevoke,proto3" json:"isAdminRevoke,omitempty"`
}

func (x *MessageRevoked) Reset() {
	*x = MessageRevoked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRevoked) ProtoMessage() {}

func (x *MessageRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRevoked.ProtoReflect.Descriptor instead.
func (*MessageRevoked) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{74}
}

func (x *MessageRevoked) GetRevokerID() string {
	if x != nil {
		return x.RevokerID
	}
	return ""
}

func (x *MessageRevoked) GetRevokerRole() int32 {
	if x != nil {
		return x.RevokerRole
	}
	return 0
}

func (x *MessageRevoked) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MessageRevoked) GetRevokerNickname() string {
	if x != nil {
		return x.RevokerNickname
	}
	return ""
}

func (x *MessageRevoked) GetRevokeTime() int64 {
	if x != nil {
		return x.RevokeTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendTime() int64 {
	if x != nil {
		return x.SourceMessageSendTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendID() string {
	if x != nil {
		return x.SourceMessageSendID
	}
	return ""
}

func (x *MessageRevoked) GetSourceMessageSenderNickname() string {
	if x != nil {
		return x.SourceMessageSenderNickname
	}
	return ""
}

func (x *MessageRevoked) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageRevoked) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MessageRevoked) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MessageRevoked) GetIsAdminRevoke() bool {
	if x != nil {
		return x.IsAdminRevoke
	}
	return false
}

type MessageReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID  string `protobuf:"bytes,1,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	ReactionType int32  `protobuf:"varint,2,opt,name=reactionType,proto3" json:"reactionType,omitempty"`
	Counter      int32  `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	UserID       string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID      string `protobuf:"bytes,5,opt,name=groupID,proto3" json:"groupID,omitempty"`
	SessionType  int32  `protobuf:"varint,6,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	Info         string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{75}
}

func (x *MessageReaction) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MessageReaction) GetReactionType() int32 {
	if x != nil {
		return x.ReactionType
	}
	return 0
}

func (x *MessageReaction) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *MessageReaction) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MessageReaction) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MessageReaction) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageReaction) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter          int32               `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Type             int32               `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserReactionList []*UserReactionElem `protobuf:"bytes,3,rep,name=userReactionList,proto3" json:"userReactionList,omitempty"`
	CanRepeat        bool                `protobuf:"varint,4,opt,name=canRepeat,proto3" json:"canRepeat,omitempty"`
	Info             string              `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ReactionElem) Reset() {
	*x = ReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionElem) ProtoMessage() {}

func (x *ReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionElem.ProtoReflect.Descriptor instead.
func (*ReactionElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{76}
}

func (x *ReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *ReactionElem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReactionElem) GetUserReactionList() []*UserReactionElem {
	if x != nil {
		return x.UserReactionList
	}
	return nil
}

func (x *ReactionElem) GetCanRepeat() bool {
	if x != nil {
		return x.CanRepeat
	}
	return false
}

func (x *ReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Counter int32  `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	Info    string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UserReactionElem) Reset() {
	*x = UserReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReactionElem) ProtoMessage() {}

func (x *UserReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReactionElem.ProtoReflect.Descriptor instead.
func (*UserReactionElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{77}
}

func (x *UserReactionElem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *UserReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetAdvancedHistoryMessageListParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID   string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	StartClientMsgID string `protobuf:"bytes,2,opt,name=startClientMsgID,proto3" json:"startClientMsgID,omitempty"`
	Count            int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAdvancedHistoryMessageListParams) Reset() {
	*x = GetAdvancedHistoryMessageListParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListParams) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListParams) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListParams.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListParams) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{78}
}

func (x *GetAdvancedHistoryMessageListParams) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListParams) GetStartClientMsgID() string {
	if x != nil {
		return x.StartClientMsgID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListParams) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAdvancedHistoryMessageListCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageList []*IMMessage `protobuf:"bytes,1,rep,name=messageList,proto3" json:"messageList,omitempty"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	ErrCode     int32        `protobuf:"varint,3,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg      string       `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *GetAdvancedHistoryMessageListCallback) Reset() {
	*x = GetAdvancedHistoryMessageListCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListCallback) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListCallback) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListCallback.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListCallback) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{79}
}

func (x *GetAdvancedHistoryMessageListCallback) GetMessageList() []*IMMessage {
	if x != nil {
		return x.MessageList
	}
	return nil
}

func (x *GetAdvancedHistoryMessageListCallback) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *GetAdvancedHistoryMessageListCallback) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetAdvancedHistoryMessageListCallback) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// ------------------------------------------------------------------------------------------------------
type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         *IMMessage       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	RecvID          string           `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID,omitempty"`
	GroupID         string           `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OfflinePushInfo *OfflinePushInfo `protobuf:"bytes,4,opt,name=offlinePushInfo,proto3" json:"offlinePushInfo,omitempty"`
	IsOnlineOnly    bool             `protobuf:"varint,5,opt,name=isOnlineOnly,proto3" json:"isOnlineOnly,omitempty"`
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{80}
}

func (x *SendMessageReq) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *SendMessageReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SendMessageReq) GetOfflinePushInfo() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

func (x *SendMessageReq) GetIsOnlineOnly() bool {
	if x != nil {
		return x.IsOnlineOnly
	}
	return false
}

type SendMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageResp) Reset() {
	*x = SendMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResp) ProtoMessage() {}

func (x *SendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResp.ProtoReflect.Descriptor instead.
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{81}
}

func (x *SendMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetAdvancedHistoryMessageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID                      string                               `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	GetAdvancedHistoryMessageListParams *GetAdvancedHistoryMessageListParams `protobuf:"bytes,2,opt,name=getAdvancedHistoryMessageListParams,proto3" json:"getAdvancedHistoryMessageListParams,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReq) Reset() {
	*x = GetAdvancedHistoryMessageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReq) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReq.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{82}
}

func (x *GetAdvancedHistoryMessageListReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListReq) GetGetAdvancedHistoryMessageListParams() *GetAdvancedHistoryMessageListParams {
	if x != nil {
		return x.GetAdvancedHistoryMessageListParams
	}
	return nil
}

type GetAdvancedHistoryMessageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAdvancedHistoryMessageListCallback *GetAdvancedHistoryMessageListCallback `protobuf:"bytes,1,opt,name=getAdvancedHistoryMessageListCallback,proto3" json:"getAdvancedHistoryMessageListCallback,omitempty"`
}

func (x *GetAdvancedHistoryMessageListResp) Reset() {
	*x = GetAdvancedHistoryMessageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListResp) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListResp.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{83}
}

func (x *GetAdvancedHistoryMessageListResp) GetGetAdvancedHistoryMessageListCallback() *GetAdvancedHistoryMessageListCallback {
	if x != nil {
		return x.GetAdvancedHistoryMessageListCallback
	}
	return nil
}

type GetAdvancedHistoryMessageListReverseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID                      string                               `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	GetAdvancedHistoryMessageListParams *GetAdvancedHistoryMessageListParams `protobuf:"bytes,2,opt,name=getAdvancedHistoryMessageListParams,proto3" json:"getAdvancedHistoryMessageListParams,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReverseReq) Reset() {
	*x = GetAdvancedHistoryMessageListReverseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReverseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReverseReq) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReverseReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReverseReq.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReverseReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{84}
}

func (x *GetAdvancedHistoryMessageListReverseReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListReverseReq) GetGetAdvancedHistoryMessageListParams() *GetAdvancedHistoryMessageListParams {
	if x != nil {
		return x.GetAdvancedHistoryMessageListParams
	}
	return nil
}

type GetAdvancedHistoryMessageListReverseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAdvancedHistoryMessageListCallback *GetAdvancedHistoryMessageListCallback `protobuf:"bytes,1,opt,name=getAdvancedHistoryMessageListCallback,proto3" json:"getAdvancedHistoryMessageListCallback,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReverseResp) Reset() {
	*x = GetAdvancedHistoryMessageListReverseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReverseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReverseResp) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReverseResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReverseResp.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReverseResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{85}
}

func (x *GetAdvancedHistoryMessageListReverseResp) GetGetAdvancedHistoryMessageListCallback() *GetAdvancedHistoryMessageListCallback {
	if x != nil {
		return x.GetAdvancedHistoryMessageListCallback
	}
	return nil
}

type RevokeMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
}

func (x *RevokeMessageReq) Reset() {
	*x = RevokeMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMessageReq) ProtoMessage() {}

func (x *RevokeMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMessageReq.ProtoReflect.Descriptor instead.
func (*RevokeMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{86}
}

func (x *RevokeMessageReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *RevokeMessageReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type RevokeMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeMessageResp) Reset() {
	*x = RevokeMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMessageResp) ProtoMessage() {}

func (x *RevokeMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMessageResp.ProtoReflect.Descriptor instead.
func (*RevokeMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{87}
}

type TypingStatusUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecvID string `protobuf:"bytes,1,opt,name=recvID,proto3" json:"recvID,omitempty"`
	MsgTip string `protobuf:"bytes,2,opt,name=msgTip,proto3" json:"msgTip,omitempty"`
}

func (x *TypingStatusUpdateReq) Reset() {
	*x = TypingStatusUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStatusUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStatusUpdateReq) ProtoMessage() {}

func (x *TypingStatusUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStatusUpdateReq.ProtoReflect.Descriptor instead.
func (*TypingStatusUpdateReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{88}
}

func (x *TypingStatusUpdateReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *TypingStatusUpdateReq) GetMsgTip() string {
	if x != nil {
		return x.MsgTip
	}
	return ""
}

type TypingStatusUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TypingStatusUpdateResp) Reset() {
	*x = TypingStatusUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStatusUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStatusUpdateResp) ProtoMessage() {}

func (x *TypingStatusUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStatusUpdateResp.ProtoReflect.Descriptor instead.
func (*TypingStatusUpdateResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{89}
}

type DeleteMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
}

func (x *DeleteMessageReq) Reset() {
	*x = DeleteMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageReq) ProtoMessage() {}

func (x *DeleteMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageReq.ProtoReflect.Descriptor instead.
func (*DeleteMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteMessageReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMessageReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type DeleteMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMessageResp) Reset() {
	*x = DeleteMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResp) ProtoMessage() {}

func (x *DeleteMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResp.ProtoReflect.Descriptor instead.
func (*DeleteMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{91}
}

type DeleteAllMsgFromLocalAndServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMsgFromLocalAndServerReq) Reset() {
	*x = DeleteAllMsgFromLocalAndServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMsgFromLocalAndServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMsgFromLocalAndServerReq) ProtoMessage() {}

func (x *DeleteAllMsgFromLocalAndServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMsgFromLocalAndServerReq.ProtoReflect.Descriptor instead.
func (*DeleteAllMsgFromLocalAndServerReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{92}
}

type DeleteAllMsgFromLocalAndServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMsgFromLocalAndServerResp) Reset() {
	*x = DeleteAllMsgFromLocalAndServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMsgFromLocalAndServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMsgFromLocalAndServerResp) ProtoMessage() {}

func (x *DeleteAllMsgFromLocalAndServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMsgFromLocalAndServerResp.ProtoReflect.Descriptor instead.
func (*DeleteAllMsgFromLocalAndServerResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{93}
}

type DeleteAllMessageFromLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMessageFromLocalStorageReq) Reset() {
	*x = DeleteAllMessageFromLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMessageFromLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMessageFromLocalStorageReq) ProtoMessage() {}

func (x *DeleteAllMessageFromLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMessageFromLocalStorageReq.ProtoReflect.Descriptor instead.
func (*DeleteAllMessageFromLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{94}
}

type DeleteAllMessageFromLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMessageFromLocalStorageResp) Reset() {
	*x = DeleteAllMessageFromLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMessageFromLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMessageFromLocalStorageResp) ProtoMessage() {}

func (x *DeleteAllMessageFromLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMessageFromLocalStorageResp.ProtoReflect.Descriptor instead.
func (*DeleteAllMessageFromLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{95}
}

type InsertSingleMessageToLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    *IMMessage `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	RecvID string     `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID,omitempty"`
	SendID string     `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID,omitempty"`
}

func (x *InsertSingleMessageToLocalStorageReq) Reset() {
	*x = InsertSingleMessageToLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSingleMessageToLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSingleMessageToLocalStorageReq) ProtoMessage() {}

func (x *InsertSingleMessageToLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSingleMessageToLocalStorageReq.ProtoReflect.Descriptor instead.
func (*InsertSingleMessageToLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{96}
}

func (x *InsertSingleMessageToLocalStorageReq) GetMsg() *IMMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InsertSingleMessageToLocalStorageReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *InsertSingleMessageToLocalStorageReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

type InsertSingleMessageToLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *IMMessage `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InsertSingleMessageToLocalStorageResp) Reset() {
	*x = InsertSingleMessageToLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSingleMessageToLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSingleMessageToLocalStorageResp) ProtoMessage() {}

func (x *InsertSingleMessageToLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSingleMessageToLocalStorageResp.ProtoReflect.Descriptor instead.
func (*InsertSingleMessageToLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{97}
}

func (x *InsertSingleMessageToLocalStorageResp) GetMsg() *IMMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

type InsertGroupMessageToLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg     *IMMessage `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	GroupID string     `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	SendID  string     `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID,omitempty"`
}

func (x *InsertGroupMessageToLocalStorageReq) Reset() {
	*x = InsertGroupMessageToLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertGroupMessageToLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertGroupMessageToLocalStorageReq) ProtoMessage() {}

func (x *InsertGroupMessageToLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertGroupMessageToLocalStorageReq.ProtoReflect.Descriptor instead.
func (*InsertGroupMessageToLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{98}
}

func (x *InsertGroupMessageToLocalStorageReq) GetMsg() *IMMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InsertGroupMessageToLocalStorageReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *InsertGroupMessageToLocalStorageReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

type InsertGroupMessageToLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *IMMessage `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InsertGroupMessageToLocalStorageResp) Reset() {
	*x = InsertGroupMessageToLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertGroupMessageToLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertGroupMessageToLocalStorageResp) ProtoMessage() {}

func (x *InsertGroupMessageToLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertGroupMessageToLocalStorageResp.ProtoReflect.Descriptor instead.
func (*InsertGroupMessageToLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{99}
}

func (x *InsertGroupMessageToLocalStorageResp) GetMsg() *IMMessage {
	if x != nil {
		return x.Msg
	}
	return nil
}

type CreateTextMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CreateTextMessageReq) Reset() {
	*x = CreateTextMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextMessageReq) ProtoMessage() {}

func (x *CreateTextMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextMessageReq.ProtoReflect.Descriptor instead.
func (*CreateTextMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{100}
}

func (x *CreateTextMessageReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateTextMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTextMessageResp) Reset() {
	*x = CreateTextMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextMessageResp) ProtoMessage() {}

func (x *CreateTextMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextMessageResp.ProtoReflect.Descriptor instead.
func (*CreateTextMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{101}
}

func (x *CreateTextMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateAdvancedTextMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text            string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	MessageEntities []*MessageEntity `protobuf:"bytes,2,rep,name=messageEntities,proto3" json:"messageEntities,omitempty"`
}

func (x *CreateAdvancedTextMessageReq) Reset() {
	*x = CreateAdvancedTextMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdvancedTextMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdvancedTextMessageReq) ProtoMessage() {}

func (x *CreateAdvancedTextMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdvancedTextMessageReq.ProtoReflect.Descriptor instead.
func (*CreateAdvancedTextMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{102}
}

func (x *CreateAdvancedTextMessageReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateAdvancedTextMessageReq) GetMessageEntities() []*MessageEntity {
	if x != nil {
		return x.MessageEntities
	}
	return nil
}

type CreateAdvancedTextMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateAdvancedTextMessageResp) Reset() {
	*x = CreateAdvancedTextMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdvancedTextMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdvancedTextMessageResp) ProtoMessage() {}

func (x *CreateAdvancedTextMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdvancedTextMessageResp.ProtoReflect.Descriptor instead.
func (*CreateAdvancedTextMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{103}
}

func (x *CreateAdvancedTextMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateTextAtMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	UserIDList   []string   `protobuf:"bytes,2,rep,name=userIDList,proto3" json:"userIDList,omitempty"`
	UsersInfo    []*AtInfo  `protobuf:"bytes,3,rep,name=usersInfo,proto3" json:"usersInfo,omitempty"`
	QuoteMessage *IMMessage `protobuf:"bytes,4,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
}

func (x *CreateTextAtMessageReq) Reset() {
	*x = CreateTextAtMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextAtMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextAtMessageReq) ProtoMessage() {}

func (x *CreateTextAtMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextAtMessageReq.ProtoReflect.Descriptor instead.
func (*CreateTextAtMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{104}
}

func (x *CreateTextAtMessageReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateTextAtMessageReq) GetUserIDList() []string {
	if x != nil {
		return x.UserIDList
	}
	return nil
}

func (x *CreateTextAtMessageReq) GetUsersInfo() []*AtInfo {
	if x != nil {
		return x.UsersInfo
	}
	return nil
}

func (x *CreateTextAtMessageReq) GetQuoteMessage() *IMMessage {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

type CreateTextAtMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateTextAtMessageResp) Reset() {
	*x = CreateTextAtMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTextAtMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTextAtMessageResp) ProtoMessage() {}

func (x *CreateTextAtMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTextAtMessageResp.ProtoReflect.Descriptor instead.
func (*CreateTextAtMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{105}
}

func (x *CreateTextAtMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateLocationMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *CreateLocationMessageReq) Reset() {
	*x = CreateLocationMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationMessageReq) ProtoMessage() {}

func (x *CreateLocationMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationMessageReq.ProtoReflect.Descriptor instead.
func (*CreateLocationMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{106}
}

func (x *CreateLocationMessageReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateLocationMessageReq) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CreateLocationMessageReq) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CreateLocationMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateLocationMessageResp) Reset() {
	*x = CreateLocationMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationMessageResp) ProtoMessage() {}

func (x *CreateLocationMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationMessageResp.ProtoReflect.Descriptor instead.
func (*CreateLocationMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{107}
}

func (x *CreateLocationMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateCustomMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Extension   string `protobuf:"bytes,2,opt,name=extension,proto3" json:"extension,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateCustomMessageReq) Reset() {
	*x = CreateCustomMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomMessageReq) ProtoMessage() {}

func (x *CreateCustomMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomMessageReq.ProtoReflect.Descriptor instead.
func (*CreateCustomMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{108}
}

func (x *CreateCustomMessageReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CreateCustomMessageReq) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

func (x *CreateCustomMessageReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateCustomMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateCustomMessageResp) Reset() {
	*x = CreateCustomMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCustomMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomMessageResp) ProtoMessage() {}

func (x *CreateCustomMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomMessageResp.ProtoReflect.Descriptor instead.
func (*CreateCustomMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{109}
}

func (x *CreateCustomMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateQuoteMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	QuoteMessage *IMMessage `protobuf:"bytes,2,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
}

func (x *CreateQuoteMessageReq) Reset() {
	*x = CreateQuoteMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuoteMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuoteMessageReq) ProtoMessage() {}

func (x *CreateQuoteMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuoteMessageReq.ProtoReflect.Descriptor instead.
func (*CreateQuoteMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{110}
}

func (x *CreateQuoteMessageReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateQuoteMessageReq) GetQuoteMessage() *IMMessage {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

type CreateQuoteMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateQuoteMessageResp) Reset() {
	*x = CreateQuoteMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuoteMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuoteMessageResp) ProtoMessage() {}

func (x *CreateQuoteMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuoteMessageResp.ProtoReflect.Descriptor instead.
func (*CreateQuoteMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{111}
}

func (x *CreateQuoteMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateAdvancedQuoteMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text            string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	QuoteMessage    *IMMessage       `protobuf:"bytes,2,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
	MessageEntities []*MessageEntity `protobuf:"bytes,3,rep,name=messageEntities,proto3" json:"messageEntities,omitempty"`
}

func (x *CreateAdvancedQuoteMessageReq) Reset() {
	*x = CreateAdvancedQuoteMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdvancedQuoteMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdvancedQuoteMessageReq) ProtoMessage() {}

func (x *CreateAdvancedQuoteMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdvancedQuoteMessageReq.ProtoReflect.Descriptor instead.
func (*CreateAdvancedQuoteMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{112}
}

func (x *CreateAdvancedQuoteMessageReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateAdvancedQuoteMessageReq) GetQuoteMessage() *IMMessage {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *CreateAdvancedQuoteMessageReq) GetMessageEntities() []*MessageEntity {
	if x != nil {
		return x.MessageEntities
	}
	return nil
}

type CreateAdvancedQuoteMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateAdvancedQuoteMessageResp) Reset() {
	*x = CreateAdvancedQuoteMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAdvancedQuoteMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdvancedQuoteMessageResp) ProtoMessage() {}

func (x *CreateAdvancedQuoteMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdvancedQuoteMessageResp.ProtoReflect.Descriptor instead.
func (*CreateAdvancedQuoteMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{113}
}

func (x *CreateAdvancedQuoteMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateCardMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card *CardElem `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
}

func (x *CreateCardMessageReq) Reset() {
	*x = CreateCardMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardMessageReq) ProtoMessage() {}

func (x *CreateCardMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardMessageReq.ProtoReflect.Descriptor instead.
func (*CreateCardMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{114}
}

func (x *CreateCardMessageReq) GetCard() *CardElem {
	if x != nil {
		return x.Card
	}
	return nil
}

type CreateCardMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateCardMessageResp) Reset() {
	*x = CreateCardMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCardMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCardMessageResp) ProtoMessage() {}

func (x *CreateCardMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCardMessageResp.ProtoReflect.Descriptor instead.
func (*CreateCardMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{115}
}

func (x *CreateCardMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateImageMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageSourcePath string           `protobuf:"bytes,1,opt,name=imageSourcePath,proto3" json:"imageSourcePath,omitempty"`
	SourcePicture   *PictureBaseInfo `protobuf:"bytes,2,opt,name=sourcePicture,proto3" json:"sourcePicture,omitempty"`
	BigPicture      *PictureBaseInfo `protobuf:"bytes,3,opt,name=bigPicture,proto3" json:"bigPicture,omitempty"`
	SnapshotPicture *PictureBaseInfo `protobuf:"bytes,4,opt,name=snapshotPicture,proto3" json:"snapshotPicture,omitempty"`
}

func (x *CreateImageMessageReq) Reset() {
	*x = CreateImageMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageMessageReq) ProtoMessage() {}

func (x *CreateImageMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageMessageReq.ProtoReflect.Descriptor instead.
func (*CreateImageMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{116}
}

func (x *CreateImageMessageReq) GetImageSourcePath() string {
	if x != nil {
		return x.ImageSourcePath
	}
	return ""
}

func (x *CreateImageMessageReq) GetSourcePicture() *PictureBaseInfo {
	if x != nil {
		return x.SourcePicture
	}
	return nil
}

func (x *CreateImageMessageReq) GetBigPicture() *PictureBaseInfo {
	if x != nil {
		return x.BigPicture
	}
	return nil
}

func (x *CreateImageMessageReq) GetSnapshotPicture() *PictureBaseInfo {
	if x != nil {
		return x.SnapshotPicture
	}
	return nil
}

type CreateImageMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateImageMessageResp) Reset() {
	*x = CreateImageMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageMessageResp) ProtoMessage() {}

func (x *CreateImageMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageMessageResp.ProtoReflect.Descriptor instead.
func (*CreateImageMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{117}
}

func (x *CreateImageMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateSoundMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoundPath string         `protobuf:"bytes,1,opt,name=soundPath,proto3" json:"soundPath,omitempty"`
	Duration  int64          `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundElem *SoundBaseInfo `protobuf:"bytes,3,opt,name=soundElem,proto3" json:"soundElem,omitempty"`
}

func (x *CreateSoundMessageReq) Reset() {
	*x = CreateSoundMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSoundMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSoundMessageReq) ProtoMessage() {}

func (x *CreateSoundMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSoundMessageReq.ProtoReflect.Descriptor instead.
func (*CreateSoundMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{118}
}

func (x *CreateSoundMessageReq) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *CreateSoundMessageReq) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateSoundMessageReq) GetSoundElem() *SoundBaseInfo {
	if x != nil {
		return x.SoundElem
	}
	return nil
}

type CreateSoundMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateSoundMessageResp) Reset() {
	*x = CreateSoundMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSoundMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSoundMessageResp) ProtoMessage() {}

func (x *CreateSoundMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSoundMessageResp.ProtoReflect.Descriptor instead.
func (*CreateSoundMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{119}
}

func (x *CreateSoundMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateVideoMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoSourcePath    string         `protobuf:"bytes,1,opt,name=videoSourcePath,proto3" json:"videoSourcePath,omitempty"`
	VideoType          string         `protobuf:"bytes,2,opt,name=videoType,proto3" json:"videoType,omitempty"`
	Duration           int64          `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotSourcePath string         `protobuf:"bytes,4,opt,name=snapshotSourcePath,proto3" json:"snapshotSourcePath,omitempty"`
	VideoElem          *VideoBaseInfo `protobuf:"bytes,5,opt,name=videoElem,proto3" json:"videoElem,omitempty"`
}

func (x *CreateVideoMessageReq) Reset() {
	*x = CreateVideoMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoMessageReq) ProtoMessage() {}

func (x *CreateVideoMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoMessageReq.ProtoReflect.Descriptor instead.
func (*CreateVideoMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{120}
}

func (x *CreateVideoMessageReq) GetVideoSourcePath() string {
	if x != nil {
		return x.VideoSourcePath
	}
	return ""
}

func (x *CreateVideoMessageReq) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *CreateVideoMessageReq) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateVideoMessageReq) GetSnapshotSourcePath() string {
	if x != nil {
		return x.SnapshotSourcePath
	}
	return ""
}

func (x *CreateVideoMessageReq) GetVideoElem() *VideoBaseInfo {
	if x != nil {
		return x.VideoElem
	}
	return nil
}

type CreateVideoMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateVideoMessageResp) Reset() {
	*x = CreateVideoMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoMessageResp) ProtoMessage() {}

func (x *CreateVideoMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoMessageResp.ProtoReflect.Descriptor instead.
func (*CreateVideoMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{121}
}

func (x *CreateVideoMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateFileMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileSourcePath string        `protobuf:"bytes,1,opt,name=fileSourcePath,proto3" json:"fileSourcePath,omitempty"`
	FileName       string        `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileElem       *FileBaseInfo `protobuf:"bytes,3,opt,name=fileElem,proto3" json:"fileElem,omitempty"`
}

func (x *CreateFileMessageReq) Reset() {
	*x = CreateFileMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileMessageReq) ProtoMessage() {}

func (x *CreateFileMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileMessageReq.ProtoReflect.Descriptor instead.
func (*CreateFileMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{122}
}

func (x *CreateFileMessageReq) GetFileSourcePath() string {
	if x != nil {
		return x.FileSourcePath
	}
	return ""
}

func (x *CreateFileMessageReq) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *CreateFileMessageReq) GetFileElem() *FileBaseInfo {
	if x != nil {
		return x.FileElem
	}
	return nil
}

type CreateFileMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateFileMessageResp) Reset() {
	*x = CreateFileMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFileMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileMessageResp) ProtoMessage() {}

func (x *CreateFileMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileMessageResp.ProtoReflect.Descriptor instead.
func (*CreateFileMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{123}
}

func (x *CreateFileMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateMergerMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages  []*IMMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Title     string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Summaries []string     `protobuf:"bytes,3,rep,name=summaries,proto3" json:"summaries,omitempty"`
}

func (x *CreateMergerMessageReq) Reset() {
	*x = CreateMergerMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMergerMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMergerMessageReq) ProtoMessage() {}

func (x *CreateMergerMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMergerMessageReq.ProtoReflect.Descriptor instead.
func (*CreateMergerMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{124}
}

func (x *CreateMergerMessageReq) GetMessages() []*IMMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *CreateMergerMessageReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMergerMessageReq) GetSummaries() []string {
	if x != nil {
		return x.Summaries
	}
	return nil
}

type CreateMergerMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateMergerMessageResp) Reset() {
	*x = CreateMergerMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMergerMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMergerMessageResp) ProtoMessage() {}

func (x *CreateMergerMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMergerMessageResp.ProtoReflect.Descriptor instead.
func (*CreateMergerMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{125}
}

func (x *CreateMergerMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateFaceMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateFaceMessageReq) Reset() {
	*x = CreateFaceMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFaceMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFaceMessageReq) ProtoMessage() {}

func (x *CreateFaceMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFaceMessageReq.ProtoReflect.Descriptor instead.
func (*CreateFaceMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{126}
}

func (x *CreateFaceMessageReq) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateFaceMessageReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CreateFaceMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateFaceMessageResp) Reset() {
	*x = CreateFaceMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFaceMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFaceMessageResp) ProtoMessage() {}

func (x *CreateFaceMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFaceMessageResp.ProtoReflect.Descriptor instead.
func (*CreateFaceMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{127}
}

func (x *CreateFaceMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateForwardMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateForwardMessageReq) Reset() {
	*x = CreateForwardMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateForwardMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForwardMessageReq) ProtoMessage() {}

func (x *CreateForwardMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForwardMessageReq.ProtoReflect.Descriptor instead.
func (*CreateForwardMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{128}
}

func (x *CreateForwardMessageReq) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type CreateForwardMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *IMMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreateForwardMessageResp) Reset() {
	*x = CreateForwardMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateForwardMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateForwardMessageResp) ProtoMessage() {}

func (x *CreateForwardMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateForwardMessageResp.ProtoReflect.Descriptor instead.
func (*CreateForwardMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{129}
}

func (x *CreateForwardMessageResp) GetMessage() *IMMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type UploadLogsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line int32  `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Ex   string `protobuf:"bytes,2,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *UploadLogsReq) Reset() {
	*x = UploadLogsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogsReq) ProtoMessage() {}

func (x *UploadLogsReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogsReq.ProtoReflect.Descriptor instead.
func (*UploadLogsReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{130}
}

func (x *UploadLogsReq) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *UploadLogsReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type UploadLogsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadLogsResp) Reset() {
	*x = UploadLogsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogsResp) ProtoMessage() {}

func (x *UploadLogsResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogsResp.ProtoReflect.Descriptor instead.
func (*UploadLogsResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{131}
}

type LogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel int32  `protobuf:"varint,1,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	File     string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Line     int32  `protobuf:"varint,3,opt,name=line,proto3" json:"line,omitempty"`
	Msg      string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	Err      string `protobuf:"bytes,5,opt,name=err,proto3" json:"err,omitempty"` //  repeated google.protobuf.Any keysAndValues = 6;
}

func (x *LogReq) Reset() {
	*x = LogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogReq) ProtoMessage() {}

func (x *LogReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogReq.ProtoReflect.Descriptor instead.
func (*LogReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{132}
}

func (x *LogReq) GetLogLevel() int32 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *LogReq) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *LogReq) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *LogReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LogReq) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type LogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogResp) Reset() {
	*x = LogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResp) ProtoMessage() {}

func (x *LogResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResp.ProtoReflect.Descriptor instead.
func (*LogResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{133}
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x4a, 0x0a, 0x06, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x61, 0x0a, 0x09, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x8d,
	0x01, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb5,
	0x01, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x08, 0x54,
	0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x68, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a, 0x02, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x8c, 0x02, 0x0a, 0x0b,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbb,
	0x03, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac, 0x01, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x0d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x65, 0x78, 0x22, 0xd9, 0x01, 0x0a, 0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a,
	0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdd,
	0x01, 0x0a, 0x0a, 0x41, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x41, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x22, 0x34,
	0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x22, 0x60, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x10, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x4f, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x26, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x22, 0x66, 0x0a, 0x0a, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x70, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x61, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x10, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x61,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x10, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x42,
	0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x9e, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x86, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a,
	0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x8e,
	0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22,
	0xa1, 0x01, 0x0a, 0x18, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x39, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x71, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x71,
	0x4d, 0x73, 0x67, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x51, 0x75,
	0x69, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3e, 0x0a, 0x08, 0x71, 0x75,
	0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x71, 0x75, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xcc, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x22,
	0xcc, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x73, 0x22, 0xf3,
	0x02, 0x0a, 0x19, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0d,
	0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x11, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a,
	0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0e, 0x6b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x02, 0x0a, 0x11,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x4c, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x0f,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xaa, 0x01, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x92, 0x02, 0x0a,
	0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6d,
	0x75, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6d,
	0x75, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a,
	0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xf4, 0x01, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x3a, 0x0a, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x6b, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x57, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x4a, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x5d, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x83, 0x01, 0x0a, 0x1d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x22, 0xa3, 0x01, 0x0a, 0x0f,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x35, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06,
	0x6f, 0x70, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x0e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x10, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5d,
	0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x2d, 0x0a,
	0x13, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x8a, 0x01, 0x0a,
	0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x53, 0x0a, 0x15, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x53, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x60, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa3, 0x01, 0x0a,
	0x17, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x61,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x65, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x71, 0x73, 0x22,
	0xfb, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x65, 0x73, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0xb1, 0x03,
	0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x1b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65,
	0x78, 0x22, 0x59, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x22, 0x64, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x73, 0x54, 0x69, 0x70, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x65, 0x71, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65,
	0x71, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x71,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x73, 0x65, 0x71, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x22, 0x7b, 0x0a,
	0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0c,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x53, 0x75,
	0x62, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a,
	0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x73, 0x22, 0x68, 0x0a, 0x17, 0x53,
	0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x73, 0x22, 0x6d, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0xa5, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xd9, 0x2d, 0x0a,
	0x09, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x07,
	0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x10, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46,
	0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x65,
	0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x45, 0x78, 0x12, 0x50, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x43, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65,
	0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c,
	0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d,
	0x0a, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x40, 0x0a,
	0x0a, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x3a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x48,
	0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x46, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x20, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65,
	0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x12, 0x52, 0x0a, 0x10, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x69,
	0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x52, 0x0a, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x12, 0x52, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x54, 0x69, 0x70, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x14,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x1c,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x6a, 0x0a, 0x18,
	0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x18,
	0x6a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x51, 0x75, 0x69, 0x74, 0x54, 0x69, 0x70, 0x73, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x51, 0x75, 0x69, 0x74,
	0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x51, 0x75,
	0x69, 0x74, 0x54, 0x69, 0x70, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x76,
	0x0a, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x6d, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x19, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b, 0x69, 0x63, 0x6b, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4b,
	0x69, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x11, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54,
	0x69, 0x70, 0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x58, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x70, 0x0a, 0x1a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48,
	0x00, 0x52, 0x1a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4c, 0x0a,
	0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18,
	0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x64, 0x0a, 0x16, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x74, 0x54, 0x69, 0x70, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x74, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x61, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x15, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x79, 0x0a, 0x1d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x1d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12,
	0x79, 0x0a, 0x1d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x1d, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4f, 0x0a, 0x0f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x3b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52,
	0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x0e, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x12, 0x52, 0x0a, 0x10, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73,
	0x48, 0x00, 0x52, 0x10, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x61, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x3f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x5b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x40,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52,
	0x13, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x41, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x14,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x58, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x41, 0x64, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x61,
	0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x15, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x61, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x15, 0x75,
	0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x64, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x45,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73,
	0x48, 0x00, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x70, 0x0a, 0x1a, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00,
	0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x67, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x17, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x55, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x49, 0x0a, 0x0d,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x18, 0x49, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d,
	0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x12, 0x61, 0x0a, 0x15, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73,
	0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70,
	0x73, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73, 0x67, 0x73, 0x54, 0x69, 0x70, 0x73, 0x18, 0x4b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x73,
	0x67, 0x73, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x73, 0x67, 0x73, 0x54, 0x69, 0x70, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b,
	0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x70, 0x73, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x70, 0x73, 0x12, 0x61, 0x0a, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x18,
	0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73,
	0x48, 0x00, 0x52, 0x15, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x70, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x73, 0x75, 0x62,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x69, 0x70, 0x73, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x75, 0x62, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x17, 0x73, 0x75, 0x62, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69,
	0x70, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x54,
	0x69, 0x70, 0x73, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x48, 0x00, 0x52, 0x0d,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x42, 0x09, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd0, 0x03, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x1b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x22,
	0x0a, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xb0, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3f, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x45, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x4c, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e,
	0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x89, 0x01, 0x0a, 0x23, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x23, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x8f, 0x01, 0x0a, 0x25, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x25, 0x67, 0x65,
	0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x22, 0xdd, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x89, 0x01, 0x0a, 0x23, 0x67, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x23,
	0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x8f, 0x01, 0x0a, 0x25, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x25, 0x67, 0x65, 0x74,
	0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x22, 0x5c, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x47, 0x0a, 0x15, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x22, 0x18,
	0x0a, 0x16, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x21, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x22, 0x24, 0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x26, 0x0a,
	0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x24, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x22,
	0x58, 0x0a, 0x25, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x23, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x2f, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x24, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x2a, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x4b, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x1d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x78, 0x74, 0x41, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x41, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x76, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x54,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x1d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22,
	0x59, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x04,
	0x63, 0x61, 0x72, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x92, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65,
	0x6d, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x28,
	0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x3f, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45,
	0x6c, 0x65, 0x6d, 0x22, 0x51, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x39,
	0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x22, 0x52, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33,
	0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x65, 0x78, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x70, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x09, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x38, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 134)
var file_message_proto_goTypes = []interface{}{
	(*AtInfo)(nil),                                   // 0: openim.sdk.message.AtInfo
	(*ImageInfo)(nil),                                // 1: openim.sdk.message.ImageInfo
	(*PictureBaseInfo)(nil),                          // 2: openim.sdk.message.PictureBaseInfo
	(*SoundBaseInfo)(nil),                            // 3: openim.sdk.message.SoundBaseInfo
	(*VideoBaseInfo)(nil),                            // 4: openim.sdk.message.VideoBaseInfo
	(*FileBaseInfo)(nil),                             // 5: openim.sdk.message.FileBaseInfo
	(*TextElem)(nil),                                 // 6: openim.sdk.message.TextElem
	(*CardElem)(nil),                                 // 7: openim.sdk.message.CardElem
	(*PictureElem)(nil),                              // 8: openim.sdk.message.PictureElem
	(*SoundElem)(nil),                                // 9: openim.sdk.message.SoundElem
	(*VideoElem)(nil),                                // 10: openim.sdk.message.VideoElem
	(*FileElem)(nil),                                 // 11: openim.sdk.message.FileElem
	(*MessageEntity)(nil),                            // 12: openim.sdk.message.MessageEntity
	(*MergeElem)(nil),                                // 13: openim.sdk.message.MergeElem
	(*AtTextElem)(nil),                               // 14: openim.sdk.message.AtTextElem
	(*FaceElem)(nil),                                 // 15: openim.sdk.message.FaceElem
	(*LocationElem)(nil),                             // 16: openim.sdk.message.LocationElem
	(*CustomElem)(nil),                               // 17: openim.sdk.message.CustomElem
	(*QuoteElem)(nil),                                // 18: openim.sdk.message.QuoteElem
	(*AdvancedTextElem)(nil),                         // 19: openim.sdk.message.AdvancedTextElem
	(*TypingElem)(nil),                               // 20: openim.sdk.message.TypingElem
	(*StreamElem)(nil),                               // 21: openim.sdk.message.StreamElem
	(*GroupHasReadInfo)(nil),                         // 22: openim.sdk.message.GroupHasReadInfo
	(*UploadProgress)(nil),                           // 23: openim.sdk.message.UploadProgress
	(*AttachedInfoElem)(nil),                         // 24: openim.sdk.message.AttachedInfoElem
	(*GroupCreatedTips)(nil),                         // 25: openim.sdk.message.GroupCreatedTips
	(*GroupInfoSetTips)(nil),                         // 26: openim.sdk.message.GroupInfoSetTips
	(*GroupInfoSetNameTips)(nil),                     // 27: openim.sdk.message.GroupInfoSetNameTips
	(*GroupInfoSetAnnouncementTips)(nil),             // 28: openim.sdk.message.GroupInfoSetAnnouncementTips
	(*JoinGroupApplicationTips)(nil),                 // 29: openim.sdk.message.JoinGroupApplicationTips
	(*MemberQuitTips)(nil),                           // 30: openim.sdk.message.MemberQuitTips
	(*GroupApplicationAcceptedTips)(nil),             // 31: openim.sdk.message.GroupApplicationAcceptedTips
	(*GroupApplicationRejectedTips)(nil),             // 32: openim.sdk.message.GroupApplicationRejectedTips
	(*GroupOwnerTransferredTips)(nil),                // 33: openim.sdk.message.GroupOwnerTransferredTips
	(*MemberKickedTips)(nil),                         // 34: openim.sdk.message.MemberKickedTips
	(*MemberInvitedTips)(nil),                        // 35: openim.sdk.message.MemberInvitedTips
	(*MemberEnterTips)(nil),                          // 36: openim.sdk.message.MemberEnterTips
	(*GroupDismissedTips)(nil),                       // 37: openim.sdk.message.GroupDismissedTips
	(*GroupMemberMutedTips)(nil),                     // 38: openim.sdk.message.GroupMemberMutedTips
	(*GroupMemberCancelMutedTips)(nil),               // 39: openim.sdk.message.GroupMemberCancelMutedTips
	(*GroupMutedTips)(nil),                           // 40: openim.sdk.message.GroupMutedTips
	(*GroupCancelMutedTips)(nil),                     // 41: openim.sdk.message.GroupCancelMutedTips
	(*GroupMemberInfoSetTips)(nil),                   // 42: openim.sdk.message.GroupMemberInfoSetTips
	(*FriendApplication)(nil),                        // 43: openim.sdk.message.FriendApplication
	(*FromToUserID)(nil),                             // 44: openim.sdk.message.FromToUserID
	(*FriendApplicationTips)(nil),                    // 45: openim.sdk.message.FriendApplicationTips
	(*FriendApplicationApprovedTips)(nil),            // 46: openim.sdk.message.FriendApplicationApprovedTips
	(*FriendApplicationRejectedTips)(nil),            // 47: openim.sdk.message.FriendApplicationRejectedTips
	(*FriendAddedTips)(nil),                          // 48: openim.sdk.message.FriendAddedTips
	(*FriendDeletedTips)(nil),                        // 49: openim.sdk.message.FriendDeletedTips
	(*BlackAddedTips)(nil),                           // 50: openim.sdk.message.BlackAddedTips
	(*BlackDeletedTips)(nil),                         // 51: openim.sdk.message.BlackDeletedTips
	(*FriendInfoChangedTips)(nil),                    // 52: openim.sdk.message.FriendInfoChangedTips
	(*UserInfoUpdatedTips)(nil),                      // 53: openim.sdk.message.UserInfoUpdatedTips
	(*UserStatusChangeTips)(nil),                     // 54: openim.sdk.message.UserStatusChangeTips
	(*UserCommandAddTips)(nil),                       // 55: openim.sdk.message.UserCommandAddTips
	(*UserCommandUpdateTips)(nil),                    // 56: openim.sdk.message.UserCommandUpdateTips
	(*UserCommandDeleteTips)(nil),                    // 57: openim.sdk.message.UserCommandDeleteTips
	(*ConversationUpdateTips)(nil),                   // 58: openim.sdk.message.ConversationUpdateTips
	(*ConversationSetPrivateTips)(nil),               // 59: openim.sdk.message.ConversationSetPrivateTips
	(*ConversationHasReadTips)(nil),                  // 60: openim.sdk.message.ConversationHasReadTips
	(*DeleteMessageTips)(nil),                        // 61: openim.sdk.message.DeleteMessageTips
	(*RevokeMsgTips)(nil),                            // 62: openim.sdk.message.RevokeMsgTips
	(*MessageRevokedContent)(nil),                    // 63: openim.sdk.message.MessageRevokedContent
	(*ClearConversationTips)(nil),                    // 64: openim.sdk.message.ClearConversationTips
	(*DeleteMsgsTips)(nil),                           // 65: openim.sdk.message.DeleteMsgsTips
	(*MarkAsReadTips)(nil),                           // 66: openim.sdk.message.MarkAsReadTips
	(*FriendsInfoUpdateTips)(nil),                    // 67: openim.sdk.message.FriendsInfoUpdateTips
	(*SubUserOnlineStatusElem)(nil),                  // 68: openim.sdk.message.SubUserOnlineStatusElem
	(*SubUserOnlineStatusTips)(nil),                  // 69: openim.sdk.message.SubUserOnlineStatusTips
	(*SubUserOnlineStatus)(nil),                      // 70: openim.sdk.message.SubUserOnlineStatus
	(*StreamMsgTips)(nil),                            // 71: openim.sdk.message.StreamMsgTips
	(*IMMessage)(nil),                                // 72: openim.sdk.message.IMMessage
	(*MessageReceipt)(nil),                           // 73: openim.sdk.message.MessageReceipt
	(*MessageRevoked)(nil),                           // 74: openim.sdk.message.MessageRevoked
	(*MessageReaction)(nil),                          // 75: openim.sdk.message.MessageReaction
	(*ReactionElem)(nil),                             // 76: openim.sdk.message.ReactionElem
	(*UserReactionElem)(nil),                         // 77: openim.sdk.message.UserReactionElem
	(*GetAdvancedHistoryMessageListParams)(nil),      // 78: openim.sdk.message.GetAdvancedHistoryMessageListParams
	(*GetAdvancedHistoryMessageListCallback)(nil),    // 79: openim.sdk.message.GetAdvancedHistoryMessageListCallback
	(*SendMessageReq)(nil),                           // 80: openim.sdk.message.SendMessageReq
	(*SendMessageResp)(nil),                          // 81: openim.sdk.message.SendMessageResp
	(*GetAdvancedHistoryMessageListReq)(nil),         // 82: openim.sdk.message.GetAdvancedHistoryMessageListReq
	(*GetAdvancedHistoryMessageListResp)(nil),        // 83: openim.sdk.message.GetAdvancedHistoryMessageListResp
	(*GetAdvancedHistoryMessageListReverseReq)(nil),  // 84: openim.sdk.message.GetAdvancedHistoryMessageListReverseReq
	(*GetAdvancedHistoryMessageListReverseResp)(nil), // 85: openim.sdk.message.GetAdvancedHistoryMessageListReverseResp
	(*RevokeMessageReq)(nil),                         // 86: openim.sdk.message.RevokeMessageReq
	(*RevokeMessageResp)(nil),                        // 87: openim.sdk.message.RevokeMessageResp
	(*TypingStatusUpdateReq)(nil),                    // 88: openim.sdk.message.TypingStatusUpdateReq
	(*TypingStatusUpdateResp)(nil),                   // 89: openim.sdk.message.TypingStatusUpdateResp
	(*DeleteMessageReq)(nil),                         // 90: openim.sdk.message.DeleteMessageReq
	(*DeleteMessageResp)(nil),                        // 91: openim.sdk.message.DeleteMessageResp
	(*DeleteAllMsgFromLocalAndServerReq)(nil),        // 92: openim.sdk.message.DeleteAllMsgFromLocalAndServerReq
	(*DeleteAllMsgFromLocalAndServerResp)(nil),       // 93: openim.sdk.message.DeleteAllMsgFromLocalAndServerResp
	(*DeleteAllMessageFromLocalStorageReq)(nil),      // 94: openim.sdk.message.DeleteAllMessageFromLocalStorageReq
	(*DeleteAllMessageFromLocalStorageResp)(nil),     // 95: openim.sdk.message.DeleteAllMessageFromLocalStorageResp
	(*InsertSingleMessageToLocalStorageReq)(nil),     // 96: openim.sdk.message.InsertSingleMessageToLocalStorageReq
	(*InsertSingleMessageToLocalStorageResp)(nil),    // 97: openim.sdk.message.InsertSingleMessageToLocalStorageResp
	(*InsertGroupMessageToLocalStorageReq)(nil),      // 98: openim.sdk.message.InsertGroupMessageToLocalStorageReq
	(*InsertGroupMessageToLocalStorageResp)(nil),     // 99: openim.sdk.message.InsertGroupMessageToLocalStorageResp
	(*CreateTextMessageReq)(nil),                     // 100: openim.sdk.message.CreateTextMessageReq
	(*CreateTextMessageResp)(nil),                    // 101: openim.sdk.message.CreateTextMessageResp
	(*CreateAdvancedTextMessageReq)(nil),             // 102: openim.sdk.message.CreateAdvancedTextMessageReq
	(*CreateAdvancedTextMessageResp)(nil),            // 103: openim.sdk.message.CreateAdvancedTextMessageResp
	(*CreateTextAtMessageReq)(nil),                   // 104: openim.sdk.message.CreateTextAtMessageReq
	(*CreateTextAtMessageResp)(nil),                  // 105: openim.sdk.message.CreateTextAtMessageResp
	(*CreateLocationMessageReq)(nil),                 // 106: openim.sdk.message.CreateLocationMessageReq
	(*CreateLocationMessageResp)(nil),                // 107: openim.sdk.message.CreateLocationMessageResp
	(*CreateCustomMessageReq)(nil),                   // 108: openim.sdk.message.CreateCustomMessageReq
	(*CreateCustomMessageResp)(nil),                  // 109: openim.sdk.message.CreateCustomMessageResp
	(*CreateQuoteMessageReq)(nil),                    // 110: openim.sdk.message.CreateQuoteMessageReq
	(*CreateQuoteMessageResp)(nil),                   // 111: openim.sdk.message.CreateQuoteMessageResp
	(*CreateAdvancedQuoteMessageReq)(nil),            // 112: openim.sdk.message.CreateAdvancedQuoteMessageReq
	(*CreateAdvancedQuoteMessageResp)(nil),           // 113: openim.sdk.message.CreateAdvancedQuoteMessageResp
	(*CreateCardMessageReq)(nil),                     // 114: openim.sdk.message.CreateCardMessageReq
	(*CreateCardMessageResp)(nil),                    // 115: openim.sdk.message.CreateCardMessageResp
	(*CreateImageMessageReq)(nil),                    // 116: openim.sdk.message.CreateImageMessageReq
	(*CreateImageMessageResp)(nil),                   // 117: openim.sdk.message.CreateImageMessageResp
	(*CreateSoundMessageReq)(nil),                    // 118: openim.sdk.message.CreateSoundMessageReq
	(*CreateSoundMessageResp)(nil),                   // 119: openim.sdk.message.CreateSoundMessageResp
	(*CreateVideoMessageReq)(nil),                    // 120: openim.sdk.message.CreateVideoMessageReq
	(*CreateVideoMessageResp)(nil),                   // 121: openim.sdk.message.CreateVideoMessageResp
	(*CreateFileMessageReq)(nil),                     // 122: openim.sdk.message.CreateFileMessageReq
	(*CreateFileMessageResp)(nil),                    // 123: openim.sdk.message.CreateFileMessageResp
	(*CreateMergerMessageReq)(nil),                   // 124: openim.sdk.message.CreateMergerMessageReq
	(*CreateMergerMessageResp)(nil),                  // 125: openim.sdk.message.CreateMergerMessageResp
	(*CreateFaceMessageReq)(nil),                     // 126: openim.sdk.message.CreateFaceMessageReq
	(*CreateFaceMessageResp)(nil),                    // 127: openim.sdk.message.CreateFaceMessageResp
	(*CreateForwardMessageReq)(nil),                  // 128: openim.sdk.message.CreateForwardMessageReq
	(*CreateForwardMessageResp)(nil),                 // 129: openim.sdk.message.CreateForwardMessageResp
	(*UploadLogsReq)(nil),                            // 130: openim.sdk.message.UploadLogsReq
	(*UploadLogsResp)(nil),                           // 131: openim.sdk.message.UploadLogsResp
	(*LogReq)(nil),                                   // 132: openim.sdk.message.LogReq
	(*LogResp)(nil),                                  // 133: openim.sdk.message.LogResp
	(*GroupInfo)(nil),                                // 134: openim.sdk.shared.GroupInfo
	(*GroupMemberInfo)(nil),                          // 135: openim.sdk.shared.GroupMemberInfo
	(*UserInfo)(nil),                                 // 136: openim.sdk.shared.UserInfo
	(*FriendInfo)(nil),                               // 137: openim.sdk.shared.FriendInfo
	(SessionType)(0),                                 // 138: openim.sdk.common.SessionType
	(MsgFrom)(0),                                     // 139: openim.sdk.common.MsgFrom
	(ContentType)(0),                                 // 140: openim.sdk.common.ContentType
	(Platform)(0),                                    // 141: openim.sdk.common.Platform
	(MsgStatus)(0),                                   // 142: openim.sdk.common.MsgStatus
	(*OfflinePushInfo)(nil),                          // 143: openim.sdk.common.OfflinePushInfo
}
var file_message_proto_depIdxs = []int32{
	2,   // 0: openim.sdk.message.PictureElem.sourcePicture:type_name -> openim.sdk.message.PictureBaseInfo
	2,   // 1: openim.sdk.message.PictureElem.bigPicture:type_name -> openim.sdk.message.PictureBaseInfo
	2,   // 2: openim.sdk.message.PictureElem.snapshotPicture:type_name -> openim.sdk.message.PictureBaseInfo
	72,  // 3: openim.sdk.message.MergeElem.multiMessage:type_name -> openim.sdk.message.IMMessage
	12,  // 4: openim.sdk.message.MergeElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	0,   // 5: openim.sdk.message.AtTextElem.atUsersInfo:type_name -> openim.sdk.message.AtInfo
	72,  // 6: openim.sdk.message.AtTextElem.quoteMessage:type_name -> openim.sdk.message.IMMessage
	72,  // 7: openim.sdk.message.QuoteElem.quoteMessage:type_name -> openim.sdk.message.IMMessage
	12,  // 8: openim.sdk.message.QuoteElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	12,  // 9: openim.sdk.message.AdvancedTextElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	22,  // 10: openim.sdk.message.AttachedInfoElem.groupHasReadInfo:type_name -> openim.sdk.message.GroupHasReadInfo
	23,  // 11: openim.sdk.message.AttachedInfoElem.progress:type_name -> openim.sdk.message.UploadProgress
	134, // 12: openim.sdk.message.GroupCreatedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 13: openim.sdk.message.GroupCreatedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 14: openim.sdk.message.GroupCreatedTips.memberList:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 15: openim.sdk.message.GroupCreatedTips.groupOwnerUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 16: openim.sdk.message.GroupInfoSetTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 17: openim.sdk.message.GroupInfoSetTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 18: openim.sdk.message.GroupInfoSetNameTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 19: openim.sdk.message.GroupInfoSetNameTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 20: openim.sdk.message.GroupInfoSetAnnouncementTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 21: openim.sdk.message.GroupInfoSetAnnouncementTips.group:type_name -> openim.sdk.shared.GroupInfo
	134, // 22: openim.sdk.message.JoinGroupApplicationTips.group:type_name -> openim.sdk.shared.GroupInfo
	136, // 23: openim.sdk.message.JoinGroupApplicationTips.applicant:type_name -> openim.sdk.shared.UserInfo
	134, // 24: openim.sdk.message.MemberQuitTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 25: openim.sdk.message.MemberQuitTips.quitUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 26: openim.sdk.message.GroupApplicationAcceptedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 27: openim.sdk.message.GroupApplicationAcceptedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 28: openim.sdk.message.GroupApplicationRejectedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 29: openim.sdk.message.GroupApplicationRejectedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 30: openim.sdk.message.GroupOwnerTransferredTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 31: openim.sdk.message.GroupOwnerTransferredTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 32: openim.sdk.message.GroupOwnerTransferredTips.newGroupOwner:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 33: openim.sdk.message.GroupOwnerTransferredTips.oldGroupOwnerInfo:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 34: openim.sdk.message.MemberKickedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 35: openim.sdk.message.MemberKickedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 36: openim.sdk.message.MemberKickedTips.kickedUserList:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 37: openim.sdk.message.MemberInvitedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 38: openim.sdk.message.MemberInvitedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 39: openim.sdk.message.MemberInvitedTips.invitedUserList:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 40: openim.sdk.message.MemberInvitedTips.inviterUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 41: openim.sdk.message.MemberEnterTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 42: openim.sdk.message.MemberEnterTips.entrantUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 43: openim.sdk.message.GroupDismissedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 44: openim.sdk.message.GroupDismissedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 45: openim.sdk.message.GroupMemberMutedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 46: openim.sdk.message.GroupMemberMutedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 47: openim.sdk.message.GroupMemberMutedTips.mutedUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 48: openim.sdk.message.GroupMemberCancelMutedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 49: openim.sdk.message.GroupMemberCancelMutedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 50: openim.sdk.message.GroupMemberCancelMutedTips.mutedUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 51: openim.sdk.message.GroupMutedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 52: openim.sdk.message.GroupMutedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 53: openim.sdk.message.GroupCancelMutedTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 54: openim.sdk.message.GroupCancelMutedTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	134, // 55: openim.sdk.message.GroupMemberInfoSetTips.group:type_name -> openim.sdk.shared.GroupInfo
	135, // 56: openim.sdk.message.GroupMemberInfoSetTips.opUser:type_name -> openim.sdk.shared.GroupMemberInfo
	135, // 57: openim.sdk.message.GroupMemberInfoSetTips.changedUser:type_name -> openim.sdk.shared.GroupMemberInfo
	44,  // 58: openim.sdk.message.FriendApplicationTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 59: openim.sdk.message.FriendApplicationApprovedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 60: openim.sdk.message.FriendApplicationRejectedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	137, // 61: openim.sdk.message.FriendAddedTips.friend:type_name -> openim.sdk.shared.FriendInfo
	136, // 62: openim.sdk.message.FriendAddedTips.opUser:type_name -> openim.sdk.shared.UserInfo
	44,  // 63: openim.sdk.message.FriendDeletedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 64: openim.sdk.message.BlackAddedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 65: openim.sdk.message.BlackDeletedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 66: openim.sdk.message.FriendInfoChangedTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	44,  // 67: openim.sdk.message.FriendsInfoUpdateTips.fromToUserID:type_name -> openim.sdk.message.FromToUserID
	68,  // 68: openim.sdk.message.SubUserOnlineStatusTips.subscribers:type_name -> openim.sdk.message.SubUserOnlineStatusElem
	138, // 69: openim.sdk.message.IMMessage.sessionType:type_name -> openim.sdk.common.SessionType
	139, // 70: openim.sdk.message.IMMessage.msgFrom:type_name -> openim.sdk.common.MsgFrom
	140, // 71: openim.sdk.message.IMMessage.contentType:type_name -> openim.sdk.common.ContentType
	141, // 72: openim.sdk.message.IMMessage.senderPlatformID:type_name -> openim.sdk.common.Platform
	142, // 73: openim.sdk.message.IMMessage.status:type_name -> openim.sdk.common.MsgStatus
	143, // 74: openim.sdk.message.IMMessage.offlinePush:type_name -> openim.sdk.common.OfflinePushInfo
	24,  // 75: openim.sdk.message.IMMessage.attachedInfoElem:type_name -> openim.sdk.message.AttachedInfoElem
	6,   // 76: openim.sdk.message.IMMessage.textElem:type_name -> openim.sdk.message.TextElem
	7,   // 77: openim.sdk.message.IMMessage.cardElem:type_name -> openim.sdk.message.CardElem
	8,   // 78: openim.sdk.message.IMMessage.pictureElem:type_name -> openim.sdk.message.PictureElem
	9,   // 79: openim.sdk.message.IMMessage.soundElem:type_name -> openim.sdk.message.SoundElem
	10,  // 80: openim.sdk.message.IMMessage.videoElem:type_name -> openim.sdk.message.VideoElem
	11,  // 81: openim.sdk.message.IMMessage.fileElem:type_name -> openim.sdk.message.FileElem
	13,  // 82: openim.sdk.message.IMMessage.mergeElem:type_name -> openim.sdk.message.MergeElem
	14,  // 83: openim.sdk.message.IMMessage.atTextElem:type_name -> openim.sdk.message.AtTextElem
	15,  // 84: openim.sdk.message.IMMessage.faceElem:type_name -> openim.sdk.message.FaceElem
	16,  // 85: openim.sdk.message.IMMessage.locationElem:type_name -> openim.sdk.message.LocationElem
	17,  // 86: openim.sdk.message.IMMessage.customElem:type_name -> openim.sdk.message.CustomElem
	18,  // 87: openim.sdk.message.IMMessage.quoteElem:type_name -> openim.sdk.message.QuoteElem
	19,  // 88: openim.sdk.message.IMMessage.advancedTextElem:type_name -> openim.sdk.message.AdvancedTextElem
	20,  // 89: openim.sdk.message.IMMessage.typingElem:type_name -> openim.sdk.message.TypingElem
	21,  // 90: openim.sdk.message.IMMessage.streamElem:type_name -> openim.sdk.message.StreamElem
	25,  // 91: openim.sdk.message.IMMessage.groupCreatedTips:type_name -> openim.sdk.message.GroupCreatedTips
	26,  // 92: openim.sdk.message.IMMessage.groupInfoSetTips:type_name -> openim.sdk.message.GroupInfoSetTips
	27,  // 93: openim.sdk.message.IMMessage.groupInfoSetNameTips:type_name -> openim.sdk.message.GroupInfoSetNameTips
	28,  // 94: openim.sdk.message.IMMessage.groupInfoSetAnnouncementTips:type_name -> openim.sdk.message.GroupInfoSetAnnouncementTips
	29,  // 95: openim.sdk.message.IMMessage.joinGroupApplicationTips:type_name -> openim.sdk.message.JoinGroupApplicationTips
	30,  // 96: openim.sdk.message.IMMessage.memberQuitTips:type_name -> openim.sdk.message.MemberQuitTips
	31,  // 97: openim.sdk.message.IMMessage.groupApplicationAcceptedTips:type_name -> openim.sdk.message.GroupApplicationAcceptedTips
	32,  // 98: openim.sdk.message.IMMessage.groupApplicationRejectedTips:type_name -> openim.sdk.message.GroupApplicationRejectedTips
	33,  // 99: openim.sdk.message.IMMessage.groupOwnerTransferredTips:type_name -> openim.sdk.message.GroupOwnerTransferredTips
	34,  // 100: openim.sdk.message.IMMessage.memberKickedTips:type_name -> openim.sdk.message.MemberKickedTips
	35,  // 101: openim.sdk.message.IMMessage.memberInvitedTips:type_name -> openim.sdk.message.MemberInvitedTips
	36,  // 102: openim.sdk.message.IMMessage.memberEnterTips:type_name -> openim.sdk.message.MemberEnterTips
	37,  // 103: openim.sdk.message.IMMessage.groupDismissedTips:type_name -> openim.sdk.message.GroupDismissedTips
	38,  // 104: openim.sdk.message.IMMessage.groupMemberMutedTips:type_name -> openim.sdk.message.GroupMemberMutedTips
	39,  // 105: openim.sdk.message.IMMessage.groupMemberCancelMutedTips:type_name -> openim.sdk.message.GroupMemberCancelMutedTips
	40,  // 106: openim.sdk.message.IMMessage.groupMutedTips:type_name -> openim.sdk.message.GroupMutedTips
	41,  // 107: openim.sdk.message.IMMessage.groupCancelMutedTips:type_name -> openim.sdk.message.GroupCancelMutedTips
	42,  // 108: openim.sdk.message.IMMessage.groupMemberInfoSetTips:type_name -> openim.sdk.message.GroupMemberInfoSetTips
	45,  // 109: openim.sdk.message.IMMessage.friendApplicationTips:type_name -> openim.sdk.message.FriendApplicationTips
	46,  // 110: openim.sdk.message.IMMessage.friendApplicationApprovedTips:type_name -> openim.sdk.message.FriendApplicationApprovedTips
	47,  // 111: openim.sdk.message.IMMessage.friendApplicationRejectedTips:type_name -> openim.sdk.message.FriendApplicationRejectedTips
	48,  // 112: openim.sdk.message.IMMessage.friendAddedTips:type_name -> openim.sdk.message.FriendAddedTips
	49,  // 113: openim.sdk.message.IMMessage.friendDeletedTips:type_name -> openim.sdk.message.FriendDeletedTips
	50,  // 114: openim.sdk.message.IMMessage.blackAddedTips:type_name -> openim.sdk.message.BlackAddedTips
	51,  // 115: openim.sdk.message.IMMessage.blackDeletedTips:type_name -> openim.sdk.message.BlackDeletedTips
	52,  // 116: openim.sdk.message.IMMessage.friendInfoChangedTips:type_name -> openim.sdk.message.FriendInfoChangedTips
	53,  // 117: openim.sdk.message.IMMessage.userInfoUpdatedTips:type_name -> openim.sdk.message.UserInfoUpdatedTips
	54,  // 118: openim.sdk.message.IMMessage.userStatusChangeTips:type_name -> openim.sdk.message.UserStatusChangeTips
	55,  // 119: openim.sdk.message.IMMessage.userCommandAddTips:type_name -> openim.sdk.message.UserCommandAddTips
	56,  // 120: openim.sdk.message.IMMessage.userCommandUpdateTips:type_name -> openim.sdk.message.UserCommandUpdateTips
	57,  // 121: openim.sdk.message.IMMessage.userCommandDeleteTips:type_name -> openim.sdk.message.UserCommandDeleteTips
	58,  // 122: openim.sdk.message.IMMessage.conversationUpdateTips:type_name -> openim.sdk.message.ConversationUpdateTips
	59,  // 123: openim.sdk.message.IMMessage.conversationSetPrivateTips:type_name -> openim.sdk.message.ConversationSetPrivateTips
	60,  // 124: openim.sdk.message.IMMessage.conversationHasReadTips:type_name -> openim.sdk.message.ConversationHasReadTips
	61,  // 125: openim.sdk.message.IMMessage.deleteMessageTips:type_name -> openim.sdk.message.DeleteMessageTips
	62,  // 126: openim.sdk.message.IMMessage.revokeMsgTips:type_name -> openim.sdk.message.RevokeMsgTips
	64,  // 127: openim.sdk.message.IMMessage.clearConversationTips:type_name -> openim.sdk.message.ClearConversationTips
	65,  // 128: openim.sdk.message.IMMessage.deleteMsgsTips:type_name -> openim.sdk.message.DeleteMsgsTips
	66,  // 129: openim.sdk.message.IMMessage.markAsReadTips:type_name -> openim.sdk.message.MarkAsReadTips
	67,  // 130: openim.sdk.message.IMMessage.friendsInfoUpdateTips:type_name -> openim.sdk.message.FriendsInfoUpdateTips
	69,  // 131: openim.sdk.message.IMMessage.subUserOnlineStatusTips:type_name -> openim.sdk.message.SubUserOnlineStatusTips
	71,  // 132: openim.sdk.message.IMMessage.streamMsgTips:type_name -> openim.sdk.message.StreamMsgTips
	77,  // 133: openim.sdk.message.ReactionElem.userReactionList:type_name -> openim.sdk.message.UserReactionElem
	72,  // 134: openim.sdk.message.GetAdvancedHistoryMessageListCallback.messageList:type_name -> openim.sdk.message.IMMessage
	72,  // 135: openim.sdk.message.SendMessageReq.message:type_name -> openim.sdk.message.IMMessage
	143, // 136: openim.sdk.message.SendMessageReq.offlinePushInfo:type_name -> openim.sdk.common.OfflinePushInfo
	72,  // 137: openim.sdk.message.SendMessageResp.message:type_name -> openim.sdk.message.IMMessage
	78,  // 138: openim.sdk.message.GetAdvancedHistoryMessageListReq.getAdvancedHistoryMessageListParams:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListParams
	79,  // 139: openim.sdk.message.GetAdvancedHistoryMessageListResp.getAdvancedHistoryMessageListCallback:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListCallback
	78,  // 140: openim.sdk.message.GetAdvancedHistoryMessageListReverseReq.getAdvancedHistoryMessageListParams:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListParams
	79,  // 141: openim.sdk.message.GetAdvancedHistoryMessageListReverseResp.getAdvancedHistoryMessageListCallback:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListCallback
	72,  // 142: openim.sdk.message.InsertSingleMessageToLocalStorageReq.msg:type_name -> openim.sdk.message.IMMessage
	72,  // 143: openim.sdk.message.InsertSingleMessageToLocalStorageResp.msg:type_name -> openim.sdk.message.IMMessage
	72,  // 144: openim.sdk.message.InsertGroupMessageToLocalStorageReq.msg:type_name -> openim.sdk.message.IMMessage
	72,  // 145: openim.sdk.message.InsertGroupMessageToLocalStorageResp.msg:type_name -> openim.sdk.message.IMMessage
	72,  // 146: openim.sdk.message.CreateTextMessageResp.message:type_name -> openim.sdk.message.IMMessage
	12,  // 147: openim.sdk.message.CreateAdvancedTextMessageReq.messageEntities:type_name -> openim.sdk.message.MessageEntity
	72,  // 148: openim.sdk.message.CreateAdvancedTextMessageResp.message:type_name -> openim.sdk.message.IMMessage
	0,   // 149: openim.sdk.message.CreateTextAtMessageReq.usersInfo:type_name -> openim.sdk.message.AtInfo
	72,  // 150: openim.sdk.message.CreateTextAtMessageReq.quoteMessage:type_name -> openim.sdk.message.IMMessage
	72,  // 151: openim.sdk.message.CreateTextAtMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 152: openim.sdk.message.CreateLocationMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 153: openim.sdk.message.CreateCustomMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 154: openim.sdk.message.CreateQuoteMessageReq.quoteMessage:type_name -> openim.sdk.message.IMMessage
	72,  // 155: openim.sdk.message.CreateQuoteMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 156: openim.sdk.message.CreateAdvancedQuoteMessageReq.quoteMessage:type_name -> openim.sdk.message.IMMessage
	12,  // 157: openim.sdk.message.CreateAdvancedQuoteMessageReq.messageEntities:type_name -> openim.sdk.message.MessageEntity
	72,  // 158: openim.sdk.message.CreateAdvancedQuoteMessageResp.message:type_name -> openim.sdk.message.IMMessage
	7,   // 159: openim.sdk.message.CreateCardMessageReq.card:type_name -> openim.sdk.message.CardElem
	72,  // 160: openim.sdk.message.CreateCardMessageResp.message:type_name -> openim.sdk.message.IMMessage
	2,   // 161: openim.sdk.message.CreateImageMessageReq.sourcePicture:type_name -> openim.sdk.message.PictureBaseInfo
	2,   // 162: openim.sdk.message.CreateImageMessageReq.bigPicture:type_name -> openim.sdk.message.PictureBaseInfo
	2,   // 163: openim.sdk.message.CreateImageMessageReq.snapshotPicture:type_name -> openim.sdk.message.PictureBaseInfo
	72,  // 164: openim.sdk.message.CreateImageMessageResp.message:type_name -> openim.sdk.message.IMMessage
	3,   // 165: openim.sdk.message.CreateSoundMessageReq.soundElem:type_name -> openim.sdk.message.SoundBaseInfo
	72,  // 166: openim.sdk.message.CreateSoundMessageResp.message:type_name -> openim.sdk.message.IMMessage
	4,   // 167: openim.sdk.message.CreateVideoMessageReq.videoElem:type_name -> openim.sdk.message.VideoBaseInfo
	72,  // 168: openim.sdk.message.CreateVideoMessageResp.message:type_name -> openim.sdk.message.IMMessage
	5,   // 169: openim.sdk.message.CreateFileMessageReq.fileElem:type_name -> openim.sdk.message.FileBaseInfo
	72,  // 170: openim.sdk.message.CreateFileMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 171: openim.sdk.message.CreateMergerMessageReq.messages:type_name -> openim.sdk.message.IMMessage
	72,  // 172: openim.sdk.message.CreateMergerMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 173: openim.sdk.message.CreateFaceMessageResp.message:type_name -> openim.sdk.message.IMMessage
	72,  // 174: openim.sdk.message.CreateForwardMessageReq.message:type_name -> openim.sdk.message.IMMessage
	72,  // 175: openim.sdk.message.CreateForwardMessageResp.message:type_name -> openim.sdk.message.IMMessage
	176, // [176:176] is the sub-list for method output_type
	176, // [176:176] is the sub-list for method input_type
	176, // [176:176] is the sub-list for extension type_name
	176, // [176:176] is the sub-list for extension extendee
	0,   // [0:176] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_common_proto_init()
	file_shared_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvancedTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupHasReadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachedInfoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreatedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoSetTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoSetNameTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoSetAnnouncementTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupApplicationTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberQuitTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationAcceptedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupApplicationRejectedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupOwnerTransferredTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberKickedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInvitedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberEnterTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDismissedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberMutedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberCancelMutedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMutedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCancelMutedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupMemberInfoSetTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FromToUserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationApprovedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendApplicationRejectedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendAddedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendDeletedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackAddedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackDeletedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendInfoChangedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoUpdatedTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatusChangeTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandAddTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandUpdateTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCommandDeleteTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationUpdateTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationSetPrivateTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationHasReadTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeMsgTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRevokedContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearConversationTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMsgsTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarkAsReadTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendsInfoUpdateTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubUserOnlineStatusElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubUserOnlineStatusTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubUserOnlineStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMsgTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRevoked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReverseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReverseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStatusUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStatusUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMsgFromLocalAndServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMsgFromLocalAndServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMessageFromLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMessageFromLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSingleMessageToLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSingleMessageToLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertGroupMessageToLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertGroupMessageToLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdvancedTextMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdvancedTextMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextAtMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTextAtMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCustomMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuoteMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuoteMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdvancedQuoteMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAdvancedQuoteMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCardMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCardMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSoundMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSoundMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFileMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMergerMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMergerMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFaceMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFaceMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateForwardMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateForwardMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadLogsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadLogsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*IMMessage_TextElem)(nil),
		(*IMMessage_CardElem)(nil),
		(*IMMessage_PictureElem)(nil),
		(*IMMessage_SoundElem)(nil),
		(*IMMessage_VideoElem)(nil),
		(*IMMessage_FileElem)(nil),
		(*IMMessage_MergeElem)(nil),
		(*IMMessage_AtTextElem)(nil),
		(*IMMessage_FaceElem)(nil),
		(*IMMessage_LocationElem)(nil),
		(*IMMessage_CustomElem)(nil),
		(*IMMessage_QuoteElem)(nil),
		(*IMMessage_AdvancedTextElem)(nil),
		(*IMMessage_TypingElem)(nil),
		(*IMMessage_StreamElem)(nil),
		(*IMMessage_GroupCreatedTips)(nil),
		(*IMMessage_GroupInfoSetTips)(nil),
		(*IMMessage_GroupInfoSetNameTips)(nil),
		(*IMMessage_GroupInfoSetAnnouncementTips)(nil),
		(*IMMessage_JoinGroupApplicationTips)(nil),
		(*IMMessage_MemberQuitTips)(nil),
		(*IMMessage_GroupApplicationAcceptedTips)(nil),
		(*IMMessage_GroupApplicationRejectedTips)(nil),
		(*IMMessage_GroupOwnerTransferredTips)(nil),
		(*IMMessage_MemberKickedTips)(nil),
		(*IMMessage_MemberInvitedTips)(nil),
		(*IMMessage_MemberEnterTips)(nil),
		(*IMMessage_GroupDismissedTips)(nil),
		(*IMMessage_GroupMemberMutedTips)(nil),
		(*IMMessage_GroupMemberCancelMutedTips)(nil),
		(*IMMessage_GroupMutedTips)(nil),
		(*IMMessage_GroupCancelMutedTips)(nil),
		(*IMMessage_GroupMemberInfoSetTips)(nil),
		(*IMMessage_FriendApplicationTips)(nil),
		(*IMMessage_FriendApplicationApprovedTips)(nil),
		(*IMMessage_FriendApplicationRejectedTips)(nil),
		(*IMMessage_FriendAddedTips)(nil),
		(*IMMessage_FriendDeletedTips)(nil),
		(*IMMessage_BlackAddedTips)(nil),
		(*IMMessage_BlackDeletedTips)(nil),
		(*IMMessage_FriendInfoChangedTips)(nil),
		(*IMMessage_UserInfoUpdatedTips)(nil),
		(*IMMessage_UserStatusChangeTips)(nil),
		(*IMMessage_UserCommandAddTips)(nil),
		(*IMMessage_UserCommandUpdateTips)(nil),
		(*IMMessage_UserCommandDeleteTips)(nil),
		(*IMMessage_ConversationUpdateTips)(nil),
		(*IMMessage_ConversationSetPrivateTips)(nil),
		(*IMMessage_ConversationHasReadTips)(nil),
		(*IMMessage_DeleteMessageTips)(nil),
		(*IMMessage_RevokeMsgTips)(nil),
		(*IMMessage_ClearConversationTips)(nil),
		(*IMMessage_DeleteMsgsTips)(nil),
		(*IMMessage_MarkAsReadTips)(nil),
		(*IMMessage_FriendsInfoUpdateTips)(nil),
		(*IMMessage_SubUserOnlineStatusTips)(nil),
		(*IMMessage_StreamMsgTips)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   134,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
