// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0
// source: message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID     string   `protobuf:"bytes,1,opt,name=groupID,proto3" json:"groupID,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	MsgIDList   []string `protobuf:"bytes,3,rep,name=msgIDList,proto3" json:"msgIDList,omitempty"`
	ReadTime    int64    `protobuf:"varint,4,opt,name=readTime,proto3" json:"readTime,omitempty"`
	MsgFrom     int32    `protobuf:"varint,5,opt,name=msgFrom,proto3" json:"msgFrom,omitempty"`
	ContentType int32    `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType,omitempty"`
	SessionType int32    `protobuf:"varint,7,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
}

func (x *MessageReceipt) Reset() {
	*x = MessageReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReceipt) ProtoMessage() {}

func (x *MessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReceipt.ProtoReflect.Descriptor instead.
func (*MessageReceipt) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageReceipt) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MessageReceipt) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MessageReceipt) GetMsgIDList() []string {
	if x != nil {
		return x.MsgIDList
	}
	return nil
}

func (x *MessageReceipt) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

func (x *MessageReceipt) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MessageReceipt) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MessageReceipt) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

type MessageRevoked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevokerID                   string `protobuf:"bytes,1,opt,name=revokerID,proto3" json:"revokerID,omitempty"`
	RevokerRole                 int32  `protobuf:"varint,2,opt,name=revokerRole,proto3" json:"revokerRole,omitempty"`
	ClientMsgID                 string `protobuf:"bytes,3,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	RevokerNickname             string `protobuf:"bytes,4,opt,name=revokerNickname,proto3" json:"revokerNickname,omitempty"`
	RevokeTime                  int64  `protobuf:"varint,5,opt,name=revokeTime,proto3" json:"revokeTime,omitempty"`
	SourceMessageSendTime       int64  `protobuf:"varint,6,opt,name=sourceMessageSendTime,proto3" json:"sourceMessageSendTime,omitempty"`
	SourceMessageSendID         string `protobuf:"bytes,7,opt,name=sourceMessageSendID,proto3" json:"sourceMessageSendID,omitempty"`
	SourceMessageSenderNickname string `protobuf:"bytes,8,opt,name=sourceMessageSenderNickname,proto3" json:"sourceMessageSenderNickname,omitempty"`
	SessionType                 int32  `protobuf:"varint,9,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	Seq                         int64  `protobuf:"varint,10,opt,name=seq,proto3" json:"seq,omitempty"`
	Ex                          string `protobuf:"bytes,11,opt,name=ex,proto3" json:"ex,omitempty"`
	IsAdminRevoke               bool   `protobuf:"varint,12,opt,name=isAdminRevoke,proto3" json:"isAdminRevoke,omitempty"`
}

func (x *MessageRevoked) Reset() {
	*x = MessageRevoked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRevoked) ProtoMessage() {}

func (x *MessageRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRevoked.ProtoReflect.Descriptor instead.
func (*MessageRevoked) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageRevoked) GetRevokerID() string {
	if x != nil {
		return x.RevokerID
	}
	return ""
}

func (x *MessageRevoked) GetRevokerRole() int32 {
	if x != nil {
		return x.RevokerRole
	}
	return 0
}

func (x *MessageRevoked) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MessageRevoked) GetRevokerNickname() string {
	if x != nil {
		return x.RevokerNickname
	}
	return ""
}

func (x *MessageRevoked) GetRevokeTime() int64 {
	if x != nil {
		return x.RevokeTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendTime() int64 {
	if x != nil {
		return x.SourceMessageSendTime
	}
	return 0
}

func (x *MessageRevoked) GetSourceMessageSendID() string {
	if x != nil {
		return x.SourceMessageSendID
	}
	return ""
}

func (x *MessageRevoked) GetSourceMessageSenderNickname() string {
	if x != nil {
		return x.SourceMessageSenderNickname
	}
	return ""
}

func (x *MessageRevoked) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageRevoked) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MessageRevoked) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MessageRevoked) GetIsAdminRevoke() bool {
	if x != nil {
		return x.IsAdminRevoke
	}
	return false
}

type MessageReaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID  string `protobuf:"bytes,1,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	ReactionType int32  `protobuf:"varint,2,opt,name=reactionType,proto3" json:"reactionType,omitempty"`
	Counter      int32  `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	UserID       string `protobuf:"bytes,4,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID      string `protobuf:"bytes,5,opt,name=groupID,proto3" json:"groupID,omitempty"`
	SessionType  int32  `protobuf:"varint,6,opt,name=sessionType,proto3" json:"sessionType,omitempty"`
	Info         string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *MessageReaction) Reset() {
	*x = MessageReaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReaction) ProtoMessage() {}

func (x *MessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReaction.ProtoReflect.Descriptor instead.
func (*MessageReaction) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *MessageReaction) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MessageReaction) GetReactionType() int32 {
	if x != nil {
		return x.ReactionType
	}
	return 0
}

func (x *MessageReaction) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *MessageReaction) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *MessageReaction) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MessageReaction) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MessageReaction) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  int32  `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (x *ImageInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PictureBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid   string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Size   int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Width  int32  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Url    string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *PictureBaseInfo) Reset() {
	*x = PictureBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureBaseInfo) ProtoMessage() {}

func (x *PictureBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureBaseInfo.ProtoReflect.Descriptor instead.
func (*PictureBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *PictureBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PictureBaseInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PictureBaseInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PictureBaseInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PictureBaseInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PictureBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SoundBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=soundPath,proto3" json:"soundPath,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=dataSize,proto3" json:"dataSize,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=soundType,proto3" json:"soundType,omitempty"`
}

func (x *SoundBaseInfo) Reset() {
	*x = SoundBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundBaseInfo) ProtoMessage() {}

func (x *SoundBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundBaseInfo.ProtoReflect.Descriptor instead.
func (*SoundBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *SoundBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundBaseInfo) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundBaseInfo) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *SoundBaseInfo) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundBaseInfo) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=videoPath,proto3" json:"videoPath,omitempty"`
	VideoUUID      string `protobuf:"bytes,2,opt,name=videoUUID,proto3" json:"videoUUID,omitempty"`
	VideoURL       string `protobuf:"bytes,3,opt,name=videoURL,proto3" json:"videoURL,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=videoType,proto3" json:"videoType,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=videoSize,proto3" json:"videoSize,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshotPath,proto3" json:"snapshotPath,omitempty"`
	SnapshotUUID   string `protobuf:"bytes,8,opt,name=snapshotUUID,proto3" json:"snapshotUUID,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshotSize,proto3" json:"snapshotSize,omitempty"`
	SnapshotURL    string `protobuf:"bytes,10,opt,name=snapshotURL,proto3" json:"snapshotURL,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshotWidth,proto3" json:"snapshotWidth,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshotHeight,proto3" json:"snapshotHeight,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshotType,proto3" json:"snapshotType,omitempty"`
}

func (x *VideoBaseInfo) Reset() {
	*x = VideoBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoBaseInfo) ProtoMessage() {}

func (x *VideoBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoBaseInfo.ProtoReflect.Descriptor instead.
func (*VideoBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *VideoBaseInfo) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoUUID() string {
	if x != nil {
		return x.VideoUUID
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoURL() string {
	if x != nil {
		return x.VideoURL
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoBaseInfo) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoBaseInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotUUID() string {
	if x != nil {
		return x.SnapshotUUID
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotURL() string {
	if x != nil {
		return x.SnapshotURL
	}
	return ""
}

func (x *VideoBaseInfo) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoBaseInfo) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *FileBaseInfo) Reset() {
	*x = FileBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBaseInfo) ProtoMessage() {}

func (x *FileBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBaseInfo.ProtoReflect.Descriptor instead.
func (*FileBaseInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *FileBaseInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileBaseInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileBaseInfo) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *FileBaseInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileBaseInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileBaseInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type TextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TextElem) Reset() {
	*x = TextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextElem) ProtoMessage() {}

func (x *TextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextElem.ProtoReflect.Descriptor instead.
func (*TextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *TextElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CardElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FaceURL  string `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Ex       string `protobuf:"bytes,4,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *CardElem) Reset() {
	*x = CardElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardElem) ProtoMessage() {}

func (x *CardElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardElem.ProtoReflect.Descriptor instead.
func (*CardElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *CardElem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CardElem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CardElem) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *CardElem) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type PictureElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourcePath      string           `protobuf:"bytes,1,opt,name=sourcePath,proto3" json:"sourcePath,omitempty"`
	SourcePicture   *PictureBaseInfo `protobuf:"bytes,2,opt,name=sourcePicture,proto3" json:"sourcePicture,omitempty"`
	BigPicture      *PictureBaseInfo `protobuf:"bytes,3,opt,name=bigPicture,proto3" json:"bigPicture,omitempty"`
	SnapshotPicture *PictureBaseInfo `protobuf:"bytes,4,opt,name=snapshotPicture,proto3" json:"snapshotPicture,omitempty"`
}

func (x *PictureElem) Reset() {
	*x = PictureElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureElem) ProtoMessage() {}

func (x *PictureElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureElem.ProtoReflect.Descriptor instead.
func (*PictureElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *PictureElem) GetSourcePath() string {
	if x != nil {
		return x.SourcePath
	}
	return ""
}

func (x *PictureElem) GetSourcePicture() *PictureBaseInfo {
	if x != nil {
		return x.SourcePicture
	}
	return nil
}

func (x *PictureElem) GetBigPicture() *PictureBaseInfo {
	if x != nil {
		return x.BigPicture
	}
	return nil
}

func (x *PictureElem) GetSnapshotPicture() *PictureBaseInfo {
	if x != nil {
		return x.SnapshotPicture
	}
	return nil
}

type SoundElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SoundPath string `protobuf:"bytes,2,opt,name=soundPath,proto3" json:"soundPath,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	DataSize  int64  `protobuf:"varint,4,opt,name=dataSize,proto3" json:"dataSize,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	SoundType string `protobuf:"bytes,6,opt,name=soundType,proto3" json:"soundType,omitempty"`
}

func (x *SoundElem) Reset() {
	*x = SoundElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SoundElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundElem) ProtoMessage() {}

func (x *SoundElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundElem.ProtoReflect.Descriptor instead.
func (*SoundElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{11}
}

func (x *SoundElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SoundElem) GetSoundPath() string {
	if x != nil {
		return x.SoundPath
	}
	return ""
}

func (x *SoundElem) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *SoundElem) GetDataSize() int64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *SoundElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SoundElem) GetSoundType() string {
	if x != nil {
		return x.SoundType
	}
	return ""
}

type VideoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoPath      string `protobuf:"bytes,1,opt,name=videoPath,proto3" json:"videoPath,omitempty"`
	VideoUUID      string `protobuf:"bytes,2,opt,name=videoUUID,proto3" json:"videoUUID,omitempty"`
	VideoURL       string `protobuf:"bytes,3,opt,name=videoURL,proto3" json:"videoURL,omitempty"`
	VideoType      string `protobuf:"bytes,4,opt,name=videoType,proto3" json:"videoType,omitempty"`
	VideoSize      int64  `protobuf:"varint,5,opt,name=videoSize,proto3" json:"videoSize,omitempty"`
	Duration       int64  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	SnapshotPath   string `protobuf:"bytes,7,opt,name=snapshotPath,proto3" json:"snapshotPath,omitempty"`
	SnapshotUUID   string `protobuf:"bytes,8,opt,name=snapshotUUID,proto3" json:"snapshotUUID,omitempty"`
	SnapshotSize   int64  `protobuf:"varint,9,opt,name=snapshotSize,proto3" json:"snapshotSize,omitempty"`
	SnapshotURL    string `protobuf:"bytes,10,opt,name=snapshotURL,proto3" json:"snapshotURL,omitempty"`
	SnapshotWidth  int32  `protobuf:"varint,11,opt,name=snapshotWidth,proto3" json:"snapshotWidth,omitempty"`
	SnapshotHeight int32  `protobuf:"varint,12,opt,name=snapshotHeight,proto3" json:"snapshotHeight,omitempty"`
	SnapshotType   string `protobuf:"bytes,13,opt,name=snapshotType,proto3" json:"snapshotType,omitempty"`
}

func (x *VideoElem) Reset() {
	*x = VideoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoElem) ProtoMessage() {}

func (x *VideoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoElem.ProtoReflect.Descriptor instead.
func (*VideoElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{12}
}

func (x *VideoElem) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoElem) GetVideoUUID() string {
	if x != nil {
		return x.VideoUUID
	}
	return ""
}

func (x *VideoElem) GetVideoURL() string {
	if x != nil {
		return x.VideoURL
	}
	return ""
}

func (x *VideoElem) GetVideoType() string {
	if x != nil {
		return x.VideoType
	}
	return ""
}

func (x *VideoElem) GetVideoSize() int64 {
	if x != nil {
		return x.VideoSize
	}
	return 0
}

func (x *VideoElem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *VideoElem) GetSnapshotPath() string {
	if x != nil {
		return x.SnapshotPath
	}
	return ""
}

func (x *VideoElem) GetSnapshotUUID() string {
	if x != nil {
		return x.SnapshotUUID
	}
	return ""
}

func (x *VideoElem) GetSnapshotSize() int64 {
	if x != nil {
		return x.SnapshotSize
	}
	return 0
}

func (x *VideoElem) GetSnapshotURL() string {
	if x != nil {
		return x.SnapshotURL
	}
	return ""
}

func (x *VideoElem) GetSnapshotWidth() int32 {
	if x != nil {
		return x.SnapshotWidth
	}
	return 0
}

func (x *VideoElem) GetSnapshotHeight() int32 {
	if x != nil {
		return x.SnapshotHeight
	}
	return 0
}

func (x *VideoElem) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

type FileElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath  string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceURL string `protobuf:"bytes,3,opt,name=sourceURL,proto3" json:"sourceURL,omitempty"`
	FileName  string `protobuf:"bytes,4,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileSize  int64  `protobuf:"varint,5,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileType  string `protobuf:"bytes,6,opt,name=fileType,proto3" json:"fileType,omitempty"`
}

func (x *FileElem) Reset() {
	*x = FileElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileElem) ProtoMessage() {}

func (x *FileElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileElem.ProtoReflect.Descriptor instead.
func (*FileElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{13}
}

func (x *FileElem) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileElem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FileElem) GetSourceURL() string {
	if x != nil {
		return x.SourceURL
	}
	return ""
}

func (x *FileElem) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileElem) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileElem) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type MergeElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AbstractList      []string         `protobuf:"bytes,2,rep,name=abstractList,proto3" json:"abstractList,omitempty"`
	MultiMessage      []*MsgStruct     `protobuf:"bytes,3,rep,name=multiMessage,proto3" json:"multiMessage,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,4,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *MergeElem) Reset() {
	*x = MergeElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeElem) ProtoMessage() {}

func (x *MergeElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeElem.ProtoReflect.Descriptor instead.
func (*MergeElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{14}
}

func (x *MergeElem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MergeElem) GetAbstractList() []string {
	if x != nil {
		return x.AbstractList
	}
	return nil
}

func (x *MergeElem) GetMultiMessage() []*MsgStruct {
	if x != nil {
		return x.MultiMessage
	}
	return nil
}

func (x *MergeElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type AtTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         string     `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	AtUserList   []string   `protobuf:"bytes,2,rep,name=atUserList,proto3" json:"atUserList,omitempty"`
	AtUsersInfo  []*AtInfo  `protobuf:"bytes,3,rep,name=atUsersInfo,proto3" json:"atUsersInfo,omitempty"`
	QuoteMessage *MsgStruct `protobuf:"bytes,4,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
	IsAtSelf     bool       `protobuf:"varint,5,opt,name=isAtSelf,proto3" json:"isAtSelf,omitempty"`
}

func (x *AtTextElem) Reset() {
	*x = AtTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtTextElem) ProtoMessage() {}

func (x *AtTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtTextElem.ProtoReflect.Descriptor instead.
func (*AtTextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{15}
}

func (x *AtTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AtTextElem) GetAtUserList() []string {
	if x != nil {
		return x.AtUserList
	}
	return nil
}

func (x *AtTextElem) GetAtUsersInfo() []*AtInfo {
	if x != nil {
		return x.AtUsersInfo
	}
	return nil
}

func (x *AtTextElem) GetQuoteMessage() *MsgStruct {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *AtTextElem) GetIsAtSelf() bool {
	if x != nil {
		return x.IsAtSelf
	}
	return false
}

type FaceElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data  string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *FaceElem) Reset() {
	*x = FaceElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaceElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceElem) ProtoMessage() {}

func (x *FaceElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceElem.ProtoReflect.Descriptor instead.
func (*FaceElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{16}
}

func (x *FaceElem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *FaceElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type LocationElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string  `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude    float64 `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
}

func (x *LocationElem) Reset() {
	*x = LocationElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationElem) ProtoMessage() {}

func (x *LocationElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationElem.ProtoReflect.Descriptor instead.
func (*LocationElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{17}
}

func (x *LocationElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LocationElem) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationElem) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type CustomElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Extension   string `protobuf:"bytes,3,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *CustomElem) Reset() {
	*x = CustomElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomElem) ProtoMessage() {}

func (x *CustomElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomElem.ProtoReflect.Descriptor instead.
func (*CustomElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{18}
}

func (x *CustomElem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CustomElem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomElem) GetExtension() string {
	if x != nil {
		return x.Extension
	}
	return ""
}

type QuoteElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	QuoteMessage      *MsgStruct       `protobuf:"bytes,2,opt,name=quoteMessage,proto3" json:"quoteMessage,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,3,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *QuoteElem) Reset() {
	*x = QuoteElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteElem) ProtoMessage() {}

func (x *QuoteElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteElem.ProtoReflect.Descriptor instead.
func (*QuoteElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{19}
}

func (x *QuoteElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QuoteElem) GetQuoteMessage() *MsgStruct {
	if x != nil {
		return x.QuoteMessage
	}
	return nil
}

func (x *QuoteElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type NotificationElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail string `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *NotificationElem) Reset() {
	*x = NotificationElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationElem) ProtoMessage() {}

func (x *NotificationElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationElem.ProtoReflect.Descriptor instead.
func (*NotificationElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{20}
}

func (x *NotificationElem) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type AdvancedTextElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text              string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	MessageEntityList []*MessageEntity `protobuf:"bytes,2,rep,name=messageEntityList,proto3" json:"messageEntityList,omitempty"`
}

func (x *AdvancedTextElem) Reset() {
	*x = AdvancedTextElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvancedTextElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedTextElem) ProtoMessage() {}

func (x *AdvancedTextElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedTextElem.ProtoReflect.Descriptor instead.
func (*AdvancedTextElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{21}
}

func (x *AdvancedTextElem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdvancedTextElem) GetMessageEntityList() []*MessageEntity {
	if x != nil {
		return x.MessageEntityList
	}
	return nil
}

type TypingElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgTips string `protobuf:"bytes,1,opt,name=msgTips,proto3" json:"msgTips,omitempty"`
}

func (x *TypingElem) Reset() {
	*x = TypingElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingElem) ProtoMessage() {}

func (x *TypingElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingElem.ProtoReflect.Descriptor instead.
func (*TypingElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{22}
}

func (x *TypingElem) GetMsgTips() string {
	if x != nil {
		return x.MsgTips
	}
	return ""
}

type StreamElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Content string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Packets []string `protobuf:"bytes,3,rep,name=packets,proto3" json:"packets,omitempty"`
	End     bool     `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *StreamElem) Reset() {
	*x = StreamElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamElem) ProtoMessage() {}

func (x *StreamElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamElem.ProtoReflect.Descriptor instead.
func (*StreamElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{23}
}

func (x *StreamElem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StreamElem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *StreamElem) GetPackets() []string {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *StreamElem) GetEnd() bool {
	if x != nil {
		return x.End
	}
	return false
}

type AtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AtUserID      string `protobuf:"bytes,1,opt,name=atUserID,proto3" json:"atUserID,omitempty"`
	GroupNickname string `protobuf:"bytes,2,opt,name=groupNickname,proto3" json:"groupNickname,omitempty"`
}

func (x *AtInfo) Reset() {
	*x = AtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtInfo) ProtoMessage() {}

func (x *AtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtInfo.ProtoReflect.Descriptor instead.
func (*AtInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{24}
}

func (x *AtInfo) GetAtUserID() string {
	if x != nil {
		return x.AtUserID
	}
	return ""
}

func (x *AtInfo) GetGroupNickname() string {
	if x != nil {
		return x.GroupNickname
	}
	return ""
}

type AttachedInfoElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHasReadInfo *GroupHasReadInfo `protobuf:"bytes,1,opt,name=groupHasReadInfo,proto3" json:"groupHasReadInfo,omitempty"`
	IsPrivateChat    bool              `protobuf:"varint,2,opt,name=isPrivateChat,proto3" json:"isPrivateChat,omitempty"`
	BurnDuration     int32             `protobuf:"varint,3,opt,name=burnDuration,proto3" json:"burnDuration,omitempty"`
	HasReadTime      int64             `protobuf:"varint,4,opt,name=hasReadTime,proto3" json:"hasReadTime,omitempty"`
	Progress         *UploadProgress   `protobuf:"bytes,5,opt,name=progress,proto3" json:"progress,omitempty"`
}

func (x *AttachedInfoElem) Reset() {
	*x = AttachedInfoElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachedInfoElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachedInfoElem) ProtoMessage() {}

func (x *AttachedInfoElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachedInfoElem.ProtoReflect.Descriptor instead.
func (*AttachedInfoElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{25}
}

func (x *AttachedInfoElem) GetGroupHasReadInfo() *GroupHasReadInfo {
	if x != nil {
		return x.GroupHasReadInfo
	}
	return nil
}

func (x *AttachedInfoElem) GetIsPrivateChat() bool {
	if x != nil {
		return x.IsPrivateChat
	}
	return false
}

func (x *AttachedInfoElem) GetBurnDuration() int32 {
	if x != nil {
		return x.BurnDuration
	}
	return 0
}

func (x *AttachedInfoElem) GetHasReadTime() int64 {
	if x != nil {
		return x.HasReadTime
	}
	return 0
}

func (x *AttachedInfoElem) GetProgress() *UploadProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

type UploadProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    int64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Save     int64  `protobuf:"varint,2,opt,name=save,proto3" json:"save,omitempty"`
	Current  int64  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	UploadID string `protobuf:"bytes,4,opt,name=uploadID,proto3" json:"uploadID,omitempty"`
}

func (x *UploadProgress) Reset() {
	*x = UploadProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProgress) ProtoMessage() {}

func (x *UploadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProgress.ProtoReflect.Descriptor instead.
func (*UploadProgress) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{26}
}

func (x *UploadProgress) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UploadProgress) GetSave() int64 {
	if x != nil {
		return x.Save
	}
	return 0
}

func (x *UploadProgress) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UploadProgress) GetUploadID() string {
	if x != nil {
		return x.UploadID
	}
	return ""
}

type ReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter          int32               `protobuf:"varint,1,opt,name=counter,proto3" json:"counter,omitempty"`
	Type             int32               `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	UserReactionList []*UserReactionElem `protobuf:"bytes,3,rep,name=userReactionList,proto3" json:"userReactionList,omitempty"`
	CanRepeat        bool                `protobuf:"varint,4,opt,name=canRepeat,proto3" json:"canRepeat,omitempty"`
	Info             string              `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ReactionElem) Reset() {
	*x = ReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionElem) ProtoMessage() {}

func (x *ReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionElem.ProtoReflect.Descriptor instead.
func (*ReactionElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{27}
}

func (x *ReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *ReactionElem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ReactionElem) GetUserReactionList() []*UserReactionElem {
	if x != nil {
		return x.UserReactionList
	}
	return nil
}

func (x *ReactionElem) GetCanRepeat() bool {
	if x != nil {
		return x.CanRepeat
	}
	return false
}

func (x *ReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserReactionElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Counter int32  `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	Info    string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UserReactionElem) Reset() {
	*x = UserReactionElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserReactionElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserReactionElem) ProtoMessage() {}

func (x *UserReactionElem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserReactionElem.ProtoReflect.Descriptor instead.
func (*UserReactionElem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{28}
}

func (x *UserReactionElem) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserReactionElem) GetCounter() int32 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *UserReactionElem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type MessageEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length int32  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Ex     string `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex,omitempty"`
}

func (x *MessageEntity) Reset() {
	*x = MessageEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEntity) ProtoMessage() {}

func (x *MessageEntity) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEntity.ProtoReflect.Descriptor instead.
func (*MessageEntity) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{29}
}

func (x *MessageEntity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MessageEntity) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MessageEntity) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MessageEntity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MessageEntity) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

type GroupHasReadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasReadUserIDList []string `protobuf:"bytes,1,rep,name=hasReadUserIDList,proto3" json:"hasReadUserIDList,omitempty"`
	HasReadCount      int32    `protobuf:"varint,2,opt,name=hasReadCount,proto3" json:"hasReadCount,omitempty"`
	GroupMemberCount  int32    `protobuf:"varint,3,opt,name=groupMemberCount,proto3" json:"groupMemberCount,omitempty"`
}

func (x *GroupHasReadInfo) Reset() {
	*x = GroupHasReadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupHasReadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupHasReadInfo) ProtoMessage() {}

func (x *GroupHasReadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupHasReadInfo.ProtoReflect.Descriptor instead.
func (*GroupHasReadInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{30}
}

func (x *GroupHasReadInfo) GetHasReadUserIDList() []string {
	if x != nil {
		return x.HasReadUserIDList
	}
	return nil
}

func (x *GroupHasReadInfo) GetHasReadCount() int32 {
	if x != nil {
		return x.HasReadCount
	}
	return 0
}

func (x *GroupHasReadInfo) GetGroupMemberCount() int32 {
	if x != nil {
		return x.GroupMemberCount
	}
	return 0
}

type MsgStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientMsgID      string           `protobuf:"bytes,1,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
	ServerMsgID      string           `protobuf:"bytes,2,opt,name=serverMsgID,proto3" json:"serverMsgID,omitempty"`
	CreateTime       int64            `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	SendTime         int64            `protobuf:"varint,4,opt,name=sendTime,proto3" json:"sendTime,omitempty"`
	SessionType      SessionType      `protobuf:"varint,5,opt,name=sessionType,proto3,enum=openim.sdk.common.SessionType" json:"sessionType,omitempty"`
	SendID           string           `protobuf:"bytes,6,opt,name=sendID,proto3" json:"sendID,omitempty"`
	RecvID           string           `protobuf:"bytes,7,opt,name=recvID,proto3" json:"recvID,omitempty"`
	MsgFrom          MsgFrom          `protobuf:"varint,8,opt,name=msgFrom,proto3,enum=openim.sdk.common.MsgFrom" json:"msgFrom,omitempty"`
	ContentType      ContentType      `protobuf:"varint,9,opt,name=contentType,proto3,enum=openim.sdk.common.ContentType" json:"contentType,omitempty"`
	SenderPlatformID Platform         `protobuf:"varint,10,opt,name=senderPlatformID,proto3,enum=openim.sdk.common.Platform" json:"senderPlatformID,omitempty"`
	SenderNickname   string           `protobuf:"bytes,11,opt,name=senderNickname,proto3" json:"senderNickname,omitempty"`
	SenderFaceURL    string           `protobuf:"bytes,12,opt,name=senderFaceURL,proto3" json:"senderFaceURL,omitempty"`
	GroupID          string           `protobuf:"bytes,13,opt,name=groupID,proto3" json:"groupID,omitempty"`
	Seq              int64            `protobuf:"varint,15,opt,name=seq,proto3" json:"seq,omitempty"`
	IsRead           bool             `protobuf:"varint,16,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Status           MsgStatus        `protobuf:"varint,17,opt,name=status,proto3,enum=openim.sdk.common.MsgStatus" json:"status,omitempty"`
	OfflinePush      *OfflinePushInfo `protobuf:"bytes,18,opt,name=offlinePush,proto3" json:"offlinePush,omitempty"`
	Ex               string           `protobuf:"bytes,20,opt,name=ex,proto3" json:"ex,omitempty"`
	LocalEx          string           `protobuf:"bytes,21,opt,name=localEx,proto3" json:"localEx,omitempty"`
	// Types that are assignable to Content:
	//
	//	*MsgStruct_TextElem
	//	*MsgStruct_CardElem
	//	*MsgStruct_PictureElem
	//	*MsgStruct_SoundElem
	//	*MsgStruct_VideoElem
	//	*MsgStruct_FileElem
	//	*MsgStruct_MergeElem
	//	*MsgStruct_AtTextElem
	//	*MsgStruct_FaceElem
	//	*MsgStruct_LocationElem
	//	*MsgStruct_CustomElem
	//	*MsgStruct_QuoteElem
	//	*MsgStruct_NotificationElem
	//	*MsgStruct_AdvancedTextElem
	//	*MsgStruct_TypingElem
	//	*MsgStruct_StreamElem
	Content          isMsgStruct_Content `protobuf_oneof:"content"`
	AttachedInfoElem *AttachedInfoElem   `protobuf:"bytes,39,opt,name=attachedInfoElem,proto3" json:"attachedInfoElem,omitempty"`
}

func (x *MsgStruct) Reset() {
	*x = MsgStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStruct) ProtoMessage() {}

func (x *MsgStruct) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStruct.ProtoReflect.Descriptor instead.
func (*MsgStruct) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{31}
}

func (x *MsgStruct) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *MsgStruct) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *MsgStruct) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MsgStruct) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MsgStruct) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_SessionType_
}

func (x *MsgStruct) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *MsgStruct) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *MsgStruct) GetMsgFrom() MsgFrom {
	if x != nil {
		return x.MsgFrom
	}
	return MsgFrom_MsgFrom_
}

func (x *MsgStruct) GetContentType() ContentType {
	if x != nil {
		return x.ContentType
	}
	return ContentType_ContentType_
}

func (x *MsgStruct) GetSenderPlatformID() Platform {
	if x != nil {
		return x.SenderPlatformID
	}
	return Platform_Platform_
}

func (x *MsgStruct) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *MsgStruct) GetSenderFaceURL() string {
	if x != nil {
		return x.SenderFaceURL
	}
	return ""
}

func (x *MsgStruct) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MsgStruct) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *MsgStruct) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *MsgStruct) GetStatus() MsgStatus {
	if x != nil {
		return x.Status
	}
	return MsgStatus_MsgStatus_
}

func (x *MsgStruct) GetOfflinePush() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePush
	}
	return nil
}

func (x *MsgStruct) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *MsgStruct) GetLocalEx() string {
	if x != nil {
		return x.LocalEx
	}
	return ""
}

func (m *MsgStruct) GetContent() isMsgStruct_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *MsgStruct) GetTextElem() *TextElem {
	if x, ok := x.GetContent().(*MsgStruct_TextElem); ok {
		return x.TextElem
	}
	return nil
}

func (x *MsgStruct) GetCardElem() *CardElem {
	if x, ok := x.GetContent().(*MsgStruct_CardElem); ok {
		return x.CardElem
	}
	return nil
}

func (x *MsgStruct) GetPictureElem() *PictureElem {
	if x, ok := x.GetContent().(*MsgStruct_PictureElem); ok {
		return x.PictureElem
	}
	return nil
}

func (x *MsgStruct) GetSoundElem() *SoundElem {
	if x, ok := x.GetContent().(*MsgStruct_SoundElem); ok {
		return x.SoundElem
	}
	return nil
}

func (x *MsgStruct) GetVideoElem() *VideoElem {
	if x, ok := x.GetContent().(*MsgStruct_VideoElem); ok {
		return x.VideoElem
	}
	return nil
}

func (x *MsgStruct) GetFileElem() *FileElem {
	if x, ok := x.GetContent().(*MsgStruct_FileElem); ok {
		return x.FileElem
	}
	return nil
}

func (x *MsgStruct) GetMergeElem() *MergeElem {
	if x, ok := x.GetContent().(*MsgStruct_MergeElem); ok {
		return x.MergeElem
	}
	return nil
}

func (x *MsgStruct) GetAtTextElem() *AtTextElem {
	if x, ok := x.GetContent().(*MsgStruct_AtTextElem); ok {
		return x.AtTextElem
	}
	return nil
}

func (x *MsgStruct) GetFaceElem() *FaceElem {
	if x, ok := x.GetContent().(*MsgStruct_FaceElem); ok {
		return x.FaceElem
	}
	return nil
}

func (x *MsgStruct) GetLocationElem() *LocationElem {
	if x, ok := x.GetContent().(*MsgStruct_LocationElem); ok {
		return x.LocationElem
	}
	return nil
}

func (x *MsgStruct) GetCustomElem() *CustomElem {
	if x, ok := x.GetContent().(*MsgStruct_CustomElem); ok {
		return x.CustomElem
	}
	return nil
}

func (x *MsgStruct) GetQuoteElem() *QuoteElem {
	if x, ok := x.GetContent().(*MsgStruct_QuoteElem); ok {
		return x.QuoteElem
	}
	return nil
}

func (x *MsgStruct) GetNotificationElem() *NotificationElem {
	if x, ok := x.GetContent().(*MsgStruct_NotificationElem); ok {
		return x.NotificationElem
	}
	return nil
}

func (x *MsgStruct) GetAdvancedTextElem() *AdvancedTextElem {
	if x, ok := x.GetContent().(*MsgStruct_AdvancedTextElem); ok {
		return x.AdvancedTextElem
	}
	return nil
}

func (x *MsgStruct) GetTypingElem() *TypingElem {
	if x, ok := x.GetContent().(*MsgStruct_TypingElem); ok {
		return x.TypingElem
	}
	return nil
}

func (x *MsgStruct) GetStreamElem() *StreamElem {
	if x, ok := x.GetContent().(*MsgStruct_StreamElem); ok {
		return x.StreamElem
	}
	return nil
}

func (x *MsgStruct) GetAttachedInfoElem() *AttachedInfoElem {
	if x != nil {
		return x.AttachedInfoElem
	}
	return nil
}

type isMsgStruct_Content interface {
	isMsgStruct_Content()
}

type MsgStruct_TextElem struct {
	TextElem *TextElem `protobuf:"bytes,23,opt,name=textElem,proto3,oneof"`
}

type MsgStruct_CardElem struct {
	CardElem *CardElem `protobuf:"bytes,24,opt,name=cardElem,proto3,oneof"`
}

type MsgStruct_PictureElem struct {
	PictureElem *PictureElem `protobuf:"bytes,25,opt,name=pictureElem,proto3,oneof"`
}

type MsgStruct_SoundElem struct {
	SoundElem *SoundElem `protobuf:"bytes,26,opt,name=soundElem,proto3,oneof"`
}

type MsgStruct_VideoElem struct {
	VideoElem *VideoElem `protobuf:"bytes,27,opt,name=videoElem,proto3,oneof"`
}

type MsgStruct_FileElem struct {
	FileElem *FileElem `protobuf:"bytes,28,opt,name=fileElem,proto3,oneof"`
}

type MsgStruct_MergeElem struct {
	MergeElem *MergeElem `protobuf:"bytes,29,opt,name=mergeElem,proto3,oneof"`
}

type MsgStruct_AtTextElem struct {
	AtTextElem *AtTextElem `protobuf:"bytes,30,opt,name=atTextElem,proto3,oneof"`
}

type MsgStruct_FaceElem struct {
	FaceElem *FaceElem `protobuf:"bytes,31,opt,name=faceElem,proto3,oneof"`
}

type MsgStruct_LocationElem struct {
	LocationElem *LocationElem `protobuf:"bytes,32,opt,name=locationElem,proto3,oneof"`
}

type MsgStruct_CustomElem struct {
	CustomElem *CustomElem `protobuf:"bytes,33,opt,name=customElem,proto3,oneof"`
}

type MsgStruct_QuoteElem struct {
	QuoteElem *QuoteElem `protobuf:"bytes,34,opt,name=quoteElem,proto3,oneof"`
}

type MsgStruct_NotificationElem struct {
	NotificationElem *NotificationElem `protobuf:"bytes,35,opt,name=notificationElem,proto3,oneof"`
}

type MsgStruct_AdvancedTextElem struct {
	AdvancedTextElem *AdvancedTextElem `protobuf:"bytes,36,opt,name=advancedTextElem,proto3,oneof"`
}

type MsgStruct_TypingElem struct {
	TypingElem *TypingElem `protobuf:"bytes,37,opt,name=typingElem,proto3,oneof"`
}

type MsgStruct_StreamElem struct {
	StreamElem *StreamElem `protobuf:"bytes,38,opt,name=streamElem,proto3,oneof"`
}

func (*MsgStruct_TextElem) isMsgStruct_Content() {}

func (*MsgStruct_CardElem) isMsgStruct_Content() {}

func (*MsgStruct_PictureElem) isMsgStruct_Content() {}

func (*MsgStruct_SoundElem) isMsgStruct_Content() {}

func (*MsgStruct_VideoElem) isMsgStruct_Content() {}

func (*MsgStruct_FileElem) isMsgStruct_Content() {}

func (*MsgStruct_MergeElem) isMsgStruct_Content() {}

func (*MsgStruct_AtTextElem) isMsgStruct_Content() {}

func (*MsgStruct_FaceElem) isMsgStruct_Content() {}

func (*MsgStruct_LocationElem) isMsgStruct_Content() {}

func (*MsgStruct_CustomElem) isMsgStruct_Content() {}

func (*MsgStruct_QuoteElem) isMsgStruct_Content() {}

func (*MsgStruct_NotificationElem) isMsgStruct_Content() {}

func (*MsgStruct_AdvancedTextElem) isMsgStruct_Content() {}

func (*MsgStruct_TypingElem) isMsgStruct_Content() {}

func (*MsgStruct_StreamElem) isMsgStruct_Content() {}

type GetAdvancedHistoryMessageListParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID   string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	StartClientMsgID string `protobuf:"bytes,2,opt,name=startClientMsgID,proto3" json:"startClientMsgID,omitempty"`
	Count            int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAdvancedHistoryMessageListParams) Reset() {
	*x = GetAdvancedHistoryMessageListParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListParams) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListParams) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListParams.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListParams) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{32}
}

func (x *GetAdvancedHistoryMessageListParams) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListParams) GetStartClientMsgID() string {
	if x != nil {
		return x.StartClientMsgID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListParams) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAdvancedHistoryMessageListCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageList []*MsgStruct `protobuf:"bytes,1,rep,name=messageList,proto3" json:"messageList,omitempty"`
	IsEnd       bool         `protobuf:"varint,2,opt,name=isEnd,proto3" json:"isEnd,omitempty"`
	ErrCode     int32        `protobuf:"varint,3,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg      string       `protobuf:"bytes,4,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *GetAdvancedHistoryMessageListCallback) Reset() {
	*x = GetAdvancedHistoryMessageListCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListCallback) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListCallback) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListCallback.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListCallback) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{33}
}

func (x *GetAdvancedHistoryMessageListCallback) GetMessageList() []*MsgStruct {
	if x != nil {
		return x.MessageList
	}
	return nil
}

func (x *GetAdvancedHistoryMessageListCallback) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *GetAdvancedHistoryMessageListCallback) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *GetAdvancedHistoryMessageListCallback) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

// ------------------------------------------------------------------------------------------------------
type SendMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message         *MsgStruct       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	RecvID          string           `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID,omitempty"`
	GroupID         string           `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID,omitempty"`
	OfflinePushInfo *OfflinePushInfo `protobuf:"bytes,4,opt,name=offlinePushInfo,proto3" json:"offlinePushInfo,omitempty"`
	IsOnlineOnly    bool             `protobuf:"varint,5,opt,name=isOnlineOnly,proto3" json:"isOnlineOnly,omitempty"`
}

func (x *SendMessageReq) Reset() {
	*x = SendMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageReq) ProtoMessage() {}

func (x *SendMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageReq.ProtoReflect.Descriptor instead.
func (*SendMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{34}
}

func (x *SendMessageReq) GetMessage() *MsgStruct {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *SendMessageReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SendMessageReq) GetOfflinePushInfo() *OfflinePushInfo {
	if x != nil {
		return x.OfflinePushInfo
	}
	return nil
}

func (x *SendMessageReq) GetIsOnlineOnly() bool {
	if x != nil {
		return x.IsOnlineOnly
	}
	return false
}

type SendMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *MsgStruct `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageResp) Reset() {
	*x = SendMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResp) ProtoMessage() {}

func (x *SendMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResp.ProtoReflect.Descriptor instead.
func (*SendMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{35}
}

func (x *SendMessageResp) GetMessage() *MsgStruct {
	if x != nil {
		return x.Message
	}
	return nil
}

type GetAdvancedHistoryMessageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID                      string                               `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	GetAdvancedHistoryMessageListParams *GetAdvancedHistoryMessageListParams `protobuf:"bytes,2,opt,name=getAdvancedHistoryMessageListParams,proto3" json:"getAdvancedHistoryMessageListParams,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReq) Reset() {
	*x = GetAdvancedHistoryMessageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReq) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReq.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{36}
}

func (x *GetAdvancedHistoryMessageListReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListReq) GetGetAdvancedHistoryMessageListParams() *GetAdvancedHistoryMessageListParams {
	if x != nil {
		return x.GetAdvancedHistoryMessageListParams
	}
	return nil
}

type GetAdvancedHistoryMessageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAdvancedHistoryMessageListCallback *GetAdvancedHistoryMessageListCallback `protobuf:"bytes,1,opt,name=getAdvancedHistoryMessageListCallback,proto3" json:"getAdvancedHistoryMessageListCallback,omitempty"`
}

func (x *GetAdvancedHistoryMessageListResp) Reset() {
	*x = GetAdvancedHistoryMessageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListResp) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListResp.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{37}
}

func (x *GetAdvancedHistoryMessageListResp) GetGetAdvancedHistoryMessageListCallback() *GetAdvancedHistoryMessageListCallback {
	if x != nil {
		return x.GetAdvancedHistoryMessageListCallback
	}
	return nil
}

type GetAdvancedHistoryMessageListReverseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID                      string                               `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	GetAdvancedHistoryMessageListParams *GetAdvancedHistoryMessageListParams `protobuf:"bytes,2,opt,name=getAdvancedHistoryMessageListParams,proto3" json:"getAdvancedHistoryMessageListParams,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReverseReq) Reset() {
	*x = GetAdvancedHistoryMessageListReverseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReverseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReverseReq) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReverseReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReverseReq.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReverseReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{38}
}

func (x *GetAdvancedHistoryMessageListReverseReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetAdvancedHistoryMessageListReverseReq) GetGetAdvancedHistoryMessageListParams() *GetAdvancedHistoryMessageListParams {
	if x != nil {
		return x.GetAdvancedHistoryMessageListParams
	}
	return nil
}

type GetAdvancedHistoryMessageListReverseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetAdvancedHistoryMessageListCallback *GetAdvancedHistoryMessageListCallback `protobuf:"bytes,1,opt,name=getAdvancedHistoryMessageListCallback,proto3" json:"getAdvancedHistoryMessageListCallback,omitempty"`
}

func (x *GetAdvancedHistoryMessageListReverseResp) Reset() {
	*x = GetAdvancedHistoryMessageListReverseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAdvancedHistoryMessageListReverseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdvancedHistoryMessageListReverseResp) ProtoMessage() {}

func (x *GetAdvancedHistoryMessageListReverseResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdvancedHistoryMessageListReverseResp.ProtoReflect.Descriptor instead.
func (*GetAdvancedHistoryMessageListReverseResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{39}
}

func (x *GetAdvancedHistoryMessageListReverseResp) GetGetAdvancedHistoryMessageListCallback() *GetAdvancedHistoryMessageListCallback {
	if x != nil {
		return x.GetAdvancedHistoryMessageListCallback
	}
	return nil
}

type RevokeMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
}

func (x *RevokeMessageReq) Reset() {
	*x = RevokeMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMessageReq) ProtoMessage() {}

func (x *RevokeMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMessageReq.ProtoReflect.Descriptor instead.
func (*RevokeMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{40}
}

func (x *RevokeMessageReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *RevokeMessageReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type RevokeMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RevokeMessageResp) Reset() {
	*x = RevokeMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeMessageResp) ProtoMessage() {}

func (x *RevokeMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeMessageResp.ProtoReflect.Descriptor instead.
func (*RevokeMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{41}
}

type TypingStatusUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecvID string `protobuf:"bytes,1,opt,name=recvID,proto3" json:"recvID,omitempty"`
	MsgTip string `protobuf:"bytes,2,opt,name=msgTip,proto3" json:"msgTip,omitempty"`
}

func (x *TypingStatusUpdateReq) Reset() {
	*x = TypingStatusUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStatusUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStatusUpdateReq) ProtoMessage() {}

func (x *TypingStatusUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStatusUpdateReq.ProtoReflect.Descriptor instead.
func (*TypingStatusUpdateReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{42}
}

func (x *TypingStatusUpdateReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *TypingStatusUpdateReq) GetMsgTip() string {
	if x != nil {
		return x.MsgTip
	}
	return ""
}

type TypingStatusUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TypingStatusUpdateResp) Reset() {
	*x = TypingStatusUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypingStatusUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingStatusUpdateResp) ProtoMessage() {}

func (x *TypingStatusUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingStatusUpdateResp.ProtoReflect.Descriptor instead.
func (*TypingStatusUpdateResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{43}
}

type DeleteMessageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID,omitempty"`
	ClientMsgID    string `protobuf:"bytes,2,opt,name=clientMsgID,proto3" json:"clientMsgID,omitempty"`
}

func (x *DeleteMessageReq) Reset() {
	*x = DeleteMessageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageReq) ProtoMessage() {}

func (x *DeleteMessageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageReq.ProtoReflect.Descriptor instead.
func (*DeleteMessageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteMessageReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *DeleteMessageReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

type DeleteMessageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMessageResp) Reset() {
	*x = DeleteMessageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResp) ProtoMessage() {}

func (x *DeleteMessageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResp.ProtoReflect.Descriptor instead.
func (*DeleteMessageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{45}
}

type DeleteAllMsgFromLocalAndServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMsgFromLocalAndServerReq) Reset() {
	*x = DeleteAllMsgFromLocalAndServerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMsgFromLocalAndServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMsgFromLocalAndServerReq) ProtoMessage() {}

func (x *DeleteAllMsgFromLocalAndServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMsgFromLocalAndServerReq.ProtoReflect.Descriptor instead.
func (*DeleteAllMsgFromLocalAndServerReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{46}
}

type DeleteAllMsgFromLocalAndServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMsgFromLocalAndServerResp) Reset() {
	*x = DeleteAllMsgFromLocalAndServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMsgFromLocalAndServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMsgFromLocalAndServerResp) ProtoMessage() {}

func (x *DeleteAllMsgFromLocalAndServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMsgFromLocalAndServerResp.ProtoReflect.Descriptor instead.
func (*DeleteAllMsgFromLocalAndServerResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{47}
}

type DeleteAllMessageFromLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMessageFromLocalStorageReq) Reset() {
	*x = DeleteAllMessageFromLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMessageFromLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMessageFromLocalStorageReq) ProtoMessage() {}

func (x *DeleteAllMessageFromLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMessageFromLocalStorageReq.ProtoReflect.Descriptor instead.
func (*DeleteAllMessageFromLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{48}
}

type DeleteAllMessageFromLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAllMessageFromLocalStorageResp) Reset() {
	*x = DeleteAllMessageFromLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllMessageFromLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllMessageFromLocalStorageResp) ProtoMessage() {}

func (x *DeleteAllMessageFromLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllMessageFromLocalStorageResp.ProtoReflect.Descriptor instead.
func (*DeleteAllMessageFromLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{49}
}

type InsertSingleMessageToLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    *MsgStruct `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	RecvID string     `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID,omitempty"`
	SendID string     `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID,omitempty"`
}

func (x *InsertSingleMessageToLocalStorageReq) Reset() {
	*x = InsertSingleMessageToLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSingleMessageToLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSingleMessageToLocalStorageReq) ProtoMessage() {}

func (x *InsertSingleMessageToLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSingleMessageToLocalStorageReq.ProtoReflect.Descriptor instead.
func (*InsertSingleMessageToLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{50}
}

func (x *InsertSingleMessageToLocalStorageReq) GetMsg() *MsgStruct {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InsertSingleMessageToLocalStorageReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *InsertSingleMessageToLocalStorageReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

type InsertSingleMessageToLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *MsgStruct `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InsertSingleMessageToLocalStorageResp) Reset() {
	*x = InsertSingleMessageToLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertSingleMessageToLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSingleMessageToLocalStorageResp) ProtoMessage() {}

func (x *InsertSingleMessageToLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSingleMessageToLocalStorageResp.ProtoReflect.Descriptor instead.
func (*InsertSingleMessageToLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{51}
}

func (x *InsertSingleMessageToLocalStorageResp) GetMsg() *MsgStruct {
	if x != nil {
		return x.Msg
	}
	return nil
}

type InsertGroupMessageToLocalStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg     *MsgStruct `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	GroupID string     `protobuf:"bytes,2,opt,name=groupID,proto3" json:"groupID,omitempty"`
	SendID  string     `protobuf:"bytes,3,opt,name=sendID,proto3" json:"sendID,omitempty"`
}

func (x *InsertGroupMessageToLocalStorageReq) Reset() {
	*x = InsertGroupMessageToLocalStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertGroupMessageToLocalStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertGroupMessageToLocalStorageReq) ProtoMessage() {}

func (x *InsertGroupMessageToLocalStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertGroupMessageToLocalStorageReq.ProtoReflect.Descriptor instead.
func (*InsertGroupMessageToLocalStorageReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{52}
}

func (x *InsertGroupMessageToLocalStorageReq) GetMsg() *MsgStruct {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *InsertGroupMessageToLocalStorageReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *InsertGroupMessageToLocalStorageReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

type InsertGroupMessageToLocalStorageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg *MsgStruct `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *InsertGroupMessageToLocalStorageResp) Reset() {
	*x = InsertGroupMessageToLocalStorageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InsertGroupMessageToLocalStorageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertGroupMessageToLocalStorageResp) ProtoMessage() {}

func (x *InsertGroupMessageToLocalStorageResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertGroupMessageToLocalStorageResp.ProtoReflect.Descriptor instead.
func (*InsertGroupMessageToLocalStorageResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{53}
}

func (x *InsertGroupMessageToLocalStorageResp) GetMsg() *MsgStruct {
	if x != nil {
		return x.Msg
	}
	return nil
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xda, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x73, 0x67, 0x49, 0x44,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd0,
	0x03, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x15, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x1b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x65,
	0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x61, 0x0a,
	0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x0d, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a,
	0x08, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x8c, 0x02,
	0x0a, 0x0b, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x49, 0x0a,
	0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x62, 0x69, 0x67, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x62, 0x69, 0x67, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a,
	0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0xb1, 0x01, 0x0a,
	0x09, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xbb, 0x03, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x55, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x52, 0x4c, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac,
	0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd9, 0x01,
	0x0a, 0x09, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x0a, 0x41, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0c, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x41, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x41, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x22, 0x34, 0x0a, 0x08, 0x46, 0x61, 0x63,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x6a, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x60, 0x0a, 0x0a, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x01,
	0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x41, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x2a, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x77, 0x0a, 0x10, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4f, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x69,
	0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73,
	0x22, 0x66, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x4a, 0x0a, 0x06, 0x41, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24,
	0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x10, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x61,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x61, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x44, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x75, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x22, 0x90, 0x01,
	0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x68,
	0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xfc, 0x0e, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44,
	0x12, 0x34, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x10, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x78, 0x12, 0x3a, 0x0a, 0x08, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65,
	0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x43, 0x0a, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x6f, 0x75, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x6c,
	0x65, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x3d, 0x0a, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12,
	0x40, 0x0a, 0x0a, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65,
	0x6d, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x46, 0x0a,
	0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x6c, 0x65, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x52, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x52, 0x0a, 0x10, 0x61, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63,
	0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x10, 0x61, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x40,
	0x0a, 0x0a, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6c, 0x65, 0x6d,
	0x12, 0x40, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x45, 0x6c, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x6c,
	0x65, 0x6d, 0x12, 0x50, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6c, 0x65, 0x6d, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6c,
	0x65, 0x6d, 0x52, 0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6c, 0x65, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0x8f, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb0, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0xed, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x12, 0x4c, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xd6, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x89, 0x01,
	0x0a, 0x23, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x23, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x8f, 0x01, 0x0a, 0x25, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x25, 0x67, 0x65, 0x74, 0x41,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x22, 0xdd, 0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x89, 0x01, 0x0a, 0x23, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x23, 0x67, 0x65,
	0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0xbc, 0x01, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x8f,
	0x01, 0x0a, 0x25, 0x67, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x25, 0x67, 0x65, 0x74, 0x41, 0x64,
	0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x22, 0x5c, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x47, 0x0a, 0x15, 0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x63, 0x76, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x22, 0x18, 0x0a, 0x16,
	0x54, 0x79, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5c, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x73, 0x67, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x0a, 0x21, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x24,
	0x0a, 0x22, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x22, 0x26, 0x0a, 0x24, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x87, 0x01, 0x0a, 0x24, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x58, 0x0a,
	0x25, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x23, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x2f, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x49, 0x44, 0x22, 0x57, 0x0a, 0x24, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x42, 0x38, 0x5a, 0x2d, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d,
	0x73, 0x64, 0x6b, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6d, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x33, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x06, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_message_proto_goTypes = []interface{}{
	(*MessageReceipt)(nil),                           // 0: openim.sdk.message.MessageReceipt
	(*MessageRevoked)(nil),                           // 1: openim.sdk.message.MessageRevoked
	(*MessageReaction)(nil),                          // 2: openim.sdk.message.MessageReaction
	(*ImageInfo)(nil),                                // 3: openim.sdk.message.ImageInfo
	(*PictureBaseInfo)(nil),                          // 4: openim.sdk.message.PictureBaseInfo
	(*SoundBaseInfo)(nil),                            // 5: openim.sdk.message.SoundBaseInfo
	(*VideoBaseInfo)(nil),                            // 6: openim.sdk.message.VideoBaseInfo
	(*FileBaseInfo)(nil),                             // 7: openim.sdk.message.FileBaseInfo
	(*TextElem)(nil),                                 // 8: openim.sdk.message.TextElem
	(*CardElem)(nil),                                 // 9: openim.sdk.message.CardElem
	(*PictureElem)(nil),                              // 10: openim.sdk.message.PictureElem
	(*SoundElem)(nil),                                // 11: openim.sdk.message.SoundElem
	(*VideoElem)(nil),                                // 12: openim.sdk.message.VideoElem
	(*FileElem)(nil),                                 // 13: openim.sdk.message.FileElem
	(*MergeElem)(nil),                                // 14: openim.sdk.message.MergeElem
	(*AtTextElem)(nil),                               // 15: openim.sdk.message.AtTextElem
	(*FaceElem)(nil),                                 // 16: openim.sdk.message.FaceElem
	(*LocationElem)(nil),                             // 17: openim.sdk.message.LocationElem
	(*CustomElem)(nil),                               // 18: openim.sdk.message.CustomElem
	(*QuoteElem)(nil),                                // 19: openim.sdk.message.QuoteElem
	(*NotificationElem)(nil),                         // 20: openim.sdk.message.NotificationElem
	(*AdvancedTextElem)(nil),                         // 21: openim.sdk.message.AdvancedTextElem
	(*TypingElem)(nil),                               // 22: openim.sdk.message.TypingElem
	(*StreamElem)(nil),                               // 23: openim.sdk.message.StreamElem
	(*AtInfo)(nil),                                   // 24: openim.sdk.message.AtInfo
	(*AttachedInfoElem)(nil),                         // 25: openim.sdk.message.AttachedInfoElem
	(*UploadProgress)(nil),                           // 26: openim.sdk.message.UploadProgress
	(*ReactionElem)(nil),                             // 27: openim.sdk.message.ReactionElem
	(*UserReactionElem)(nil),                         // 28: openim.sdk.message.UserReactionElem
	(*MessageEntity)(nil),                            // 29: openim.sdk.message.MessageEntity
	(*GroupHasReadInfo)(nil),                         // 30: openim.sdk.message.GroupHasReadInfo
	(*MsgStruct)(nil),                                // 31: openim.sdk.message.MsgStruct
	(*GetAdvancedHistoryMessageListParams)(nil),      // 32: openim.sdk.message.GetAdvancedHistoryMessageListParams
	(*GetAdvancedHistoryMessageListCallback)(nil),    // 33: openim.sdk.message.GetAdvancedHistoryMessageListCallback
	(*SendMessageReq)(nil),                           // 34: openim.sdk.message.SendMessageReq
	(*SendMessageResp)(nil),                          // 35: openim.sdk.message.SendMessageResp
	(*GetAdvancedHistoryMessageListReq)(nil),         // 36: openim.sdk.message.GetAdvancedHistoryMessageListReq
	(*GetAdvancedHistoryMessageListResp)(nil),        // 37: openim.sdk.message.GetAdvancedHistoryMessageListResp
	(*GetAdvancedHistoryMessageListReverseReq)(nil),  // 38: openim.sdk.message.GetAdvancedHistoryMessageListReverseReq
	(*GetAdvancedHistoryMessageListReverseResp)(nil), // 39: openim.sdk.message.GetAdvancedHistoryMessageListReverseResp
	(*RevokeMessageReq)(nil),                         // 40: openim.sdk.message.RevokeMessageReq
	(*RevokeMessageResp)(nil),                        // 41: openim.sdk.message.RevokeMessageResp
	(*TypingStatusUpdateReq)(nil),                    // 42: openim.sdk.message.TypingStatusUpdateReq
	(*TypingStatusUpdateResp)(nil),                   // 43: openim.sdk.message.TypingStatusUpdateResp
	(*DeleteMessageReq)(nil),                         // 44: openim.sdk.message.DeleteMessageReq
	(*DeleteMessageResp)(nil),                        // 45: openim.sdk.message.DeleteMessageResp
	(*DeleteAllMsgFromLocalAndServerReq)(nil),        // 46: openim.sdk.message.DeleteAllMsgFromLocalAndServerReq
	(*DeleteAllMsgFromLocalAndServerResp)(nil),       // 47: openim.sdk.message.DeleteAllMsgFromLocalAndServerResp
	(*DeleteAllMessageFromLocalStorageReq)(nil),      // 48: openim.sdk.message.DeleteAllMessageFromLocalStorageReq
	(*DeleteAllMessageFromLocalStorageResp)(nil),     // 49: openim.sdk.message.DeleteAllMessageFromLocalStorageResp
	(*InsertSingleMessageToLocalStorageReq)(nil),     // 50: openim.sdk.message.InsertSingleMessageToLocalStorageReq
	(*InsertSingleMessageToLocalStorageResp)(nil),    // 51: openim.sdk.message.InsertSingleMessageToLocalStorageResp
	(*InsertGroupMessageToLocalStorageReq)(nil),      // 52: openim.sdk.message.InsertGroupMessageToLocalStorageReq
	(*InsertGroupMessageToLocalStorageResp)(nil),     // 53: openim.sdk.message.InsertGroupMessageToLocalStorageResp
	(SessionType)(0),                                 // 54: openim.sdk.common.SessionType
	(MsgFrom)(0),                                     // 55: openim.sdk.common.MsgFrom
	(ContentType)(0),                                 // 56: openim.sdk.common.ContentType
	(Platform)(0),                                    // 57: openim.sdk.common.Platform
	(MsgStatus)(0),                                   // 58: openim.sdk.common.MsgStatus
	(*OfflinePushInfo)(nil),                          // 59: openim.sdk.common.OfflinePushInfo
}
var file_message_proto_depIdxs = []int32{
	4,  // 0: openim.sdk.message.PictureElem.sourcePicture:type_name -> openim.sdk.message.PictureBaseInfo
	4,  // 1: openim.sdk.message.PictureElem.bigPicture:type_name -> openim.sdk.message.PictureBaseInfo
	4,  // 2: openim.sdk.message.PictureElem.snapshotPicture:type_name -> openim.sdk.message.PictureBaseInfo
	31, // 3: openim.sdk.message.MergeElem.multiMessage:type_name -> openim.sdk.message.MsgStruct
	29, // 4: openim.sdk.message.MergeElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	24, // 5: openim.sdk.message.AtTextElem.atUsersInfo:type_name -> openim.sdk.message.AtInfo
	31, // 6: openim.sdk.message.AtTextElem.quoteMessage:type_name -> openim.sdk.message.MsgStruct
	31, // 7: openim.sdk.message.QuoteElem.quoteMessage:type_name -> openim.sdk.message.MsgStruct
	29, // 8: openim.sdk.message.QuoteElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	29, // 9: openim.sdk.message.AdvancedTextElem.messageEntityList:type_name -> openim.sdk.message.MessageEntity
	30, // 10: openim.sdk.message.AttachedInfoElem.groupHasReadInfo:type_name -> openim.sdk.message.GroupHasReadInfo
	26, // 11: openim.sdk.message.AttachedInfoElem.progress:type_name -> openim.sdk.message.UploadProgress
	28, // 12: openim.sdk.message.ReactionElem.userReactionList:type_name -> openim.sdk.message.UserReactionElem
	54, // 13: openim.sdk.message.MsgStruct.sessionType:type_name -> openim.sdk.common.SessionType
	55, // 14: openim.sdk.message.MsgStruct.msgFrom:type_name -> openim.sdk.common.MsgFrom
	56, // 15: openim.sdk.message.MsgStruct.contentType:type_name -> openim.sdk.common.ContentType
	57, // 16: openim.sdk.message.MsgStruct.senderPlatformID:type_name -> openim.sdk.common.Platform
	58, // 17: openim.sdk.message.MsgStruct.status:type_name -> openim.sdk.common.MsgStatus
	59, // 18: openim.sdk.message.MsgStruct.offlinePush:type_name -> openim.sdk.common.OfflinePushInfo
	8,  // 19: openim.sdk.message.MsgStruct.textElem:type_name -> openim.sdk.message.TextElem
	9,  // 20: openim.sdk.message.MsgStruct.cardElem:type_name -> openim.sdk.message.CardElem
	10, // 21: openim.sdk.message.MsgStruct.pictureElem:type_name -> openim.sdk.message.PictureElem
	11, // 22: openim.sdk.message.MsgStruct.soundElem:type_name -> openim.sdk.message.SoundElem
	12, // 23: openim.sdk.message.MsgStruct.videoElem:type_name -> openim.sdk.message.VideoElem
	13, // 24: openim.sdk.message.MsgStruct.fileElem:type_name -> openim.sdk.message.FileElem
	14, // 25: openim.sdk.message.MsgStruct.mergeElem:type_name -> openim.sdk.message.MergeElem
	15, // 26: openim.sdk.message.MsgStruct.atTextElem:type_name -> openim.sdk.message.AtTextElem
	16, // 27: openim.sdk.message.MsgStruct.faceElem:type_name -> openim.sdk.message.FaceElem
	17, // 28: openim.sdk.message.MsgStruct.locationElem:type_name -> openim.sdk.message.LocationElem
	18, // 29: openim.sdk.message.MsgStruct.customElem:type_name -> openim.sdk.message.CustomElem
	19, // 30: openim.sdk.message.MsgStruct.quoteElem:type_name -> openim.sdk.message.QuoteElem
	20, // 31: openim.sdk.message.MsgStruct.notificationElem:type_name -> openim.sdk.message.NotificationElem
	21, // 32: openim.sdk.message.MsgStruct.advancedTextElem:type_name -> openim.sdk.message.AdvancedTextElem
	22, // 33: openim.sdk.message.MsgStruct.typingElem:type_name -> openim.sdk.message.TypingElem
	23, // 34: openim.sdk.message.MsgStruct.streamElem:type_name -> openim.sdk.message.StreamElem
	25, // 35: openim.sdk.message.MsgStruct.attachedInfoElem:type_name -> openim.sdk.message.AttachedInfoElem
	31, // 36: openim.sdk.message.GetAdvancedHistoryMessageListCallback.messageList:type_name -> openim.sdk.message.MsgStruct
	31, // 37: openim.sdk.message.SendMessageReq.message:type_name -> openim.sdk.message.MsgStruct
	59, // 38: openim.sdk.message.SendMessageReq.offlinePushInfo:type_name -> openim.sdk.common.OfflinePushInfo
	31, // 39: openim.sdk.message.SendMessageResp.message:type_name -> openim.sdk.message.MsgStruct
	32, // 40: openim.sdk.message.GetAdvancedHistoryMessageListReq.getAdvancedHistoryMessageListParams:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListParams
	33, // 41: openim.sdk.message.GetAdvancedHistoryMessageListResp.getAdvancedHistoryMessageListCallback:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListCallback
	32, // 42: openim.sdk.message.GetAdvancedHistoryMessageListReverseReq.getAdvancedHistoryMessageListParams:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListParams
	33, // 43: openim.sdk.message.GetAdvancedHistoryMessageListReverseResp.getAdvancedHistoryMessageListCallback:type_name -> openim.sdk.message.GetAdvancedHistoryMessageListCallback
	31, // 44: openim.sdk.message.InsertSingleMessageToLocalStorageReq.msg:type_name -> openim.sdk.message.MsgStruct
	31, // 45: openim.sdk.message.InsertSingleMessageToLocalStorageResp.msg:type_name -> openim.sdk.message.MsgStruct
	31, // 46: openim.sdk.message.InsertGroupMessageToLocalStorageReq.msg:type_name -> openim.sdk.message.MsgStruct
	31, // 47: openim.sdk.message.InsertGroupMessageToLocalStorageResp.msg:type_name -> openim.sdk.message.MsgStruct
	48, // [48:48] is the sub-list for method output_type
	48, // [48:48] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageRevoked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageReaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SoundElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaceElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvancedTextElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachedInfoElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserReactionElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupHasReadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReverseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAdvancedHistoryMessageListReverseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStatusUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypingStatusUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMsgFromLocalAndServerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMsgFromLocalAndServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMessageFromLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllMessageFromLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSingleMessageToLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertSingleMessageToLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertGroupMessageToLocalStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InsertGroupMessageToLocalStorageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[31].OneofWrappers = []interface{}{
		(*MsgStruct_TextElem)(nil),
		(*MsgStruct_CardElem)(nil),
		(*MsgStruct_PictureElem)(nil),
		(*MsgStruct_SoundElem)(nil),
		(*MsgStruct_VideoElem)(nil),
		(*MsgStruct_FileElem)(nil),
		(*MsgStruct_MergeElem)(nil),
		(*MsgStruct_AtTextElem)(nil),
		(*MsgStruct_FaceElem)(nil),
		(*MsgStruct_LocationElem)(nil),
		(*MsgStruct_CustomElem)(nil),
		(*MsgStruct_QuoteElem)(nil),
		(*MsgStruct_NotificationElem)(nil),
		(*MsgStruct_AdvancedTextElem)(nil),
		(*MsgStruct_TypingElem)(nil),
		(*MsgStruct_StreamElem)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
